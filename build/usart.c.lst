ARM GAS  /tmp/ccCHG8GY.s 			page 1


   1              		.cpu cortex-m3
   2              		.arch armv7-m
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"usart.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.file 1 "Core/Src/usart.c"
  18              		.section	.text.MX_USART1_UART_Init,"ax",%progbits
  19              		.align	1
  20              		.global	MX_USART1_UART_Init
  21              		.syntax unified
  22              		.thumb
  23              		.thumb_func
  25              	MX_USART1_UART_Init:
  26              	.LFB65:
   1:Core/Src/usart.c **** /* USER CODE BEGIN Header */
   2:Core/Src/usart.c **** /**
   3:Core/Src/usart.c ****   ******************************************************************************
   4:Core/Src/usart.c ****   * @file    usart.c
   5:Core/Src/usart.c ****   * @brief   This file provides code for the configuration
   6:Core/Src/usart.c ****   *          of the USART instances.
   7:Core/Src/usart.c ****   ******************************************************************************
   8:Core/Src/usart.c ****   * @attention
   9:Core/Src/usart.c ****   *
  10:Core/Src/usart.c ****   * Copyright (c) 2024 STMicroelectronics.
  11:Core/Src/usart.c ****   * All rights reserved.
  12:Core/Src/usart.c ****   *
  13:Core/Src/usart.c ****   * This software is licensed under terms that can be found in the LICENSE file
  14:Core/Src/usart.c ****   * in the root directory of this software component.
  15:Core/Src/usart.c ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  16:Core/Src/usart.c ****   *
  17:Core/Src/usart.c ****   ******************************************************************************
  18:Core/Src/usart.c ****   */
  19:Core/Src/usart.c **** /* USER CODE END Header */
  20:Core/Src/usart.c **** /* Includes ------------------------------------------------------------------*/
  21:Core/Src/usart.c **** #include "usart.h"
  22:Core/Src/usart.c **** 
  23:Core/Src/usart.c **** /* USER CODE BEGIN 0 */
  24:Core/Src/usart.c **** 
  25:Core/Src/usart.c **** /* USER CODE END 0 */
  26:Core/Src/usart.c **** 
  27:Core/Src/usart.c **** UART_HandleTypeDef huart1;
  28:Core/Src/usart.c **** UART_HandleTypeDef huart2;
  29:Core/Src/usart.c **** DMA_HandleTypeDef hdma_usart1_rx;
  30:Core/Src/usart.c **** DMA_HandleTypeDef hdma_usart1_tx;
  31:Core/Src/usart.c **** DMA_HandleTypeDef hdma_usart2_rx;
  32:Core/Src/usart.c **** DMA_HandleTypeDef hdma_usart2_tx;
ARM GAS  /tmp/ccCHG8GY.s 			page 2


  33:Core/Src/usart.c **** 
  34:Core/Src/usart.c **** /* USART1 init function */
  35:Core/Src/usart.c **** 
  36:Core/Src/usart.c **** void MX_USART1_UART_Init(void)
  37:Core/Src/usart.c **** {
  27              		.loc 1 37 1 view -0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 0
  30              		@ frame_needed = 0, uses_anonymous_args = 0
  31 0000 08B5     		push	{r3, lr}
  32              	.LCFI0:
  33              		.cfi_def_cfa_offset 8
  34              		.cfi_offset 3, -8
  35              		.cfi_offset 14, -4
  38:Core/Src/usart.c **** 
  39:Core/Src/usart.c ****   /* USER CODE BEGIN USART1_Init 0 */
  40:Core/Src/usart.c **** 
  41:Core/Src/usart.c ****   /* USER CODE END USART1_Init 0 */
  42:Core/Src/usart.c **** 
  43:Core/Src/usart.c ****   /* USER CODE BEGIN USART1_Init 1 */
  44:Core/Src/usart.c **** 
  45:Core/Src/usart.c ****   /* USER CODE END USART1_Init 1 */
  46:Core/Src/usart.c ****   huart1.Instance = USART1;
  36              		.loc 1 46 3 view .LVU1
  37              		.loc 1 46 19 is_stmt 0 view .LVU2
  38 0002 0A48     		ldr	r0, .L5
  39 0004 0A4B     		ldr	r3, .L5+4
  40 0006 0360     		str	r3, [r0]
  47:Core/Src/usart.c ****   huart1.Init.BaudRate = 115200;
  41              		.loc 1 47 3 is_stmt 1 view .LVU3
  42              		.loc 1 47 24 is_stmt 0 view .LVU4
  43 0008 4FF4E133 		mov	r3, #115200
  44 000c 4360     		str	r3, [r0, #4]
  48:Core/Src/usart.c ****   huart1.Init.WordLength = UART_WORDLENGTH_8B;
  45              		.loc 1 48 3 is_stmt 1 view .LVU5
  46              		.loc 1 48 26 is_stmt 0 view .LVU6
  47 000e 0023     		movs	r3, #0
  48 0010 8360     		str	r3, [r0, #8]
  49:Core/Src/usart.c ****   huart1.Init.StopBits = UART_STOPBITS_1;
  49              		.loc 1 49 3 is_stmt 1 view .LVU7
  50              		.loc 1 49 24 is_stmt 0 view .LVU8
  51 0012 C360     		str	r3, [r0, #12]
  50:Core/Src/usart.c ****   huart1.Init.Parity = UART_PARITY_NONE;
  52              		.loc 1 50 3 is_stmt 1 view .LVU9
  53              		.loc 1 50 22 is_stmt 0 view .LVU10
  54 0014 0361     		str	r3, [r0, #16]
  51:Core/Src/usart.c ****   huart1.Init.Mode = UART_MODE_TX_RX;
  55              		.loc 1 51 3 is_stmt 1 view .LVU11
  56              		.loc 1 51 20 is_stmt 0 view .LVU12
  57 0016 0C22     		movs	r2, #12
  58 0018 4261     		str	r2, [r0, #20]
  52:Core/Src/usart.c ****   huart1.Init.HwFlowCtl = UART_HWCONTROL_NONE;
  59              		.loc 1 52 3 is_stmt 1 view .LVU13
  60              		.loc 1 52 25 is_stmt 0 view .LVU14
  61 001a 8361     		str	r3, [r0, #24]
  53:Core/Src/usart.c ****   huart1.Init.OverSampling = UART_OVERSAMPLING_16;
  62              		.loc 1 53 3 is_stmt 1 view .LVU15
ARM GAS  /tmp/ccCHG8GY.s 			page 3


  63              		.loc 1 53 28 is_stmt 0 view .LVU16
  64 001c C361     		str	r3, [r0, #28]
  54:Core/Src/usart.c ****   if (HAL_UART_Init(&huart1) != HAL_OK)
  65              		.loc 1 54 3 is_stmt 1 view .LVU17
  66              		.loc 1 54 7 is_stmt 0 view .LVU18
  67 001e FFF7FEFF 		bl	HAL_UART_Init
  68              	.LVL0:
  69              		.loc 1 54 6 discriminator 1 view .LVU19
  70 0022 00B9     		cbnz	r0, .L4
  71              	.L1:
  55:Core/Src/usart.c ****   {
  56:Core/Src/usart.c ****     Error_Handler();
  57:Core/Src/usart.c ****   }
  58:Core/Src/usart.c ****   /* USER CODE BEGIN USART1_Init 2 */
  59:Core/Src/usart.c **** 
  60:Core/Src/usart.c ****   /* USER CODE END USART1_Init 2 */
  61:Core/Src/usart.c **** 
  62:Core/Src/usart.c **** }
  72              		.loc 1 62 1 view .LVU20
  73 0024 08BD     		pop	{r3, pc}
  74              	.L4:
  56:Core/Src/usart.c ****   }
  75              		.loc 1 56 5 is_stmt 1 view .LVU21
  76 0026 FFF7FEFF 		bl	Error_Handler
  77              	.LVL1:
  78              		.loc 1 62 1 is_stmt 0 view .LVU22
  79 002a FBE7     		b	.L1
  80              	.L6:
  81              		.align	2
  82              	.L5:
  83 002c 00000000 		.word	huart1
  84 0030 00380140 		.word	1073821696
  85              		.cfi_endproc
  86              	.LFE65:
  88              		.section	.text.MX_USART2_UART_Init,"ax",%progbits
  89              		.align	1
  90              		.global	MX_USART2_UART_Init
  91              		.syntax unified
  92              		.thumb
  93              		.thumb_func
  95              	MX_USART2_UART_Init:
  96              	.LFB66:
  63:Core/Src/usart.c **** /* USART2 init function */
  64:Core/Src/usart.c **** 
  65:Core/Src/usart.c **** void MX_USART2_UART_Init(void)
  66:Core/Src/usart.c **** {
  97              		.loc 1 66 1 is_stmt 1 view -0
  98              		.cfi_startproc
  99              		@ args = 0, pretend = 0, frame = 0
 100              		@ frame_needed = 0, uses_anonymous_args = 0
 101 0000 08B5     		push	{r3, lr}
 102              	.LCFI1:
 103              		.cfi_def_cfa_offset 8
 104              		.cfi_offset 3, -8
 105              		.cfi_offset 14, -4
  67:Core/Src/usart.c **** 
  68:Core/Src/usart.c ****   /* USER CODE BEGIN USART2_Init 0 */
ARM GAS  /tmp/ccCHG8GY.s 			page 4


  69:Core/Src/usart.c **** 
  70:Core/Src/usart.c ****   /* USER CODE END USART2_Init 0 */
  71:Core/Src/usart.c **** 
  72:Core/Src/usart.c ****   /* USER CODE BEGIN USART2_Init 1 */
  73:Core/Src/usart.c **** 
  74:Core/Src/usart.c ****   /* USER CODE END USART2_Init 1 */
  75:Core/Src/usart.c ****   huart2.Instance = USART2;
 106              		.loc 1 75 3 view .LVU24
 107              		.loc 1 75 19 is_stmt 0 view .LVU25
 108 0002 0A48     		ldr	r0, .L11
 109 0004 0A4B     		ldr	r3, .L11+4
 110 0006 0360     		str	r3, [r0]
  76:Core/Src/usart.c ****   huart2.Init.BaudRate = 115200;
 111              		.loc 1 76 3 is_stmt 1 view .LVU26
 112              		.loc 1 76 24 is_stmt 0 view .LVU27
 113 0008 4FF4E133 		mov	r3, #115200
 114 000c 4360     		str	r3, [r0, #4]
  77:Core/Src/usart.c ****   huart2.Init.WordLength = UART_WORDLENGTH_8B;
 115              		.loc 1 77 3 is_stmt 1 view .LVU28
 116              		.loc 1 77 26 is_stmt 0 view .LVU29
 117 000e 0023     		movs	r3, #0
 118 0010 8360     		str	r3, [r0, #8]
  78:Core/Src/usart.c ****   huart2.Init.StopBits = UART_STOPBITS_1;
 119              		.loc 1 78 3 is_stmt 1 view .LVU30
 120              		.loc 1 78 24 is_stmt 0 view .LVU31
 121 0012 C360     		str	r3, [r0, #12]
  79:Core/Src/usart.c ****   huart2.Init.Parity = UART_PARITY_NONE;
 122              		.loc 1 79 3 is_stmt 1 view .LVU32
 123              		.loc 1 79 22 is_stmt 0 view .LVU33
 124 0014 0361     		str	r3, [r0, #16]
  80:Core/Src/usart.c ****   huart2.Init.Mode = UART_MODE_TX_RX;
 125              		.loc 1 80 3 is_stmt 1 view .LVU34
 126              		.loc 1 80 20 is_stmt 0 view .LVU35
 127 0016 0C22     		movs	r2, #12
 128 0018 4261     		str	r2, [r0, #20]
  81:Core/Src/usart.c ****   huart2.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 129              		.loc 1 81 3 is_stmt 1 view .LVU36
 130              		.loc 1 81 25 is_stmt 0 view .LVU37
 131 001a 8361     		str	r3, [r0, #24]
  82:Core/Src/usart.c ****   huart2.Init.OverSampling = UART_OVERSAMPLING_16;
 132              		.loc 1 82 3 is_stmt 1 view .LVU38
 133              		.loc 1 82 28 is_stmt 0 view .LVU39
 134 001c C361     		str	r3, [r0, #28]
  83:Core/Src/usart.c ****   if (HAL_UART_Init(&huart2) != HAL_OK)
 135              		.loc 1 83 3 is_stmt 1 view .LVU40
 136              		.loc 1 83 7 is_stmt 0 view .LVU41
 137 001e FFF7FEFF 		bl	HAL_UART_Init
 138              	.LVL2:
 139              		.loc 1 83 6 discriminator 1 view .LVU42
 140 0022 00B9     		cbnz	r0, .L10
 141              	.L7:
  84:Core/Src/usart.c ****   {
  85:Core/Src/usart.c ****     Error_Handler();
  86:Core/Src/usart.c ****   }
  87:Core/Src/usart.c ****   /* USER CODE BEGIN USART2_Init 2 */
  88:Core/Src/usart.c **** 
  89:Core/Src/usart.c ****   /* USER CODE END USART2_Init 2 */
ARM GAS  /tmp/ccCHG8GY.s 			page 5


  90:Core/Src/usart.c **** 
  91:Core/Src/usart.c **** }
 142              		.loc 1 91 1 view .LVU43
 143 0024 08BD     		pop	{r3, pc}
 144              	.L10:
  85:Core/Src/usart.c ****   }
 145              		.loc 1 85 5 is_stmt 1 view .LVU44
 146 0026 FFF7FEFF 		bl	Error_Handler
 147              	.LVL3:
 148              		.loc 1 91 1 is_stmt 0 view .LVU45
 149 002a FBE7     		b	.L7
 150              	.L12:
 151              		.align	2
 152              	.L11:
 153 002c 00000000 		.word	huart2
 154 0030 00440040 		.word	1073759232
 155              		.cfi_endproc
 156              	.LFE66:
 158              		.section	.text.HAL_UART_MspInit,"ax",%progbits
 159              		.align	1
 160              		.global	HAL_UART_MspInit
 161              		.syntax unified
 162              		.thumb
 163              		.thumb_func
 165              	HAL_UART_MspInit:
 166              	.LVL4:
 167              	.LFB67:
  92:Core/Src/usart.c **** 
  93:Core/Src/usart.c **** void HAL_UART_MspInit(UART_HandleTypeDef* uartHandle)
  94:Core/Src/usart.c **** {
 168              		.loc 1 94 1 is_stmt 1 view -0
 169              		.cfi_startproc
 170              		@ args = 0, pretend = 0, frame = 32
 171              		@ frame_needed = 0, uses_anonymous_args = 0
 172              		.loc 1 94 1 is_stmt 0 view .LVU47
 173 0000 70B5     		push	{r4, r5, r6, lr}
 174              	.LCFI2:
 175              		.cfi_def_cfa_offset 16
 176              		.cfi_offset 4, -16
 177              		.cfi_offset 5, -12
 178              		.cfi_offset 6, -8
 179              		.cfi_offset 14, -4
 180 0002 88B0     		sub	sp, sp, #32
 181              	.LCFI3:
 182              		.cfi_def_cfa_offset 48
 183 0004 0446     		mov	r4, r0
  95:Core/Src/usart.c **** 
  96:Core/Src/usart.c ****   GPIO_InitTypeDef GPIO_InitStruct = {0};
 184              		.loc 1 96 3 is_stmt 1 view .LVU48
 185              		.loc 1 96 20 is_stmt 0 view .LVU49
 186 0006 0023     		movs	r3, #0
 187 0008 0493     		str	r3, [sp, #16]
 188 000a 0593     		str	r3, [sp, #20]
 189 000c 0693     		str	r3, [sp, #24]
 190 000e 0793     		str	r3, [sp, #28]
  97:Core/Src/usart.c ****   if(uartHandle->Instance==USART1)
 191              		.loc 1 97 3 is_stmt 1 view .LVU50
ARM GAS  /tmp/ccCHG8GY.s 			page 6


 192              		.loc 1 97 16 is_stmt 0 view .LVU51
 193 0010 0368     		ldr	r3, [r0]
 194              		.loc 1 97 5 view .LVU52
 195 0012 5F4A     		ldr	r2, .L27
 196 0014 9342     		cmp	r3, r2
 197 0016 04D0     		beq	.L21
  98:Core/Src/usart.c ****   {
  99:Core/Src/usart.c ****   /* USER CODE BEGIN USART1_MspInit 0 */
 100:Core/Src/usart.c **** 
 101:Core/Src/usart.c ****   /* USER CODE END USART1_MspInit 0 */
 102:Core/Src/usart.c ****     /* USART1 clock enable */
 103:Core/Src/usart.c ****     __HAL_RCC_USART1_CLK_ENABLE();
 104:Core/Src/usart.c **** 
 105:Core/Src/usart.c ****     __HAL_RCC_GPIOA_CLK_ENABLE();
 106:Core/Src/usart.c ****     /**USART1 GPIO Configuration
 107:Core/Src/usart.c ****     PA9     ------> USART1_TX
 108:Core/Src/usart.c ****     PA10     ------> USART1_RX
 109:Core/Src/usart.c ****     */
 110:Core/Src/usart.c ****     GPIO_InitStruct.Pin = GPIO_PIN_9;
 111:Core/Src/usart.c ****     GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 112:Core/Src/usart.c ****     GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 113:Core/Src/usart.c ****     HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 114:Core/Src/usart.c **** 
 115:Core/Src/usart.c ****     GPIO_InitStruct.Pin = GPIO_PIN_10;
 116:Core/Src/usart.c ****     GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 117:Core/Src/usart.c ****     GPIO_InitStruct.Pull = GPIO_NOPULL;
 118:Core/Src/usart.c ****     HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 119:Core/Src/usart.c **** 
 120:Core/Src/usart.c ****     /* USART1 DMA Init */
 121:Core/Src/usart.c ****     /* USART1_RX Init */
 122:Core/Src/usart.c ****     hdma_usart1_rx.Instance = DMA1_Channel5;
 123:Core/Src/usart.c ****     hdma_usart1_rx.Init.Direction = DMA_PERIPH_TO_MEMORY;
 124:Core/Src/usart.c ****     hdma_usart1_rx.Init.PeriphInc = DMA_PINC_DISABLE;
 125:Core/Src/usart.c ****     hdma_usart1_rx.Init.MemInc = DMA_MINC_ENABLE;
 126:Core/Src/usart.c ****     hdma_usart1_rx.Init.PeriphDataAlignment = DMA_PDATAALIGN_BYTE;
 127:Core/Src/usart.c ****     hdma_usart1_rx.Init.MemDataAlignment = DMA_MDATAALIGN_BYTE;
 128:Core/Src/usart.c ****     hdma_usart1_rx.Init.Mode = DMA_NORMAL;
 129:Core/Src/usart.c ****     hdma_usart1_rx.Init.Priority = DMA_PRIORITY_LOW;
 130:Core/Src/usart.c ****     if (HAL_DMA_Init(&hdma_usart1_rx) != HAL_OK)
 131:Core/Src/usart.c ****     {
 132:Core/Src/usart.c ****       Error_Handler();
 133:Core/Src/usart.c ****     }
 134:Core/Src/usart.c **** 
 135:Core/Src/usart.c ****     __HAL_LINKDMA(uartHandle,hdmarx,hdma_usart1_rx);
 136:Core/Src/usart.c **** 
 137:Core/Src/usart.c ****     /* USART1_TX Init */
 138:Core/Src/usart.c ****     hdma_usart1_tx.Instance = DMA1_Channel4;
 139:Core/Src/usart.c ****     hdma_usart1_tx.Init.Direction = DMA_MEMORY_TO_PERIPH;
 140:Core/Src/usart.c ****     hdma_usart1_tx.Init.PeriphInc = DMA_PINC_DISABLE;
 141:Core/Src/usart.c ****     hdma_usart1_tx.Init.MemInc = DMA_MINC_ENABLE;
 142:Core/Src/usart.c ****     hdma_usart1_tx.Init.PeriphDataAlignment = DMA_PDATAALIGN_BYTE;
 143:Core/Src/usart.c ****     hdma_usart1_tx.Init.MemDataAlignment = DMA_MDATAALIGN_BYTE;
 144:Core/Src/usart.c ****     hdma_usart1_tx.Init.Mode = DMA_NORMAL;
 145:Core/Src/usart.c ****     hdma_usart1_tx.Init.Priority = DMA_PRIORITY_LOW;
 146:Core/Src/usart.c ****     if (HAL_DMA_Init(&hdma_usart1_tx) != HAL_OK)
 147:Core/Src/usart.c ****     {
 148:Core/Src/usart.c ****       Error_Handler();
ARM GAS  /tmp/ccCHG8GY.s 			page 7


 149:Core/Src/usart.c ****     }
 150:Core/Src/usart.c **** 
 151:Core/Src/usart.c ****     __HAL_LINKDMA(uartHandle,hdmatx,hdma_usart1_tx);
 152:Core/Src/usart.c **** 
 153:Core/Src/usart.c ****     /* USART1 interrupt Init */
 154:Core/Src/usart.c ****     HAL_NVIC_SetPriority(USART1_IRQn, 5, 0);
 155:Core/Src/usart.c ****     HAL_NVIC_EnableIRQ(USART1_IRQn);
 156:Core/Src/usart.c ****   /* USER CODE BEGIN USART1_MspInit 1 */
 157:Core/Src/usart.c **** 
 158:Core/Src/usart.c ****   /* USER CODE END USART1_MspInit 1 */
 159:Core/Src/usart.c ****   }
 160:Core/Src/usart.c ****   else if(uartHandle->Instance==USART2)
 198              		.loc 1 160 8 is_stmt 1 view .LVU53
 199              		.loc 1 160 10 is_stmt 0 view .LVU54
 200 0018 5E4A     		ldr	r2, .L27+4
 201 001a 9342     		cmp	r3, r2
 202 001c 5DD0     		beq	.L22
 203              	.LVL5:
 204              	.L13:
 161:Core/Src/usart.c ****   {
 162:Core/Src/usart.c ****   /* USER CODE BEGIN USART2_MspInit 0 */
 163:Core/Src/usart.c **** 
 164:Core/Src/usart.c ****   /* USER CODE END USART2_MspInit 0 */
 165:Core/Src/usart.c ****     /* USART2 clock enable */
 166:Core/Src/usart.c ****     __HAL_RCC_USART2_CLK_ENABLE();
 167:Core/Src/usart.c **** 
 168:Core/Src/usart.c ****     __HAL_RCC_GPIOA_CLK_ENABLE();
 169:Core/Src/usart.c ****     /**USART2 GPIO Configuration
 170:Core/Src/usart.c ****     PA2     ------> USART2_TX
 171:Core/Src/usart.c ****     PA3     ------> USART2_RX
 172:Core/Src/usart.c ****     */
 173:Core/Src/usart.c ****     GPIO_InitStruct.Pin = GPIO_PIN_2;
 174:Core/Src/usart.c ****     GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 175:Core/Src/usart.c ****     GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 176:Core/Src/usart.c ****     HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 177:Core/Src/usart.c **** 
 178:Core/Src/usart.c ****     GPIO_InitStruct.Pin = GPIO_PIN_3;
 179:Core/Src/usart.c ****     GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 180:Core/Src/usart.c ****     GPIO_InitStruct.Pull = GPIO_NOPULL;
 181:Core/Src/usart.c ****     HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 182:Core/Src/usart.c **** 
 183:Core/Src/usart.c ****     /* USART2 DMA Init */
 184:Core/Src/usart.c ****     /* USART2_RX Init */
 185:Core/Src/usart.c ****     hdma_usart2_rx.Instance = DMA1_Channel6;
 186:Core/Src/usart.c ****     hdma_usart2_rx.Init.Direction = DMA_PERIPH_TO_MEMORY;
 187:Core/Src/usart.c ****     hdma_usart2_rx.Init.PeriphInc = DMA_PINC_DISABLE;
 188:Core/Src/usart.c ****     hdma_usart2_rx.Init.MemInc = DMA_MINC_ENABLE;
 189:Core/Src/usart.c ****     hdma_usart2_rx.Init.PeriphDataAlignment = DMA_PDATAALIGN_BYTE;
 190:Core/Src/usart.c ****     hdma_usart2_rx.Init.MemDataAlignment = DMA_MDATAALIGN_BYTE;
 191:Core/Src/usart.c ****     hdma_usart2_rx.Init.Mode = DMA_NORMAL;
 192:Core/Src/usart.c ****     hdma_usart2_rx.Init.Priority = DMA_PRIORITY_LOW;
 193:Core/Src/usart.c ****     if (HAL_DMA_Init(&hdma_usart2_rx) != HAL_OK)
 194:Core/Src/usart.c ****     {
 195:Core/Src/usart.c ****       Error_Handler();
 196:Core/Src/usart.c ****     }
 197:Core/Src/usart.c **** 
 198:Core/Src/usart.c ****     __HAL_LINKDMA(uartHandle,hdmarx,hdma_usart2_rx);
ARM GAS  /tmp/ccCHG8GY.s 			page 8


 199:Core/Src/usart.c **** 
 200:Core/Src/usart.c ****     /* USART2_TX Init */
 201:Core/Src/usart.c ****     hdma_usart2_tx.Instance = DMA1_Channel7;
 202:Core/Src/usart.c ****     hdma_usart2_tx.Init.Direction = DMA_MEMORY_TO_PERIPH;
 203:Core/Src/usart.c ****     hdma_usart2_tx.Init.PeriphInc = DMA_PINC_DISABLE;
 204:Core/Src/usart.c ****     hdma_usart2_tx.Init.MemInc = DMA_MINC_ENABLE;
 205:Core/Src/usart.c ****     hdma_usart2_tx.Init.PeriphDataAlignment = DMA_PDATAALIGN_BYTE;
 206:Core/Src/usart.c ****     hdma_usart2_tx.Init.MemDataAlignment = DMA_MDATAALIGN_BYTE;
 207:Core/Src/usart.c ****     hdma_usart2_tx.Init.Mode = DMA_NORMAL;
 208:Core/Src/usart.c ****     hdma_usart2_tx.Init.Priority = DMA_PRIORITY_LOW;
 209:Core/Src/usart.c ****     if (HAL_DMA_Init(&hdma_usart2_tx) != HAL_OK)
 210:Core/Src/usart.c ****     {
 211:Core/Src/usart.c ****       Error_Handler();
 212:Core/Src/usart.c ****     }
 213:Core/Src/usart.c **** 
 214:Core/Src/usart.c ****     __HAL_LINKDMA(uartHandle,hdmatx,hdma_usart2_tx);
 215:Core/Src/usart.c **** 
 216:Core/Src/usart.c ****     /* USART2 interrupt Init */
 217:Core/Src/usart.c ****     HAL_NVIC_SetPriority(USART2_IRQn, 5, 0);
 218:Core/Src/usart.c ****     HAL_NVIC_EnableIRQ(USART2_IRQn);
 219:Core/Src/usart.c ****   /* USER CODE BEGIN USART2_MspInit 1 */
 220:Core/Src/usart.c **** 
 221:Core/Src/usart.c ****   /* USER CODE END USART2_MspInit 1 */
 222:Core/Src/usart.c ****   }
 223:Core/Src/usart.c **** }
 205              		.loc 1 223 1 view .LVU55
 206 001e 08B0     		add	sp, sp, #32
 207              	.LCFI4:
 208              		.cfi_remember_state
 209              		.cfi_def_cfa_offset 16
 210              		@ sp needed
 211 0020 70BD     		pop	{r4, r5, r6, pc}
 212              	.LVL6:
 213              	.L21:
 214              	.LCFI5:
 215              		.cfi_restore_state
 103:Core/Src/usart.c **** 
 216              		.loc 1 103 5 is_stmt 1 view .LVU56
 217              	.LBB2:
 103:Core/Src/usart.c **** 
 218              		.loc 1 103 5 view .LVU57
 103:Core/Src/usart.c **** 
 219              		.loc 1 103 5 view .LVU58
 220 0022 5D4B     		ldr	r3, .L27+8
 221 0024 9A69     		ldr	r2, [r3, #24]
 222 0026 42F48042 		orr	r2, r2, #16384
 223 002a 9A61     		str	r2, [r3, #24]
 103:Core/Src/usart.c **** 
 224              		.loc 1 103 5 view .LVU59
 225 002c 9A69     		ldr	r2, [r3, #24]
 226 002e 02F48042 		and	r2, r2, #16384
 227 0032 0092     		str	r2, [sp]
 103:Core/Src/usart.c **** 
 228              		.loc 1 103 5 view .LVU60
 229 0034 009A     		ldr	r2, [sp]
 230              	.LBE2:
 103:Core/Src/usart.c **** 
ARM GAS  /tmp/ccCHG8GY.s 			page 9


 231              		.loc 1 103 5 view .LVU61
 105:Core/Src/usart.c ****     /**USART1 GPIO Configuration
 232              		.loc 1 105 5 view .LVU62
 233              	.LBB3:
 105:Core/Src/usart.c ****     /**USART1 GPIO Configuration
 234              		.loc 1 105 5 view .LVU63
 105:Core/Src/usart.c ****     /**USART1 GPIO Configuration
 235              		.loc 1 105 5 view .LVU64
 236 0036 9A69     		ldr	r2, [r3, #24]
 237 0038 42F00402 		orr	r2, r2, #4
 238 003c 9A61     		str	r2, [r3, #24]
 105:Core/Src/usart.c ****     /**USART1 GPIO Configuration
 239              		.loc 1 105 5 view .LVU65
 240 003e 9B69     		ldr	r3, [r3, #24]
 241 0040 03F00403 		and	r3, r3, #4
 242 0044 0193     		str	r3, [sp, #4]
 105:Core/Src/usart.c ****     /**USART1 GPIO Configuration
 243              		.loc 1 105 5 view .LVU66
 244 0046 019B     		ldr	r3, [sp, #4]
 245              	.LBE3:
 105:Core/Src/usart.c ****     /**USART1 GPIO Configuration
 246              		.loc 1 105 5 view .LVU67
 110:Core/Src/usart.c ****     GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 247              		.loc 1 110 5 view .LVU68
 110:Core/Src/usart.c ****     GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 248              		.loc 1 110 25 is_stmt 0 view .LVU69
 249 0048 4FF40073 		mov	r3, #512
 250 004c 0493     		str	r3, [sp, #16]
 111:Core/Src/usart.c ****     GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 251              		.loc 1 111 5 is_stmt 1 view .LVU70
 111:Core/Src/usart.c ****     GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 252              		.loc 1 111 26 is_stmt 0 view .LVU71
 253 004e 0223     		movs	r3, #2
 254 0050 0593     		str	r3, [sp, #20]
 112:Core/Src/usart.c ****     HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 255              		.loc 1 112 5 is_stmt 1 view .LVU72
 112:Core/Src/usart.c ****     HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 256              		.loc 1 112 27 is_stmt 0 view .LVU73
 257 0052 0323     		movs	r3, #3
 258 0054 0793     		str	r3, [sp, #28]
 113:Core/Src/usart.c **** 
 259              		.loc 1 113 5 is_stmt 1 view .LVU74
 260 0056 514E     		ldr	r6, .L27+12
 261 0058 04A9     		add	r1, sp, #16
 262 005a 3046     		mov	r0, r6
 263              	.LVL7:
 113:Core/Src/usart.c **** 
 264              		.loc 1 113 5 is_stmt 0 view .LVU75
 265 005c FFF7FEFF 		bl	HAL_GPIO_Init
 266              	.LVL8:
 115:Core/Src/usart.c ****     GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 267              		.loc 1 115 5 is_stmt 1 view .LVU76
 115:Core/Src/usart.c ****     GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 268              		.loc 1 115 25 is_stmt 0 view .LVU77
 269 0060 4FF48063 		mov	r3, #1024
 270 0064 0493     		str	r3, [sp, #16]
 116:Core/Src/usart.c ****     GPIO_InitStruct.Pull = GPIO_NOPULL;
ARM GAS  /tmp/ccCHG8GY.s 			page 10


 271              		.loc 1 116 5 is_stmt 1 view .LVU78
 116:Core/Src/usart.c ****     GPIO_InitStruct.Pull = GPIO_NOPULL;
 272              		.loc 1 116 26 is_stmt 0 view .LVU79
 273 0066 0025     		movs	r5, #0
 274 0068 0595     		str	r5, [sp, #20]
 117:Core/Src/usart.c ****     HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 275              		.loc 1 117 5 is_stmt 1 view .LVU80
 117:Core/Src/usart.c ****     HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 276              		.loc 1 117 26 is_stmt 0 view .LVU81
 277 006a 0695     		str	r5, [sp, #24]
 118:Core/Src/usart.c **** 
 278              		.loc 1 118 5 is_stmt 1 view .LVU82
 279 006c 04A9     		add	r1, sp, #16
 280 006e 3046     		mov	r0, r6
 281 0070 FFF7FEFF 		bl	HAL_GPIO_Init
 282              	.LVL9:
 122:Core/Src/usart.c ****     hdma_usart1_rx.Init.Direction = DMA_PERIPH_TO_MEMORY;
 283              		.loc 1 122 5 view .LVU83
 122:Core/Src/usart.c ****     hdma_usart1_rx.Init.Direction = DMA_PERIPH_TO_MEMORY;
 284              		.loc 1 122 29 is_stmt 0 view .LVU84
 285 0074 4A48     		ldr	r0, .L27+16
 286 0076 4B4B     		ldr	r3, .L27+20
 287 0078 0360     		str	r3, [r0]
 123:Core/Src/usart.c ****     hdma_usart1_rx.Init.PeriphInc = DMA_PINC_DISABLE;
 288              		.loc 1 123 5 is_stmt 1 view .LVU85
 123:Core/Src/usart.c ****     hdma_usart1_rx.Init.PeriphInc = DMA_PINC_DISABLE;
 289              		.loc 1 123 35 is_stmt 0 view .LVU86
 290 007a 4560     		str	r5, [r0, #4]
 124:Core/Src/usart.c ****     hdma_usart1_rx.Init.MemInc = DMA_MINC_ENABLE;
 291              		.loc 1 124 5 is_stmt 1 view .LVU87
 124:Core/Src/usart.c ****     hdma_usart1_rx.Init.MemInc = DMA_MINC_ENABLE;
 292              		.loc 1 124 35 is_stmt 0 view .LVU88
 293 007c 8560     		str	r5, [r0, #8]
 125:Core/Src/usart.c ****     hdma_usart1_rx.Init.PeriphDataAlignment = DMA_PDATAALIGN_BYTE;
 294              		.loc 1 125 5 is_stmt 1 view .LVU89
 125:Core/Src/usart.c ****     hdma_usart1_rx.Init.PeriphDataAlignment = DMA_PDATAALIGN_BYTE;
 295              		.loc 1 125 32 is_stmt 0 view .LVU90
 296 007e 8023     		movs	r3, #128
 297 0080 C360     		str	r3, [r0, #12]
 126:Core/Src/usart.c ****     hdma_usart1_rx.Init.MemDataAlignment = DMA_MDATAALIGN_BYTE;
 298              		.loc 1 126 5 is_stmt 1 view .LVU91
 126:Core/Src/usart.c ****     hdma_usart1_rx.Init.MemDataAlignment = DMA_MDATAALIGN_BYTE;
 299              		.loc 1 126 45 is_stmt 0 view .LVU92
 300 0082 0561     		str	r5, [r0, #16]
 127:Core/Src/usart.c ****     hdma_usart1_rx.Init.Mode = DMA_NORMAL;
 301              		.loc 1 127 5 is_stmt 1 view .LVU93
 127:Core/Src/usart.c ****     hdma_usart1_rx.Init.Mode = DMA_NORMAL;
 302              		.loc 1 127 42 is_stmt 0 view .LVU94
 303 0084 4561     		str	r5, [r0, #20]
 128:Core/Src/usart.c ****     hdma_usart1_rx.Init.Priority = DMA_PRIORITY_LOW;
 304              		.loc 1 128 5 is_stmt 1 view .LVU95
 128:Core/Src/usart.c ****     hdma_usart1_rx.Init.Priority = DMA_PRIORITY_LOW;
 305              		.loc 1 128 30 is_stmt 0 view .LVU96
 306 0086 8561     		str	r5, [r0, #24]
 129:Core/Src/usart.c ****     if (HAL_DMA_Init(&hdma_usart1_rx) != HAL_OK)
 307              		.loc 1 129 5 is_stmt 1 view .LVU97
 129:Core/Src/usart.c ****     if (HAL_DMA_Init(&hdma_usart1_rx) != HAL_OK)
ARM GAS  /tmp/ccCHG8GY.s 			page 11


 308              		.loc 1 129 34 is_stmt 0 view .LVU98
 309 0088 C561     		str	r5, [r0, #28]
 130:Core/Src/usart.c ****     {
 310              		.loc 1 130 5 is_stmt 1 view .LVU99
 130:Core/Src/usart.c ****     {
 311              		.loc 1 130 9 is_stmt 0 view .LVU100
 312 008a FFF7FEFF 		bl	HAL_DMA_Init
 313              	.LVL10:
 130:Core/Src/usart.c ****     {
 314              		.loc 1 130 8 discriminator 1 view .LVU101
 315 008e F0B9     		cbnz	r0, .L23
 316              	.L15:
 135:Core/Src/usart.c **** 
 317              		.loc 1 135 5 is_stmt 1 view .LVU102
 135:Core/Src/usart.c **** 
 318              		.loc 1 135 5 view .LVU103
 319 0090 434B     		ldr	r3, .L27+16
 320 0092 E363     		str	r3, [r4, #60]
 135:Core/Src/usart.c **** 
 321              		.loc 1 135 5 view .LVU104
 322 0094 5C62     		str	r4, [r3, #36]
 135:Core/Src/usart.c **** 
 323              		.loc 1 135 5 view .LVU105
 138:Core/Src/usart.c ****     hdma_usart1_tx.Init.Direction = DMA_MEMORY_TO_PERIPH;
 324              		.loc 1 138 5 view .LVU106
 138:Core/Src/usart.c ****     hdma_usart1_tx.Init.Direction = DMA_MEMORY_TO_PERIPH;
 325              		.loc 1 138 29 is_stmt 0 view .LVU107
 326 0096 4448     		ldr	r0, .L27+24
 327 0098 444B     		ldr	r3, .L27+28
 328 009a 0360     		str	r3, [r0]
 139:Core/Src/usart.c ****     hdma_usart1_tx.Init.PeriphInc = DMA_PINC_DISABLE;
 329              		.loc 1 139 5 is_stmt 1 view .LVU108
 139:Core/Src/usart.c ****     hdma_usart1_tx.Init.PeriphInc = DMA_PINC_DISABLE;
 330              		.loc 1 139 35 is_stmt 0 view .LVU109
 331 009c 1023     		movs	r3, #16
 332 009e 4360     		str	r3, [r0, #4]
 140:Core/Src/usart.c ****     hdma_usart1_tx.Init.MemInc = DMA_MINC_ENABLE;
 333              		.loc 1 140 5 is_stmt 1 view .LVU110
 140:Core/Src/usart.c ****     hdma_usart1_tx.Init.MemInc = DMA_MINC_ENABLE;
 334              		.loc 1 140 35 is_stmt 0 view .LVU111
 335 00a0 0023     		movs	r3, #0
 336 00a2 8360     		str	r3, [r0, #8]
 141:Core/Src/usart.c ****     hdma_usart1_tx.Init.PeriphDataAlignment = DMA_PDATAALIGN_BYTE;
 337              		.loc 1 141 5 is_stmt 1 view .LVU112
 141:Core/Src/usart.c ****     hdma_usart1_tx.Init.PeriphDataAlignment = DMA_PDATAALIGN_BYTE;
 338              		.loc 1 141 32 is_stmt 0 view .LVU113
 339 00a4 8022     		movs	r2, #128
 340 00a6 C260     		str	r2, [r0, #12]
 142:Core/Src/usart.c ****     hdma_usart1_tx.Init.MemDataAlignment = DMA_MDATAALIGN_BYTE;
 341              		.loc 1 142 5 is_stmt 1 view .LVU114
 142:Core/Src/usart.c ****     hdma_usart1_tx.Init.MemDataAlignment = DMA_MDATAALIGN_BYTE;
 342              		.loc 1 142 45 is_stmt 0 view .LVU115
 343 00a8 0361     		str	r3, [r0, #16]
 143:Core/Src/usart.c ****     hdma_usart1_tx.Init.Mode = DMA_NORMAL;
 344              		.loc 1 143 5 is_stmt 1 view .LVU116
 143:Core/Src/usart.c ****     hdma_usart1_tx.Init.Mode = DMA_NORMAL;
 345              		.loc 1 143 42 is_stmt 0 view .LVU117
ARM GAS  /tmp/ccCHG8GY.s 			page 12


 346 00aa 4361     		str	r3, [r0, #20]
 144:Core/Src/usart.c ****     hdma_usart1_tx.Init.Priority = DMA_PRIORITY_LOW;
 347              		.loc 1 144 5 is_stmt 1 view .LVU118
 144:Core/Src/usart.c ****     hdma_usart1_tx.Init.Priority = DMA_PRIORITY_LOW;
 348              		.loc 1 144 30 is_stmt 0 view .LVU119
 349 00ac 8361     		str	r3, [r0, #24]
 145:Core/Src/usart.c ****     if (HAL_DMA_Init(&hdma_usart1_tx) != HAL_OK)
 350              		.loc 1 145 5 is_stmt 1 view .LVU120
 145:Core/Src/usart.c ****     if (HAL_DMA_Init(&hdma_usart1_tx) != HAL_OK)
 351              		.loc 1 145 34 is_stmt 0 view .LVU121
 352 00ae C361     		str	r3, [r0, #28]
 146:Core/Src/usart.c ****     {
 353              		.loc 1 146 5 is_stmt 1 view .LVU122
 146:Core/Src/usart.c ****     {
 354              		.loc 1 146 9 is_stmt 0 view .LVU123
 355 00b0 FFF7FEFF 		bl	HAL_DMA_Init
 356              	.LVL11:
 146:Core/Src/usart.c ****     {
 357              		.loc 1 146 8 discriminator 1 view .LVU124
 358 00b4 70B9     		cbnz	r0, .L24
 359              	.L16:
 151:Core/Src/usart.c **** 
 360              		.loc 1 151 5 is_stmt 1 view .LVU125
 151:Core/Src/usart.c **** 
 361              		.loc 1 151 5 view .LVU126
 362 00b6 3C4B     		ldr	r3, .L27+24
 363 00b8 A363     		str	r3, [r4, #56]
 151:Core/Src/usart.c **** 
 364              		.loc 1 151 5 view .LVU127
 365 00ba 5C62     		str	r4, [r3, #36]
 151:Core/Src/usart.c **** 
 366              		.loc 1 151 5 view .LVU128
 154:Core/Src/usart.c ****     HAL_NVIC_EnableIRQ(USART1_IRQn);
 367              		.loc 1 154 5 view .LVU129
 368 00bc 0022     		movs	r2, #0
 369 00be 0521     		movs	r1, #5
 370 00c0 2520     		movs	r0, #37
 371 00c2 FFF7FEFF 		bl	HAL_NVIC_SetPriority
 372              	.LVL12:
 155:Core/Src/usart.c ****   /* USER CODE BEGIN USART1_MspInit 1 */
 373              		.loc 1 155 5 view .LVU130
 374 00c6 2520     		movs	r0, #37
 375 00c8 FFF7FEFF 		bl	HAL_NVIC_EnableIRQ
 376              	.LVL13:
 377 00cc A7E7     		b	.L13
 378              	.L23:
 132:Core/Src/usart.c ****     }
 379              		.loc 1 132 7 view .LVU131
 380 00ce FFF7FEFF 		bl	Error_Handler
 381              	.LVL14:
 382 00d2 DDE7     		b	.L15
 383              	.L24:
 148:Core/Src/usart.c ****     }
 384              		.loc 1 148 7 view .LVU132
 385 00d4 FFF7FEFF 		bl	Error_Handler
 386              	.LVL15:
 387 00d8 EDE7     		b	.L16
ARM GAS  /tmp/ccCHG8GY.s 			page 13


 388              	.LVL16:
 389              	.L22:
 166:Core/Src/usart.c **** 
 390              		.loc 1 166 5 view .LVU133
 391              	.LBB4:
 166:Core/Src/usart.c **** 
 392              		.loc 1 166 5 view .LVU134
 166:Core/Src/usart.c **** 
 393              		.loc 1 166 5 view .LVU135
 394 00da 2F4B     		ldr	r3, .L27+8
 395 00dc DA69     		ldr	r2, [r3, #28]
 396 00de 42F40032 		orr	r2, r2, #131072
 397 00e2 DA61     		str	r2, [r3, #28]
 166:Core/Src/usart.c **** 
 398              		.loc 1 166 5 view .LVU136
 399 00e4 DA69     		ldr	r2, [r3, #28]
 400 00e6 02F40032 		and	r2, r2, #131072
 401 00ea 0292     		str	r2, [sp, #8]
 166:Core/Src/usart.c **** 
 402              		.loc 1 166 5 view .LVU137
 403 00ec 029A     		ldr	r2, [sp, #8]
 404              	.LBE4:
 166:Core/Src/usart.c **** 
 405              		.loc 1 166 5 view .LVU138
 168:Core/Src/usart.c ****     /**USART2 GPIO Configuration
 406              		.loc 1 168 5 view .LVU139
 407              	.LBB5:
 168:Core/Src/usart.c ****     /**USART2 GPIO Configuration
 408              		.loc 1 168 5 view .LVU140
 168:Core/Src/usart.c ****     /**USART2 GPIO Configuration
 409              		.loc 1 168 5 view .LVU141
 410 00ee 9A69     		ldr	r2, [r3, #24]
 411 00f0 42F00402 		orr	r2, r2, #4
 412 00f4 9A61     		str	r2, [r3, #24]
 168:Core/Src/usart.c ****     /**USART2 GPIO Configuration
 413              		.loc 1 168 5 view .LVU142
 414 00f6 9B69     		ldr	r3, [r3, #24]
 415 00f8 03F00403 		and	r3, r3, #4
 416 00fc 0393     		str	r3, [sp, #12]
 168:Core/Src/usart.c ****     /**USART2 GPIO Configuration
 417              		.loc 1 168 5 view .LVU143
 418 00fe 039B     		ldr	r3, [sp, #12]
 419              	.LBE5:
 168:Core/Src/usart.c ****     /**USART2 GPIO Configuration
 420              		.loc 1 168 5 view .LVU144
 173:Core/Src/usart.c ****     GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 421              		.loc 1 173 5 view .LVU145
 173:Core/Src/usart.c ****     GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 422              		.loc 1 173 25 is_stmt 0 view .LVU146
 423 0100 0423     		movs	r3, #4
 424 0102 0493     		str	r3, [sp, #16]
 174:Core/Src/usart.c ****     GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 425              		.loc 1 174 5 is_stmt 1 view .LVU147
 174:Core/Src/usart.c ****     GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 426              		.loc 1 174 26 is_stmt 0 view .LVU148
 427 0104 0223     		movs	r3, #2
 428 0106 0593     		str	r3, [sp, #20]
ARM GAS  /tmp/ccCHG8GY.s 			page 14


 175:Core/Src/usart.c ****     HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 429              		.loc 1 175 5 is_stmt 1 view .LVU149
 175:Core/Src/usart.c ****     HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 430              		.loc 1 175 27 is_stmt 0 view .LVU150
 431 0108 0323     		movs	r3, #3
 432 010a 0793     		str	r3, [sp, #28]
 176:Core/Src/usart.c **** 
 433              		.loc 1 176 5 is_stmt 1 view .LVU151
 434 010c 234E     		ldr	r6, .L27+12
 435 010e 04A9     		add	r1, sp, #16
 436 0110 3046     		mov	r0, r6
 437              	.LVL17:
 176:Core/Src/usart.c **** 
 438              		.loc 1 176 5 is_stmt 0 view .LVU152
 439 0112 FFF7FEFF 		bl	HAL_GPIO_Init
 440              	.LVL18:
 178:Core/Src/usart.c ****     GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 441              		.loc 1 178 5 is_stmt 1 view .LVU153
 178:Core/Src/usart.c ****     GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 442              		.loc 1 178 25 is_stmt 0 view .LVU154
 443 0116 0823     		movs	r3, #8
 444 0118 0493     		str	r3, [sp, #16]
 179:Core/Src/usart.c ****     GPIO_InitStruct.Pull = GPIO_NOPULL;
 445              		.loc 1 179 5 is_stmt 1 view .LVU155
 179:Core/Src/usart.c ****     GPIO_InitStruct.Pull = GPIO_NOPULL;
 446              		.loc 1 179 26 is_stmt 0 view .LVU156
 447 011a 0025     		movs	r5, #0
 448 011c 0595     		str	r5, [sp, #20]
 180:Core/Src/usart.c ****     HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 449              		.loc 1 180 5 is_stmt 1 view .LVU157
 180:Core/Src/usart.c ****     HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 450              		.loc 1 180 26 is_stmt 0 view .LVU158
 451 011e 0695     		str	r5, [sp, #24]
 181:Core/Src/usart.c **** 
 452              		.loc 1 181 5 is_stmt 1 view .LVU159
 453 0120 04A9     		add	r1, sp, #16
 454 0122 3046     		mov	r0, r6
 455 0124 FFF7FEFF 		bl	HAL_GPIO_Init
 456              	.LVL19:
 185:Core/Src/usart.c ****     hdma_usart2_rx.Init.Direction = DMA_PERIPH_TO_MEMORY;
 457              		.loc 1 185 5 view .LVU160
 185:Core/Src/usart.c ****     hdma_usart2_rx.Init.Direction = DMA_PERIPH_TO_MEMORY;
 458              		.loc 1 185 29 is_stmt 0 view .LVU161
 459 0128 2148     		ldr	r0, .L27+32
 460 012a 224B     		ldr	r3, .L27+36
 461 012c 0360     		str	r3, [r0]
 186:Core/Src/usart.c ****     hdma_usart2_rx.Init.PeriphInc = DMA_PINC_DISABLE;
 462              		.loc 1 186 5 is_stmt 1 view .LVU162
 186:Core/Src/usart.c ****     hdma_usart2_rx.Init.PeriphInc = DMA_PINC_DISABLE;
 463              		.loc 1 186 35 is_stmt 0 view .LVU163
 464 012e 4560     		str	r5, [r0, #4]
 187:Core/Src/usart.c ****     hdma_usart2_rx.Init.MemInc = DMA_MINC_ENABLE;
 465              		.loc 1 187 5 is_stmt 1 view .LVU164
 187:Core/Src/usart.c ****     hdma_usart2_rx.Init.MemInc = DMA_MINC_ENABLE;
 466              		.loc 1 187 35 is_stmt 0 view .LVU165
 467 0130 8560     		str	r5, [r0, #8]
 188:Core/Src/usart.c ****     hdma_usart2_rx.Init.PeriphDataAlignment = DMA_PDATAALIGN_BYTE;
ARM GAS  /tmp/ccCHG8GY.s 			page 15


 468              		.loc 1 188 5 is_stmt 1 view .LVU166
 188:Core/Src/usart.c ****     hdma_usart2_rx.Init.PeriphDataAlignment = DMA_PDATAALIGN_BYTE;
 469              		.loc 1 188 32 is_stmt 0 view .LVU167
 470 0132 8023     		movs	r3, #128
 471 0134 C360     		str	r3, [r0, #12]
 189:Core/Src/usart.c ****     hdma_usart2_rx.Init.MemDataAlignment = DMA_MDATAALIGN_BYTE;
 472              		.loc 1 189 5 is_stmt 1 view .LVU168
 189:Core/Src/usart.c ****     hdma_usart2_rx.Init.MemDataAlignment = DMA_MDATAALIGN_BYTE;
 473              		.loc 1 189 45 is_stmt 0 view .LVU169
 474 0136 0561     		str	r5, [r0, #16]
 190:Core/Src/usart.c ****     hdma_usart2_rx.Init.Mode = DMA_NORMAL;
 475              		.loc 1 190 5 is_stmt 1 view .LVU170
 190:Core/Src/usart.c ****     hdma_usart2_rx.Init.Mode = DMA_NORMAL;
 476              		.loc 1 190 42 is_stmt 0 view .LVU171
 477 0138 4561     		str	r5, [r0, #20]
 191:Core/Src/usart.c ****     hdma_usart2_rx.Init.Priority = DMA_PRIORITY_LOW;
 478              		.loc 1 191 5 is_stmt 1 view .LVU172
 191:Core/Src/usart.c ****     hdma_usart2_rx.Init.Priority = DMA_PRIORITY_LOW;
 479              		.loc 1 191 30 is_stmt 0 view .LVU173
 480 013a 8561     		str	r5, [r0, #24]
 192:Core/Src/usart.c ****     if (HAL_DMA_Init(&hdma_usart2_rx) != HAL_OK)
 481              		.loc 1 192 5 is_stmt 1 view .LVU174
 192:Core/Src/usart.c ****     if (HAL_DMA_Init(&hdma_usart2_rx) != HAL_OK)
 482              		.loc 1 192 34 is_stmt 0 view .LVU175
 483 013c C561     		str	r5, [r0, #28]
 193:Core/Src/usart.c ****     {
 484              		.loc 1 193 5 is_stmt 1 view .LVU176
 193:Core/Src/usart.c ****     {
 485              		.loc 1 193 9 is_stmt 0 view .LVU177
 486 013e FFF7FEFF 		bl	HAL_DMA_Init
 487              	.LVL20:
 193:Core/Src/usart.c ****     {
 488              		.loc 1 193 8 discriminator 1 view .LVU178
 489 0142 F0B9     		cbnz	r0, .L25
 490              	.L18:
 198:Core/Src/usart.c **** 
 491              		.loc 1 198 5 is_stmt 1 view .LVU179
 198:Core/Src/usart.c **** 
 492              		.loc 1 198 5 view .LVU180
 493 0144 1A4B     		ldr	r3, .L27+32
 494 0146 E363     		str	r3, [r4, #60]
 198:Core/Src/usart.c **** 
 495              		.loc 1 198 5 view .LVU181
 496 0148 5C62     		str	r4, [r3, #36]
 198:Core/Src/usart.c **** 
 497              		.loc 1 198 5 view .LVU182
 201:Core/Src/usart.c ****     hdma_usart2_tx.Init.Direction = DMA_MEMORY_TO_PERIPH;
 498              		.loc 1 201 5 view .LVU183
 201:Core/Src/usart.c ****     hdma_usart2_tx.Init.Direction = DMA_MEMORY_TO_PERIPH;
 499              		.loc 1 201 29 is_stmt 0 view .LVU184
 500 014a 1B48     		ldr	r0, .L27+40
 501 014c 1B4B     		ldr	r3, .L27+44
 502 014e 0360     		str	r3, [r0]
 202:Core/Src/usart.c ****     hdma_usart2_tx.Init.PeriphInc = DMA_PINC_DISABLE;
 503              		.loc 1 202 5 is_stmt 1 view .LVU185
 202:Core/Src/usart.c ****     hdma_usart2_tx.Init.PeriphInc = DMA_PINC_DISABLE;
 504              		.loc 1 202 35 is_stmt 0 view .LVU186
ARM GAS  /tmp/ccCHG8GY.s 			page 16


 505 0150 1023     		movs	r3, #16
 506 0152 4360     		str	r3, [r0, #4]
 203:Core/Src/usart.c ****     hdma_usart2_tx.Init.MemInc = DMA_MINC_ENABLE;
 507              		.loc 1 203 5 is_stmt 1 view .LVU187
 203:Core/Src/usart.c ****     hdma_usart2_tx.Init.MemInc = DMA_MINC_ENABLE;
 508              		.loc 1 203 35 is_stmt 0 view .LVU188
 509 0154 0023     		movs	r3, #0
 510 0156 8360     		str	r3, [r0, #8]
 204:Core/Src/usart.c ****     hdma_usart2_tx.Init.PeriphDataAlignment = DMA_PDATAALIGN_BYTE;
 511              		.loc 1 204 5 is_stmt 1 view .LVU189
 204:Core/Src/usart.c ****     hdma_usart2_tx.Init.PeriphDataAlignment = DMA_PDATAALIGN_BYTE;
 512              		.loc 1 204 32 is_stmt 0 view .LVU190
 513 0158 8022     		movs	r2, #128
 514 015a C260     		str	r2, [r0, #12]
 205:Core/Src/usart.c ****     hdma_usart2_tx.Init.MemDataAlignment = DMA_MDATAALIGN_BYTE;
 515              		.loc 1 205 5 is_stmt 1 view .LVU191
 205:Core/Src/usart.c ****     hdma_usart2_tx.Init.MemDataAlignment = DMA_MDATAALIGN_BYTE;
 516              		.loc 1 205 45 is_stmt 0 view .LVU192
 517 015c 0361     		str	r3, [r0, #16]
 206:Core/Src/usart.c ****     hdma_usart2_tx.Init.Mode = DMA_NORMAL;
 518              		.loc 1 206 5 is_stmt 1 view .LVU193
 206:Core/Src/usart.c ****     hdma_usart2_tx.Init.Mode = DMA_NORMAL;
 519              		.loc 1 206 42 is_stmt 0 view .LVU194
 520 015e 4361     		str	r3, [r0, #20]
 207:Core/Src/usart.c ****     hdma_usart2_tx.Init.Priority = DMA_PRIORITY_LOW;
 521              		.loc 1 207 5 is_stmt 1 view .LVU195
 207:Core/Src/usart.c ****     hdma_usart2_tx.Init.Priority = DMA_PRIORITY_LOW;
 522              		.loc 1 207 30 is_stmt 0 view .LVU196
 523 0160 8361     		str	r3, [r0, #24]
 208:Core/Src/usart.c ****     if (HAL_DMA_Init(&hdma_usart2_tx) != HAL_OK)
 524              		.loc 1 208 5 is_stmt 1 view .LVU197
 208:Core/Src/usart.c ****     if (HAL_DMA_Init(&hdma_usart2_tx) != HAL_OK)
 525              		.loc 1 208 34 is_stmt 0 view .LVU198
 526 0162 C361     		str	r3, [r0, #28]
 209:Core/Src/usart.c ****     {
 527              		.loc 1 209 5 is_stmt 1 view .LVU199
 209:Core/Src/usart.c ****     {
 528              		.loc 1 209 9 is_stmt 0 view .LVU200
 529 0164 FFF7FEFF 		bl	HAL_DMA_Init
 530              	.LVL21:
 209:Core/Src/usart.c ****     {
 531              		.loc 1 209 8 discriminator 1 view .LVU201
 532 0168 70B9     		cbnz	r0, .L26
 533              	.L19:
 214:Core/Src/usart.c **** 
 534              		.loc 1 214 5 is_stmt 1 view .LVU202
 214:Core/Src/usart.c **** 
 535              		.loc 1 214 5 view .LVU203
 536 016a 134B     		ldr	r3, .L27+40
 537 016c A363     		str	r3, [r4, #56]
 214:Core/Src/usart.c **** 
 538              		.loc 1 214 5 view .LVU204
 539 016e 5C62     		str	r4, [r3, #36]
 214:Core/Src/usart.c **** 
 540              		.loc 1 214 5 view .LVU205
 217:Core/Src/usart.c ****     HAL_NVIC_EnableIRQ(USART2_IRQn);
 541              		.loc 1 217 5 view .LVU206
ARM GAS  /tmp/ccCHG8GY.s 			page 17


 542 0170 0022     		movs	r2, #0
 543 0172 0521     		movs	r1, #5
 544 0174 2620     		movs	r0, #38
 545 0176 FFF7FEFF 		bl	HAL_NVIC_SetPriority
 546              	.LVL22:
 218:Core/Src/usart.c ****   /* USER CODE BEGIN USART2_MspInit 1 */
 547              		.loc 1 218 5 view .LVU207
 548 017a 2620     		movs	r0, #38
 549 017c FFF7FEFF 		bl	HAL_NVIC_EnableIRQ
 550              	.LVL23:
 551              		.loc 1 223 1 is_stmt 0 view .LVU208
 552 0180 4DE7     		b	.L13
 553              	.L25:
 195:Core/Src/usart.c ****     }
 554              		.loc 1 195 7 is_stmt 1 view .LVU209
 555 0182 FFF7FEFF 		bl	Error_Handler
 556              	.LVL24:
 557 0186 DDE7     		b	.L18
 558              	.L26:
 211:Core/Src/usart.c ****     }
 559              		.loc 1 211 7 view .LVU210
 560 0188 FFF7FEFF 		bl	Error_Handler
 561              	.LVL25:
 562 018c EDE7     		b	.L19
 563              	.L28:
 564 018e 00BF     		.align	2
 565              	.L27:
 566 0190 00380140 		.word	1073821696
 567 0194 00440040 		.word	1073759232
 568 0198 00100240 		.word	1073876992
 569 019c 00080140 		.word	1073809408
 570 01a0 00000000 		.word	hdma_usart1_rx
 571 01a4 58000240 		.word	1073872984
 572 01a8 00000000 		.word	hdma_usart1_tx
 573 01ac 44000240 		.word	1073872964
 574 01b0 00000000 		.word	hdma_usart2_rx
 575 01b4 6C000240 		.word	1073873004
 576 01b8 00000000 		.word	hdma_usart2_tx
 577 01bc 80000240 		.word	1073873024
 578              		.cfi_endproc
 579              	.LFE67:
 581              		.section	.text.HAL_UART_MspDeInit,"ax",%progbits
 582              		.align	1
 583              		.global	HAL_UART_MspDeInit
 584              		.syntax unified
 585              		.thumb
 586              		.thumb_func
 588              	HAL_UART_MspDeInit:
 589              	.LVL26:
 590              	.LFB68:
 224:Core/Src/usart.c **** 
 225:Core/Src/usart.c **** void HAL_UART_MspDeInit(UART_HandleTypeDef* uartHandle)
 226:Core/Src/usart.c **** {
 591              		.loc 1 226 1 view -0
 592              		.cfi_startproc
 593              		@ args = 0, pretend = 0, frame = 0
 594              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  /tmp/ccCHG8GY.s 			page 18


 595              		.loc 1 226 1 is_stmt 0 view .LVU212
 596 0000 10B5     		push	{r4, lr}
 597              	.LCFI6:
 598              		.cfi_def_cfa_offset 8
 599              		.cfi_offset 4, -8
 600              		.cfi_offset 14, -4
 601 0002 0446     		mov	r4, r0
 227:Core/Src/usart.c **** 
 228:Core/Src/usart.c ****   if(uartHandle->Instance==USART1)
 602              		.loc 1 228 3 is_stmt 1 view .LVU213
 603              		.loc 1 228 16 is_stmt 0 view .LVU214
 604 0004 0368     		ldr	r3, [r0]
 605              		.loc 1 228 5 view .LVU215
 606 0006 184A     		ldr	r2, .L35
 607 0008 9342     		cmp	r3, r2
 608 000a 03D0     		beq	.L33
 229:Core/Src/usart.c ****   {
 230:Core/Src/usart.c ****   /* USER CODE BEGIN USART1_MspDeInit 0 */
 231:Core/Src/usart.c **** 
 232:Core/Src/usart.c ****   /* USER CODE END USART1_MspDeInit 0 */
 233:Core/Src/usart.c ****     /* Peripheral clock disable */
 234:Core/Src/usart.c ****     __HAL_RCC_USART1_CLK_DISABLE();
 235:Core/Src/usart.c **** 
 236:Core/Src/usart.c ****     /**USART1 GPIO Configuration
 237:Core/Src/usart.c ****     PA9     ------> USART1_TX
 238:Core/Src/usart.c ****     PA10     ------> USART1_RX
 239:Core/Src/usart.c ****     */
 240:Core/Src/usart.c ****     HAL_GPIO_DeInit(GPIOA, GPIO_PIN_9|GPIO_PIN_10);
 241:Core/Src/usart.c **** 
 242:Core/Src/usart.c ****     /* USART1 DMA DeInit */
 243:Core/Src/usart.c ****     HAL_DMA_DeInit(uartHandle->hdmarx);
 244:Core/Src/usart.c ****     HAL_DMA_DeInit(uartHandle->hdmatx);
 245:Core/Src/usart.c **** 
 246:Core/Src/usart.c ****     /* USART1 interrupt Deinit */
 247:Core/Src/usart.c ****     HAL_NVIC_DisableIRQ(USART1_IRQn);
 248:Core/Src/usart.c ****   /* USER CODE BEGIN USART1_MspDeInit 1 */
 249:Core/Src/usart.c **** 
 250:Core/Src/usart.c ****   /* USER CODE END USART1_MspDeInit 1 */
 251:Core/Src/usart.c ****   }
 252:Core/Src/usart.c ****   else if(uartHandle->Instance==USART2)
 609              		.loc 1 252 8 is_stmt 1 view .LVU216
 610              		.loc 1 252 10 is_stmt 0 view .LVU217
 611 000c 174A     		ldr	r2, .L35+4
 612 000e 9342     		cmp	r3, r2
 613 0010 15D0     		beq	.L34
 614              	.LVL27:
 615              	.L29:
 253:Core/Src/usart.c ****   {
 254:Core/Src/usart.c ****   /* USER CODE BEGIN USART2_MspDeInit 0 */
 255:Core/Src/usart.c **** 
 256:Core/Src/usart.c ****   /* USER CODE END USART2_MspDeInit 0 */
 257:Core/Src/usart.c ****     /* Peripheral clock disable */
 258:Core/Src/usart.c ****     __HAL_RCC_USART2_CLK_DISABLE();
 259:Core/Src/usart.c **** 
 260:Core/Src/usart.c ****     /**USART2 GPIO Configuration
 261:Core/Src/usart.c ****     PA2     ------> USART2_TX
 262:Core/Src/usart.c ****     PA3     ------> USART2_RX
ARM GAS  /tmp/ccCHG8GY.s 			page 19


 263:Core/Src/usart.c ****     */
 264:Core/Src/usart.c ****     HAL_GPIO_DeInit(GPIOA, GPIO_PIN_2|GPIO_PIN_3);
 265:Core/Src/usart.c **** 
 266:Core/Src/usart.c ****     /* USART2 DMA DeInit */
 267:Core/Src/usart.c ****     HAL_DMA_DeInit(uartHandle->hdmarx);
 268:Core/Src/usart.c ****     HAL_DMA_DeInit(uartHandle->hdmatx);
 269:Core/Src/usart.c **** 
 270:Core/Src/usart.c ****     /* USART2 interrupt Deinit */
 271:Core/Src/usart.c ****     HAL_NVIC_DisableIRQ(USART2_IRQn);
 272:Core/Src/usart.c ****   /* USER CODE BEGIN USART2_MspDeInit 1 */
 273:Core/Src/usart.c **** 
 274:Core/Src/usart.c ****   /* USER CODE END USART2_MspDeInit 1 */
 275:Core/Src/usart.c ****   }
 276:Core/Src/usart.c **** }
 616              		.loc 1 276 1 view .LVU218
 617 0012 10BD     		pop	{r4, pc}
 618              	.LVL28:
 619              	.L33:
 234:Core/Src/usart.c **** 
 620              		.loc 1 234 5 is_stmt 1 view .LVU219
 621 0014 02F55842 		add	r2, r2, #55296
 622 0018 9369     		ldr	r3, [r2, #24]
 623 001a 23F48043 		bic	r3, r3, #16384
 624 001e 9361     		str	r3, [r2, #24]
 240:Core/Src/usart.c **** 
 625              		.loc 1 240 5 view .LVU220
 626 0020 4FF4C061 		mov	r1, #1536
 627 0024 1248     		ldr	r0, .L35+8
 628              	.LVL29:
 240:Core/Src/usart.c **** 
 629              		.loc 1 240 5 is_stmt 0 view .LVU221
 630 0026 FFF7FEFF 		bl	HAL_GPIO_DeInit
 631              	.LVL30:
 243:Core/Src/usart.c ****     HAL_DMA_DeInit(uartHandle->hdmatx);
 632              		.loc 1 243 5 is_stmt 1 view .LVU222
 633 002a E06B     		ldr	r0, [r4, #60]
 634 002c FFF7FEFF 		bl	HAL_DMA_DeInit
 635              	.LVL31:
 244:Core/Src/usart.c **** 
 636              		.loc 1 244 5 view .LVU223
 637 0030 A06B     		ldr	r0, [r4, #56]
 638 0032 FFF7FEFF 		bl	HAL_DMA_DeInit
 639              	.LVL32:
 247:Core/Src/usart.c ****   /* USER CODE BEGIN USART1_MspDeInit 1 */
 640              		.loc 1 247 5 view .LVU224
 641 0036 2520     		movs	r0, #37
 642 0038 FFF7FEFF 		bl	HAL_NVIC_DisableIRQ
 643              	.LVL33:
 644 003c E9E7     		b	.L29
 645              	.LVL34:
 646              	.L34:
 258:Core/Src/usart.c **** 
 647              		.loc 1 258 5 view .LVU225
 648 003e 02F5E632 		add	r2, r2, #117760
 649 0042 D369     		ldr	r3, [r2, #28]
 650 0044 23F40033 		bic	r3, r3, #131072
 651 0048 D361     		str	r3, [r2, #28]
ARM GAS  /tmp/ccCHG8GY.s 			page 20


 264:Core/Src/usart.c **** 
 652              		.loc 1 264 5 view .LVU226
 653 004a 0C21     		movs	r1, #12
 654 004c 0848     		ldr	r0, .L35+8
 655              	.LVL35:
 264:Core/Src/usart.c **** 
 656              		.loc 1 264 5 is_stmt 0 view .LVU227
 657 004e FFF7FEFF 		bl	HAL_GPIO_DeInit
 658              	.LVL36:
 267:Core/Src/usart.c ****     HAL_DMA_DeInit(uartHandle->hdmatx);
 659              		.loc 1 267 5 is_stmt 1 view .LVU228
 660 0052 E06B     		ldr	r0, [r4, #60]
 661 0054 FFF7FEFF 		bl	HAL_DMA_DeInit
 662              	.LVL37:
 268:Core/Src/usart.c **** 
 663              		.loc 1 268 5 view .LVU229
 664 0058 A06B     		ldr	r0, [r4, #56]
 665 005a FFF7FEFF 		bl	HAL_DMA_DeInit
 666              	.LVL38:
 271:Core/Src/usart.c ****   /* USER CODE BEGIN USART2_MspDeInit 1 */
 667              		.loc 1 271 5 view .LVU230
 668 005e 2620     		movs	r0, #38
 669 0060 FFF7FEFF 		bl	HAL_NVIC_DisableIRQ
 670              	.LVL39:
 671              		.loc 1 276 1 is_stmt 0 view .LVU231
 672 0064 D5E7     		b	.L29
 673              	.L36:
 674 0066 00BF     		.align	2
 675              	.L35:
 676 0068 00380140 		.word	1073821696
 677 006c 00440040 		.word	1073759232
 678 0070 00080140 		.word	1073809408
 679              		.cfi_endproc
 680              	.LFE68:
 682              		.global	hdma_usart2_tx
 683              		.section	.bss.hdma_usart2_tx,"aw",%nobits
 684              		.align	2
 687              	hdma_usart2_tx:
 688 0000 00000000 		.space	68
 688      00000000 
 688      00000000 
 688      00000000 
 688      00000000 
 689              		.global	hdma_usart2_rx
 690              		.section	.bss.hdma_usart2_rx,"aw",%nobits
 691              		.align	2
 694              	hdma_usart2_rx:
 695 0000 00000000 		.space	68
 695      00000000 
 695      00000000 
 695      00000000 
 695      00000000 
 696              		.global	hdma_usart1_tx
 697              		.section	.bss.hdma_usart1_tx,"aw",%nobits
 698              		.align	2
 701              	hdma_usart1_tx:
 702 0000 00000000 		.space	68
ARM GAS  /tmp/ccCHG8GY.s 			page 21


 702      00000000 
 702      00000000 
 702      00000000 
 702      00000000 
 703              		.global	hdma_usart1_rx
 704              		.section	.bss.hdma_usart1_rx,"aw",%nobits
 705              		.align	2
 708              	hdma_usart1_rx:
 709 0000 00000000 		.space	68
 709      00000000 
 709      00000000 
 709      00000000 
 709      00000000 
 710              		.global	huart2
 711              		.section	.bss.huart2,"aw",%nobits
 712              		.align	2
 715              	huart2:
 716 0000 00000000 		.space	72
 716      00000000 
 716      00000000 
 716      00000000 
 716      00000000 
 717              		.global	huart1
 718              		.section	.bss.huart1,"aw",%nobits
 719              		.align	2
 722              	huart1:
 723 0000 00000000 		.space	72
 723      00000000 
 723      00000000 
 723      00000000 
 723      00000000 
 724              		.text
 725              	.Letext0:
 726              		.file 2 "Drivers/CMSIS/Device/ST/STM32F1xx/Include/stm32f103xe.h"
 727              		.file 3 "/usr/arm-none-eabi/include/machine/_default_types.h"
 728              		.file 4 "/usr/arm-none-eabi/include/sys/_stdint.h"
 729              		.file 5 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_def.h"
 730              		.file 6 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_gpio.h"
 731              		.file 7 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_dma.h"
 732              		.file 8 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_uart.h"
 733              		.file 9 "Core/Inc/usart.h"
 734              		.file 10 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_cortex.h"
 735              		.file 11 "Core/Inc/main.h"
ARM GAS  /tmp/ccCHG8GY.s 			page 22


DEFINED SYMBOLS
                            *ABS*:00000000 usart.c
     /tmp/ccCHG8GY.s:19     .text.MX_USART1_UART_Init:00000000 $t
     /tmp/ccCHG8GY.s:25     .text.MX_USART1_UART_Init:00000000 MX_USART1_UART_Init
     /tmp/ccCHG8GY.s:83     .text.MX_USART1_UART_Init:0000002c $d
     /tmp/ccCHG8GY.s:722    .bss.huart1:00000000 huart1
     /tmp/ccCHG8GY.s:89     .text.MX_USART2_UART_Init:00000000 $t
     /tmp/ccCHG8GY.s:95     .text.MX_USART2_UART_Init:00000000 MX_USART2_UART_Init
     /tmp/ccCHG8GY.s:153    .text.MX_USART2_UART_Init:0000002c $d
     /tmp/ccCHG8GY.s:715    .bss.huart2:00000000 huart2
     /tmp/ccCHG8GY.s:159    .text.HAL_UART_MspInit:00000000 $t
     /tmp/ccCHG8GY.s:165    .text.HAL_UART_MspInit:00000000 HAL_UART_MspInit
     /tmp/ccCHG8GY.s:566    .text.HAL_UART_MspInit:00000190 $d
     /tmp/ccCHG8GY.s:708    .bss.hdma_usart1_rx:00000000 hdma_usart1_rx
     /tmp/ccCHG8GY.s:701    .bss.hdma_usart1_tx:00000000 hdma_usart1_tx
     /tmp/ccCHG8GY.s:694    .bss.hdma_usart2_rx:00000000 hdma_usart2_rx
     /tmp/ccCHG8GY.s:687    .bss.hdma_usart2_tx:00000000 hdma_usart2_tx
     /tmp/ccCHG8GY.s:582    .text.HAL_UART_MspDeInit:00000000 $t
     /tmp/ccCHG8GY.s:588    .text.HAL_UART_MspDeInit:00000000 HAL_UART_MspDeInit
     /tmp/ccCHG8GY.s:676    .text.HAL_UART_MspDeInit:00000068 $d
     /tmp/ccCHG8GY.s:684    .bss.hdma_usart2_tx:00000000 $d
     /tmp/ccCHG8GY.s:691    .bss.hdma_usart2_rx:00000000 $d
     /tmp/ccCHG8GY.s:698    .bss.hdma_usart1_tx:00000000 $d
     /tmp/ccCHG8GY.s:705    .bss.hdma_usart1_rx:00000000 $d
     /tmp/ccCHG8GY.s:712    .bss.huart2:00000000 $d
     /tmp/ccCHG8GY.s:719    .bss.huart1:00000000 $d

UNDEFINED SYMBOLS
HAL_UART_Init
Error_Handler
HAL_GPIO_Init
HAL_DMA_Init
HAL_NVIC_SetPriority
HAL_NVIC_EnableIRQ
HAL_GPIO_DeInit
HAL_DMA_DeInit
HAL_NVIC_DisableIRQ
