ARM GAS  /tmp/ccRhC8mT.s 			page 1


   1              		.cpu cortex-m3
   2              		.arch armv7-m
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"tasks.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.file 1 "Middlewares/Third_Party/FreeRTOS/Source/tasks.c"
  18              		.section	.text.prvTaskIsTaskSuspended,"ax",%progbits
  19              		.align	1
  20              		.syntax unified
  21              		.thumb
  22              		.thumb_func
  24              	prvTaskIsTaskSuspended:
  25              	.LVL0:
  26              	.LFB15:
   1:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*
   2:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * FreeRTOS Kernel V10.0.1
   3:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * Copyright (C) 2017 Amazon.com, Inc. or its affiliates.  All Rights Reserved.
   4:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  *
   5:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * Permission is hereby granted, free of charge, to any person obtaining a copy of
   6:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * this software and associated documentation files (the "Software"), to deal in
   7:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * the Software without restriction, including without limitation the rights to
   8:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of
   9:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * the Software, and to permit persons to whom the Software is furnished to do so,
  10:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * subject to the following conditions:
  11:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  *
  12:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * The above copyright notice and this permission notice shall be included in all
  13:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * copies or substantial portions of the Software.
  14:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  *
  15:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  16:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
  17:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
  18:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
  19:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
  20:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
  21:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  *
  22:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * http://www.FreeRTOS.org
  23:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * http://aws.amazon.com/freertos
  24:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  *
  25:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * 1 tab == 4 spaces!
  26:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  */
  27:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
  28:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /* Standard includes. */
  29:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #include <stdlib.h>
  30:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #include <string.h>
  31:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
  32:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /* Defining MPU_WRAPPERS_INCLUDED_FROM_API_FILE prevents task.h from redefining
ARM GAS  /tmp/ccRhC8mT.s 			page 2


  33:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** all the API functions to use the MPU wrappers.  That should only be done when
  34:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** task.h is included from an application file. */
  35:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #define MPU_WRAPPERS_INCLUDED_FROM_API_FILE
  36:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
  37:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /* FreeRTOS includes. */
  38:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #include "FreeRTOS.h"
  39:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #include "task.h"
  40:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #include "timers.h"
  41:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #include "stack_macros.h"
  42:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
  43:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /* Lint e961 and e750 are suppressed as a MISRA exception justified because the
  44:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** MPU ports require MPU_WRAPPERS_INCLUDED_FROM_API_FILE to be defined for the
  45:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** header files above, but not in this file, in order to generate the correct
  46:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** privileged Vs unprivileged linkage and placement. */
  47:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #undef MPU_WRAPPERS_INCLUDED_FROM_API_FILE /*lint !e961 !e750. */
  48:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
  49:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /* Set configUSE_STATS_FORMATTING_FUNCTIONS to 2 to include the stats formatting
  50:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** functions but without including stdio.h here. */
  51:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( configUSE_STATS_FORMATTING_FUNCTIONS == 1 )
  52:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* At the bottom of this file are two optional functions that can be used
  53:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	to generate human readable text from the raw data generated by the
  54:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	uxTaskGetSystemState() function.  Note the formatting functions are provided
  55:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	for convenience only, and are NOT considered part of the kernel. */
  56:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#include <stdio.h>
  57:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* configUSE_STATS_FORMATTING_FUNCTIONS == 1 ) */
  58:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
  59:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if( configUSE_PREEMPTION == 0 )
  60:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* If the cooperative scheduler is being used then a yield should not be
  61:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	performed just because a higher priority task has been woken. */
  62:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#define taskYIELD_IF_USING_PREEMPTION()
  63:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #else
  64:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#define taskYIELD_IF_USING_PREEMPTION() portYIELD_WITHIN_API()
  65:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif
  66:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
  67:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /* Values that can be assigned to the ucNotifyState member of the TCB. */
  68:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #define taskNOT_WAITING_NOTIFICATION	( ( uint8_t ) 0 )
  69:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #define taskWAITING_NOTIFICATION		( ( uint8_t ) 1 )
  70:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #define taskNOTIFICATION_RECEIVED		( ( uint8_t ) 2 )
  71:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
  72:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*
  73:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * The value used to fill the stack of a task when the task is created.  This
  74:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * is used purely for checking the high water mark for tasks.
  75:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  */
  76:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #define tskSTACK_FILL_BYTE	( 0xa5U )
  77:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
  78:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /* Sometimes the FreeRTOSConfig.h settings only allow a task to be created using
  79:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** dynamically allocated RAM, in which case when any task is deleted it is known
  80:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** that both the task's stack and TCB need to be freed.  Sometimes the
  81:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** FreeRTOSConfig.h settings only allow a task to be created using statically
  82:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** allocated RAM, in which case when any task is deleted it is known that neither
  83:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** the task's stack or TCB should be freed.  Sometimes the FreeRTOSConfig.h
  84:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** settings allow a task to be created using either statically or dynamically
  85:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** allocated RAM, in which case a member of the TCB is used to record whether the
  86:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** stack and/or TCB were allocated statically or dynamically, so when a task is
  87:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** deleted the RAM that was allocated dynamically is freed again and no attempt is
  88:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** made to free the RAM that was allocated statically.
  89:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** tskSTATIC_AND_DYNAMIC_ALLOCATION_POSSIBLE is only true if it is possible for a
ARM GAS  /tmp/ccRhC8mT.s 			page 3


  90:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** task to be created using either statically or dynamically allocated RAM.  Note
  91:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** that if portUSING_MPU_WRAPPERS is 1 then a protected task can be created with
  92:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** a statically allocated stack and a dynamically allocated TCB.
  93:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** !!!NOTE!!! If the definition of tskSTATIC_AND_DYNAMIC_ALLOCATION_POSSIBLE is
  94:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** changed then the definition of StaticTask_t must also be updated. */
  95:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #define tskSTATIC_AND_DYNAMIC_ALLOCATION_POSSIBLE	( ( configSUPPORT_STATIC_ALLOCATION == 1 ) && ( c
  96:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #define tskDYNAMICALLY_ALLOCATED_STACK_AND_TCB 		( ( uint8_t ) 0 )
  97:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #define tskSTATICALLY_ALLOCATED_STACK_ONLY 			( ( uint8_t ) 1 )
  98:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #define tskSTATICALLY_ALLOCATED_STACK_AND_TCB		( ( uint8_t ) 2 )
  99:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 100:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /* If any of the following are set then task stacks are filled with a known
 101:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** value so the high water mark can be determined.  If none of the following are
 102:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** set then don't fill the stack so there is no unnecessary dependency on memset. */
 103:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if( ( configCHECK_FOR_STACK_OVERFLOW > 1 ) || ( configUSE_TRACE_FACILITY == 1 ) || ( INCLUDE_uxTas
 104:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#define tskSET_NEW_STACKS_TO_KNOWN_VALUE	1
 105:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #else
 106:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#define tskSET_NEW_STACKS_TO_KNOWN_VALUE	0
 107:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif
 108:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 109:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*
 110:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * Macros used by vListTask to indicate which state a task is in.
 111:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  */
 112:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #define tskRUNNING_CHAR		( 'X' )
 113:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #define tskBLOCKED_CHAR		( 'B' )
 114:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #define tskREADY_CHAR		( 'R' )
 115:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #define tskDELETED_CHAR		( 'D' )
 116:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #define tskSUSPENDED_CHAR	( 'S' )
 117:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 118:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*
 119:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * Some kernel aware debuggers require the data the debugger needs access to be
 120:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * global, rather than file scope.
 121:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  */
 122:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #ifdef portREMOVE_STATIC_QUALIFIER
 123:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#define static
 124:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif
 125:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 126:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /* The name allocated to the Idle task.  This can be overridden by defining
 127:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** configIDLE_TASK_NAME in FreeRTOSConfig.h. */
 128:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #ifndef configIDLE_TASK_NAME
 129:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#define configIDLE_TASK_NAME "IDLE"
 130:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif
 131:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 132:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( configUSE_PORT_OPTIMISED_TASK_SELECTION == 0 )
 133:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 134:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* If configUSE_PORT_OPTIMISED_TASK_SELECTION is 0 then task selection is
 135:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	performed in a generic way that is not optimised to any particular
 136:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	microcontroller architecture. */
 137:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 138:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* uxTopReadyPriority holds the priority of the highest priority ready
 139:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	state task. */
 140:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#define taskRECORD_READY_PRIORITY( uxPriority )														\
 141:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{																									\
 142:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( ( uxPriority ) > uxTopReadyPriority )														\
 143:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{																								\
 144:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			uxTopReadyPriority = ( uxPriority );														\
 145:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}																								\
 146:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	} /* taskRECORD_READY_PRIORITY */
ARM GAS  /tmp/ccRhC8mT.s 			page 4


 147:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 148:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/*-----------------------------------------------------------*/
 149:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 150:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#define taskSELECT_HIGHEST_PRIORITY_TASK()															\
 151:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{																									\
 152:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	UBaseType_t uxTopPriority = uxTopReadyPriority;														\
 153:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 																										\
 154:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Find the highest priority queue that contains ready tasks. */								\
 155:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		while( listLIST_IS_EMPTY( &( pxReadyTasksLists[ uxTopPriority ] ) ) )							\
 156:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{																								\
 157:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			configASSERT( uxTopPriority );																\
 158:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			--uxTopPriority;																			\
 159:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}																								\
 160:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 																										\
 161:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* listGET_OWNER_OF_NEXT_ENTRY indexes through the list, so the tasks of						\
 162:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		the	same priority get an equal share of the processor time. */									\
 163:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		listGET_OWNER_OF_NEXT_ENTRY( pxCurrentTCB, &( pxReadyTasksLists[ uxTopPriority ] ) );			\
 164:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		uxTopReadyPriority = uxTopPriority;																\
 165:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	} /* taskSELECT_HIGHEST_PRIORITY_TASK */
 166:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 167:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/*-----------------------------------------------------------*/
 168:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 169:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* Define away taskRESET_READY_PRIORITY() and portRESET_READY_PRIORITY() as
 170:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	they are only required when a port optimised method of task selection is
 171:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	being used. */
 172:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#define taskRESET_READY_PRIORITY( uxPriority )
 173:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#define portRESET_READY_PRIORITY( uxPriority, uxTopReadyPriority )
 174:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 175:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #else /* configUSE_PORT_OPTIMISED_TASK_SELECTION */
 176:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 177:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* If configUSE_PORT_OPTIMISED_TASK_SELECTION is 1 then task selection is
 178:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	performed in a way that is tailored to the particular microcontroller
 179:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	architecture being used. */
 180:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 181:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* A port optimised version is provided.  Call the port defined macros. */
 182:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#define taskRECORD_READY_PRIORITY( uxPriority )	portRECORD_READY_PRIORITY( uxPriority, uxTopReadyP
 183:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 184:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/*-----------------------------------------------------------*/
 185:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 186:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#define taskSELECT_HIGHEST_PRIORITY_TASK()														\
 187:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{																								\
 188:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	UBaseType_t uxTopPriority;																		\
 189:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 																									\
 190:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Find the highest priority list that contains ready tasks. */								\
 191:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		portGET_HIGHEST_PRIORITY( uxTopPriority, uxTopReadyPriority );								\
 192:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		configASSERT( listCURRENT_LIST_LENGTH( &( pxReadyTasksLists[ uxTopPriority ] ) ) > 0 );		\
 193:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		listGET_OWNER_OF_NEXT_ENTRY( pxCurrentTCB, &( pxReadyTasksLists[ uxTopPriority ] ) );		\
 194:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	} /* taskSELECT_HIGHEST_PRIORITY_TASK() */
 195:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 196:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/*-----------------------------------------------------------*/
 197:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 198:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* A port optimised version is provided, call it only if the TCB being reset
 199:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	is being referenced from a ready list.  If it is referenced from a delayed
 200:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	or suspended list then it won't be in a ready list. */
 201:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#define taskRESET_READY_PRIORITY( uxPriority )														\
 202:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{																									\
 203:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( listCURRENT_LIST_LENGTH( &( pxReadyTasksLists[ ( uxPriority ) ] ) ) == ( UBaseType_t ) 0 )	\
ARM GAS  /tmp/ccRhC8mT.s 			page 5


 204:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{																								\
 205:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			portRESET_READY_PRIORITY( ( uxPriority ), ( uxTopReadyPriority ) );							\
 206:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}																								\
 207:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 208:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 209:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* configUSE_PORT_OPTIMISED_TASK_SELECTION */
 210:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 211:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
 212:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 213:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /* pxDelayedTaskList and pxOverflowDelayedTaskList are switched when the tick
 214:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** count overflows. */
 215:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #define taskSWITCH_DELAYED_LISTS()																	\
 216:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** {																									\
 217:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	List_t *pxTemp;																					\
 218:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 																									\
 219:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* The delayed tasks list should be empty when the lists are switched. */						\
 220:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	configASSERT( ( listLIST_IS_EMPTY( pxDelayedTaskList ) ) );										\
 221:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 																									\
 222:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	pxTemp = pxDelayedTaskList;																		\
 223:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	pxDelayedTaskList = pxOverflowDelayedTaskList;													\
 224:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	pxOverflowDelayedTaskList = pxTemp;																\
 225:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	xNumOfOverflows++;																				\
 226:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	prvResetNextTaskUnblockTime();																	\
 227:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
 228:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 229:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
 230:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 231:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*
 232:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * Place the task represented by pxTCB into the appropriate ready list for
 233:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * the task.  It is inserted at the end of the list.
 234:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  */
 235:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #define prvAddTaskToReadyList( pxTCB )																\
 236:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	traceMOVED_TASK_TO_READY_STATE( pxTCB );														\
 237:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	taskRECORD_READY_PRIORITY( ( pxTCB )->uxPriority );												\
 238:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	vListInsertEnd( &( pxReadyTasksLists[ ( pxTCB )->uxPriority ] ), &( ( pxTCB )->xStateListItem ) );
 239:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	tracePOST_MOVED_TASK_TO_READY_STATE( pxTCB )
 240:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
 241:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 242:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*
 243:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * Several functions take an TaskHandle_t parameter that can optionally be NULL,
 244:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * where NULL is used to indicate that the handle of the currently executing
 245:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * task should be used in place of the parameter.  This macro simply checks to
 246:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * see if the parameter is NULL and returns a pointer to the appropriate TCB.
 247:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  */
 248:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #define prvGetTCBFromHandle( pxHandle ) ( ( ( pxHandle ) == NULL ) ? ( TCB_t * ) pxCurrentTCB : ( T
 249:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 250:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /* The item value of the event list item is normally used to hold the priority
 251:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** of the task to which it belongs (coded to allow it to be held in reverse
 252:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** priority order).  However, it is occasionally borrowed for other purposes.  It
 253:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** is important its value is not updated due to a task priority change while it is
 254:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** being used for another purpose.  The following bit definition is used to inform
 255:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** the scheduler that the value should not be changed - in which case it is the
 256:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** responsibility of whichever module is using the value to ensure it gets set back
 257:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** to its original value when it is released. */
 258:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if( configUSE_16_BIT_TICKS == 1 )
 259:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#define taskEVENT_LIST_ITEM_VALUE_IN_USE	0x8000U
 260:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #else
ARM GAS  /tmp/ccRhC8mT.s 			page 6


 261:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#define taskEVENT_LIST_ITEM_VALUE_IN_USE	0x80000000UL
 262:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif
 263:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 264:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*
 265:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * Task control block.  A task control block (TCB) is allocated for each task,
 266:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * and stores task state information, including a pointer to the task's context
 267:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * (the task's run time environment, including register values)
 268:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  */
 269:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** typedef struct tskTaskControlBlock
 270:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** {
 271:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	volatile StackType_t	*pxTopOfStack;	/*< Points to the location of the last item placed on the task
 272:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 273:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#if ( portUSING_MPU_WRAPPERS == 1 )
 274:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		xMPU_SETTINGS	xMPUSettings;		/*< The MPU settings are defined as part of the port layer.  THIS MU
 275:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#endif
 276:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 277:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	ListItem_t			xStateListItem;	/*< The list that the state list item of a task is reference from den
 278:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	ListItem_t			xEventListItem;		/*< Used to reference a task from an event list. */
 279:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	UBaseType_t			uxPriority;			/*< The priority of the task.  0 is the lowest priority. */
 280:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	StackType_t			*pxStack;			/*< Points to the start of the stack. */
 281:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	char				pcTaskName[ configMAX_TASK_NAME_LEN ];/*< Descriptive name given to the task when created.
 282:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 283:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#if ( ( portSTACK_GROWTH > 0 ) || ( configRECORD_STACK_HIGH_ADDRESS == 1 ) )
 284:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		StackType_t		*pxEndOfStack;		/*< Points to the highest valid address for the stack. */
 285:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#endif
 286:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 287:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#if ( portCRITICAL_NESTING_IN_TCB == 1 )
 288:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		UBaseType_t		uxCriticalNesting;	/*< Holds the critical section nesting depth for ports that do no
 289:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#endif
 290:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 291:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#if ( configUSE_TRACE_FACILITY == 1 )
 292:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		UBaseType_t		uxTCBNumber;		/*< Stores a number that increments each time a TCB is created.  It al
 293:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		UBaseType_t		uxTaskNumber;		/*< Stores a number specifically for use by third party trace code. *
 294:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#endif
 295:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 296:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#if ( configUSE_MUTEXES == 1 )
 297:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		UBaseType_t		uxBasePriority;		/*< The priority last assigned to the task - used by the priority i
 298:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		UBaseType_t		uxMutexesHeld;
 299:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#endif
 300:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 301:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#if ( configUSE_APPLICATION_TASK_TAG == 1 )
 302:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		TaskHookFunction_t pxTaskTag;
 303:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#endif
 304:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 305:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#if( configNUM_THREAD_LOCAL_STORAGE_POINTERS > 0 )
 306:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		void			*pvThreadLocalStoragePointers[ configNUM_THREAD_LOCAL_STORAGE_POINTERS ];
 307:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#endif
 308:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 309:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#if( configGENERATE_RUN_TIME_STATS == 1 )
 310:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		uint32_t		ulRunTimeCounter;	/*< Stores the amount of time the task has spent in the Running state
 311:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#endif
 312:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 313:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#if ( configUSE_NEWLIB_REENTRANT == 1 )
 314:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Allocate a Newlib reent structure that is specific to this task.
 315:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		Note Newlib support has been included by popular demand, but is not
 316:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		used by the FreeRTOS maintainers themselves.  FreeRTOS is not
 317:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		responsible for resulting newlib operation.  User must be familiar with
ARM GAS  /tmp/ccRhC8mT.s 			page 7


 318:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		newlib and must provide system-wide implementations of the necessary
 319:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		stubs. Be warned that (at the time of writing) the current newlib design
 320:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		implements a system-wide malloc() that must be provided with locks. */
 321:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		struct	_reent xNewLib_reent;
 322:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#endif
 323:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 324:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#if( configUSE_TASK_NOTIFICATIONS == 1 )
 325:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		volatile uint32_t ulNotifiedValue;
 326:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		volatile uint8_t ucNotifyState;
 327:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#endif
 328:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 329:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* See the comments above the definition of
 330:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	tskSTATIC_AND_DYNAMIC_ALLOCATION_POSSIBLE. */
 331:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#if( tskSTATIC_AND_DYNAMIC_ALLOCATION_POSSIBLE != 0 ) /*lint !e731 Macro has been consolidated for
 332:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		uint8_t	ucStaticallyAllocated; 		/*< Set to pdTRUE if the task is a statically allocated to ensur
 333:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#endif
 334:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 335:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#if( INCLUDE_xTaskAbortDelay == 1 )
 336:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		uint8_t ucDelayAborted;
 337:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#endif
 338:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 339:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** } tskTCB;
 340:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 341:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /* The old tskTCB name is maintained above then typedefed to the new TCB_t name
 342:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** below to enable the use of older kernel aware debuggers. */
 343:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** typedef tskTCB TCB_t;
 344:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 345:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*lint -save -e956 A manual analysis and inspection has been used to determine
 346:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** which static variables must be declared volatile. */
 347:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 348:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** PRIVILEGED_DATA TCB_t * volatile pxCurrentTCB = NULL;
 349:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 350:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /* Lists for ready and blocked tasks. --------------------*/
 351:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** PRIVILEGED_DATA static List_t pxReadyTasksLists[ configMAX_PRIORITIES ] = {0};	/*< Prioritised read
 352:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** PRIVILEGED_DATA static List_t xDelayedTaskList1 = {0};								/*< Delayed tasks. */
 353:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** PRIVILEGED_DATA static List_t xDelayedTaskList2 = {0};								/*< Delayed tasks (two lists are used
 354:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** PRIVILEGED_DATA static List_t * volatile pxDelayedTaskList = NULL;					/*< Points to the delayed ta
 355:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** PRIVILEGED_DATA static List_t * volatile pxOverflowDelayedTaskList = NULL;			/*< Points to the dela
 356:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** PRIVILEGED_DATA static List_t xPendingReadyList = {0};								/*< Tasks that have been readied whil
 357:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 358:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if( INCLUDE_vTaskDelete == 1 )
 359:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 360:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	PRIVILEGED_DATA static List_t xTasksWaitingTermination = {0};					/*< Tasks that have been deleted
 361:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	PRIVILEGED_DATA static volatile UBaseType_t uxDeletedTasksWaitingCleanUp = ( UBaseType_t ) 0U;
 362:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 363:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif
 364:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 365:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( INCLUDE_vTaskSuspend == 1 )
 366:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 367:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	PRIVILEGED_DATA static List_t xSuspendedTaskList = {0};						/*< Tasks that are currently suspende
 368:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 369:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif
 370:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 371:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /* Other file private variables. --------------------------------*/
 372:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** PRIVILEGED_DATA static volatile UBaseType_t uxCurrentNumberOfTasks 	= ( UBaseType_t ) 0U;
 373:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** PRIVILEGED_DATA static volatile TickType_t xTickCount 				= ( TickType_t ) configINITIAL_TICK_COUNT
 374:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** PRIVILEGED_DATA static volatile UBaseType_t uxTopReadyPriority 		= tskIDLE_PRIORITY;
ARM GAS  /tmp/ccRhC8mT.s 			page 8


 375:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** PRIVILEGED_DATA static volatile BaseType_t xSchedulerRunning 		= pdFALSE;
 376:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** PRIVILEGED_DATA static volatile UBaseType_t uxPendedTicks 			= ( UBaseType_t ) 0U;
 377:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** PRIVILEGED_DATA static volatile BaseType_t xYieldPending 			= pdFALSE;
 378:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** PRIVILEGED_DATA static volatile BaseType_t xNumOfOverflows 			= ( BaseType_t ) 0;
 379:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** PRIVILEGED_DATA static UBaseType_t uxTaskNumber 					= ( UBaseType_t ) 0U;
 380:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** PRIVILEGED_DATA static volatile TickType_t xNextTaskUnblockTime		= ( TickType_t ) 0U; /* Initialise
 381:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** PRIVILEGED_DATA static TaskHandle_t xIdleTaskHandle					= NULL;			/*< Holds the handle of the idle 
 382:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 383:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /* Context switches are held pending while the scheduler is suspended.  Also,
 384:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** interrupts must not manipulate the xStateListItem of a TCB, or any of the
 385:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** lists the xStateListItem can be referenced from, if the scheduler is suspended.
 386:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** If an interrupt needs to unblock a task while the scheduler is suspended then it
 387:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** moves the task's event list item into the xPendingReadyList, ready for the
 388:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** kernel to move the task from the pending ready list into the real ready list
 389:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** when the scheduler is unsuspended.  The pending ready list itself can only be
 390:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** accessed from a critical section. */
 391:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** PRIVILEGED_DATA static volatile UBaseType_t uxSchedulerSuspended	= ( UBaseType_t ) pdFALSE;
 392:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 393:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( configGENERATE_RUN_TIME_STATS == 1 )
 394:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 395:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	PRIVILEGED_DATA static uint32_t ulTaskSwitchedInTime = 0UL;	/*< Holds the value of a timer/counter
 396:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	PRIVILEGED_DATA static uint32_t ulTotalRunTime = 0UL;		/*< Holds the total amount of execution tim
 397:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 398:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif
 399:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 400:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*lint -restore */
 401:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 402:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
 403:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 404:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /* Callback function prototypes. --------------------------*/
 405:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if(  configCHECK_FOR_STACK_OVERFLOW > 0 )
 406:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	extern void vApplicationStackOverflowHook( TaskHandle_t xTask, char *pcTaskName );
 407:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif
 408:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 409:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if( configUSE_TICK_HOOK > 0 )
 410:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	extern void vApplicationTickHook( void );
 411:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif
 412:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 413:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if( configSUPPORT_STATIC_ALLOCATION == 1 )
 414:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	extern void vApplicationGetIdleTaskMemory( StaticTask_t **ppxIdleTaskTCBBuffer, StackType_t **ppxI
 415:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif
 416:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 417:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /* File private functions. --------------------------------*/
 418:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 419:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /**
 420:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * Utility task that simply returns pdTRUE if the task referenced by xTask is
 421:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * currently in the Suspended state, or pdFALSE if the task referenced by xTask
 422:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * is in any other state.
 423:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  */
 424:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( INCLUDE_vTaskSuspend == 1 )
 425:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 426:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	static BaseType_t prvTaskIsTaskSuspended( const TaskHandle_t xTask ) PRIVILEGED_FUNCTION;
 427:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 428:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* INCLUDE_vTaskSuspend */
 429:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 430:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*
 431:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * Utility to ready all the lists used by the scheduler.  This is called
ARM GAS  /tmp/ccRhC8mT.s 			page 9


 432:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * automatically upon the creation of the first task.
 433:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  */
 434:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** static void prvInitialiseTaskLists( void ) PRIVILEGED_FUNCTION;
 435:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 436:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*
 437:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * The idle task, which as all tasks is implemented as a never ending loop.
 438:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * The idle task is automatically created and added to the ready lists upon
 439:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * creation of the first user task.
 440:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  *
 441:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * The portTASK_FUNCTION_PROTO() macro is used to allow port/compiler specific
 442:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * language extensions.  The equivalent prototype for this function is:
 443:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  *
 444:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * void prvIdleTask( void *pvParameters );
 445:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  *
 446:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  */
 447:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** static portTASK_FUNCTION_PROTO( prvIdleTask, pvParameters );
 448:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 449:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*
 450:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * Utility to free all memory allocated by the scheduler to hold a TCB,
 451:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * including the stack pointed to by the TCB.
 452:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  *
 453:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * This does not free memory allocated by the task itself (i.e. memory
 454:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * allocated by calls to pvPortMalloc from within the tasks application code).
 455:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  */
 456:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( INCLUDE_vTaskDelete == 1 )
 457:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 458:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	static void prvDeleteTCB( TCB_t *pxTCB ) PRIVILEGED_FUNCTION;
 459:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 460:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif
 461:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 462:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*
 463:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * Used only by the idle task.  This checks to see if anything has been placed
 464:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * in the list of tasks waiting to be deleted.  If so the task is cleaned up
 465:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * and its TCB deleted.
 466:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  */
 467:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** static void prvCheckTasksWaitingTermination( void ) PRIVILEGED_FUNCTION;
 468:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 469:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*
 470:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * The currently executing task is entering the Blocked state.  Add the task to
 471:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * either the current or the overflow delayed task list.
 472:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  */
 473:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** static void prvAddCurrentTaskToDelayedList( TickType_t xTicksToWait, const BaseType_t xCanBlockInde
 474:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 475:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*
 476:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * Fills an TaskStatus_t structure with information on each task that is
 477:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * referenced from the pxList list (which may be a ready list, a delayed list,
 478:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * a suspended list, etc.).
 479:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  *
 480:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * THIS FUNCTION IS INTENDED FOR DEBUGGING ONLY, AND SHOULD NOT BE CALLED FROM
 481:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * NORMAL APPLICATION CODE.
 482:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  */
 483:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( configUSE_TRACE_FACILITY == 1 )
 484:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 485:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	static UBaseType_t prvListTasksWithinSingleList( TaskStatus_t *pxTaskStatusArray, List_t *pxList, 
 486:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 487:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif
 488:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
ARM GAS  /tmp/ccRhC8mT.s 			page 10


 489:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*
 490:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * Searches pxList for a task with name pcNameToQuery - returning a handle to
 491:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * the task if it is found, or NULL if the task is not found.
 492:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  */
 493:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( INCLUDE_xTaskGetHandle == 1 )
 494:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 495:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	static TCB_t *prvSearchForNameWithinSingleList( List_t *pxList, const char pcNameToQuery[] ) PRIVI
 496:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 497:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif
 498:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 499:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*
 500:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * When a task is created, the stack of the task is filled with a known value.
 501:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * This function determines the 'high water mark' of the task stack by
 502:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * determining how much of the stack remains at the original preset value.
 503:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  */
 504:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( ( configUSE_TRACE_FACILITY == 1 ) || ( INCLUDE_uxTaskGetStackHighWaterMark == 1 ) )
 505:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 506:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	static uint16_t prvTaskCheckFreeStackSpace( const uint8_t * pucStackByte ) PRIVILEGED_FUNCTION;
 507:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 508:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif
 509:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 510:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*
 511:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * Return the amount of time, in ticks, that will pass before the kernel will
 512:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * next move a task from the Blocked state to the Running state.
 513:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  *
 514:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * This conditional compilation should use inequality to 0, not equality to 1.
 515:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * This is to ensure portSUPPRESS_TICKS_AND_SLEEP() can be called when user
 516:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * defined low power mode implementations require configUSE_TICKLESS_IDLE to be
 517:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * set to a value other than 1.
 518:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  */
 519:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( configUSE_TICKLESS_IDLE != 0 )
 520:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 521:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	static TickType_t prvGetExpectedIdleTime( void ) PRIVILEGED_FUNCTION;
 522:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 523:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif
 524:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 525:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*
 526:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * Set xNextTaskUnblockTime to the time at which the next Blocked state task
 527:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * will exit the Blocked state.
 528:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  */
 529:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** static void prvResetNextTaskUnblockTime( void );
 530:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 531:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( ( configUSE_TRACE_FACILITY == 1 ) && ( configUSE_STATS_FORMATTING_FUNCTIONS > 0 ) )
 532:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 533:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/*
 534:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	 * Helper function used to pad task names with spaces when printing out
 535:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	 * human readable tables of task information.
 536:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	 */
 537:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	static char *prvWriteNameToBuffer( char *pcBuffer, const char *pcTaskName ) PRIVILEGED_FUNCTION;
 538:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 539:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif
 540:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 541:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*
 542:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * Called after a Task_t structure has been allocated either statically or
 543:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * dynamically to fill in the structure's members.
 544:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  */
 545:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** static void prvInitialiseNewTask( 	TaskFunction_t pxTaskCode,
ARM GAS  /tmp/ccRhC8mT.s 			page 11


 546:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 									const char * const pcName, 		/*lint !e971 Unqualified char types are allowed for strings a
 547:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 									const uint32_t ulStackDepth,
 548:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 									void * const pvParameters,
 549:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 									UBaseType_t uxPriority,
 550:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 									TaskHandle_t * const pxCreatedTask,
 551:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 									TCB_t *pxNewTCB,
 552:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 									const MemoryRegion_t * const xRegions ) PRIVILEGED_FUNCTION;
 553:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 554:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*
 555:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * Called after a new task has been created and initialised to place the task
 556:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * under the control of the scheduler.
 557:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  */
 558:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** static void prvAddNewTaskToReadyList( TCB_t *pxNewTCB ) PRIVILEGED_FUNCTION;
 559:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 560:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*
 561:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * freertos_tasks_c_additions_init() should only be called if the user definable
 562:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * macro FREERTOS_TASKS_C_ADDITIONS_INIT() is defined, as that is the only macro
 563:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * called by the function.
 564:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  */
 565:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #ifdef FREERTOS_TASKS_C_ADDITIONS_INIT
 566:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 567:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	static void freertos_tasks_c_additions_init( void ) PRIVILEGED_FUNCTION;
 568:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 569:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif
 570:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 571:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
 572:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 573:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if( configSUPPORT_STATIC_ALLOCATION == 1 )
 574:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 575:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TaskHandle_t xTaskCreateStatic(	TaskFunction_t pxTaskCode,
 576:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 									const char * const pcName,		/*lint !e971 Unqualified char types are allowed for strings an
 577:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 									const uint32_t ulStackDepth,
 578:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 									void * const pvParameters,
 579:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 									UBaseType_t uxPriority,
 580:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 									StackType_t * const puxStackBuffer,
 581:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 									StaticTask_t * const pxTaskBuffer )
 582:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 583:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t *pxNewTCB;
 584:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TaskHandle_t xReturn;
 585:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 586:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		configASSERT( puxStackBuffer != NULL );
 587:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		configASSERT( pxTaskBuffer != NULL );
 588:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 589:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#if( configASSERT_DEFINED == 1 )
 590:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 591:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Sanity check that the size of the structure used to declare a
 592:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			variable of type StaticTask_t equals the size of the real task
 593:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			structure. */
 594:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			volatile size_t xSize = sizeof( StaticTask_t );
 595:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			configASSERT( xSize == sizeof( TCB_t ) );
 596:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 597:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#endif /* configASSERT_DEFINED */
 598:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 599:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 600:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( ( pxTaskBuffer != NULL ) && ( puxStackBuffer != NULL ) )
 601:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 602:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* The memory used for the task's TCB and stack are passed into this
ARM GAS  /tmp/ccRhC8mT.s 			page 12


 603:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			function - use them. */
 604:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxNewTCB = ( TCB_t * ) pxTaskBuffer; /*lint !e740 Unusual cast is ok as the structures are desig
 605:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxNewTCB->pxStack = ( StackType_t * ) puxStackBuffer;
 606:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 607:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			#if( tskSTATIC_AND_DYNAMIC_ALLOCATION_POSSIBLE != 0 ) /*lint !e731 Macro has been consolidated f
 608:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 609:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* Tasks can be created statically or dynamically, so note this
 610:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				task was created statically in case the task is later deleted. */
 611:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				pxNewTCB->ucStaticallyAllocated = tskSTATICALLY_ALLOCATED_STACK_AND_TCB;
 612:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 613:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			#endif /* configSUPPORT_DYNAMIC_ALLOCATION */
 614:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 615:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			prvInitialiseNewTask( pxTaskCode, pcName, ulStackDepth, pvParameters, uxPriority, &xReturn, pxNe
 616:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			prvAddNewTaskToReadyList( pxNewTCB );
 617:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 618:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
 619:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 620:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			xReturn = NULL;
 621:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 622:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 623:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		return xReturn;
 624:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 625:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 626:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* SUPPORT_STATIC_ALLOCATION */
 627:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
 628:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 629:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if( ( portUSING_MPU_WRAPPERS == 1 ) && ( configSUPPORT_STATIC_ALLOCATION == 1 ) )
 630:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 631:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xTaskCreateRestrictedStatic( const TaskParameters_t * const pxTaskDefinition, TaskHandl
 632:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 633:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t *pxNewTCB;
 634:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xReturn = errCOULD_NOT_ALLOCATE_REQUIRED_MEMORY;
 635:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 636:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		configASSERT( pxTaskDefinition->puxStackBuffer != NULL );
 637:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		configASSERT( pxTaskDefinition->pxTaskBuffer != NULL );
 638:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 639:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( ( pxTaskDefinition->puxStackBuffer != NULL ) && ( pxTaskDefinition->pxTaskBuffer != NULL ) )
 640:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 641:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Allocate space for the TCB.  Where the memory comes from depends
 642:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			on the implementation of the port malloc function and whether or
 643:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			not static allocation is being used. */
 644:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxNewTCB = ( TCB_t * ) pxTaskDefinition->pxTaskBuffer;
 645:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 646:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Store the stack location in the TCB. */
 647:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxNewTCB->pxStack = pxTaskDefinition->puxStackBuffer;
 648:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 649:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			#if( tskSTATIC_AND_DYNAMIC_ALLOCATION_POSSIBLE != 0 )
 650:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 651:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* Tasks can be created statically or dynamically, so note this
 652:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				task was created statically in case the task is later deleted. */
 653:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				pxNewTCB->ucStaticallyAllocated = tskSTATICALLY_ALLOCATED_STACK_AND_TCB;
 654:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 655:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			#endif /* configSUPPORT_DYNAMIC_ALLOCATION */
 656:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 657:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			prvInitialiseNewTask(	pxTaskDefinition->pvTaskCode,
 658:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 									pxTaskDefinition->pcName,
 659:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 									( uint32_t ) pxTaskDefinition->usStackDepth,
ARM GAS  /tmp/ccRhC8mT.s 			page 13


 660:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 									pxTaskDefinition->pvParameters,
 661:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 									pxTaskDefinition->uxPriority,
 662:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 									pxCreatedTask, pxNewTCB,
 663:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 									pxTaskDefinition->xRegions );
 664:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 665:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			prvAddNewTaskToReadyList( pxNewTCB );
 666:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			xReturn = pdPASS;
 667:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 668:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 669:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		return xReturn;
 670:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 671:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 672:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* ( portUSING_MPU_WRAPPERS == 1 ) && ( configSUPPORT_STATIC_ALLOCATION == 1 ) */
 673:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
 674:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 675:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if( ( portUSING_MPU_WRAPPERS == 1 ) && ( configSUPPORT_DYNAMIC_ALLOCATION == 1 ) )
 676:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 677:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xTaskCreateRestricted( const TaskParameters_t * const pxTaskDefinition, TaskHandle_t *p
 678:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 679:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t *pxNewTCB;
 680:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xReturn = errCOULD_NOT_ALLOCATE_REQUIRED_MEMORY;
 681:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 682:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		configASSERT( pxTaskDefinition->puxStackBuffer );
 683:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 684:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( pxTaskDefinition->puxStackBuffer != NULL )
 685:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 686:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Allocate space for the TCB.  Where the memory comes from depends
 687:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			on the implementation of the port malloc function and whether or
 688:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			not static allocation is being used. */
 689:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxNewTCB = ( TCB_t * ) pvPortMalloc( sizeof( TCB_t ) );
 690:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 691:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( pxNewTCB != NULL )
 692:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 693:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* Store the stack location in the TCB. */
 694:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				pxNewTCB->pxStack = pxTaskDefinition->puxStackBuffer;
 695:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 696:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				#if( configSUPPORT_STATIC_ALLOCATION == 1 )
 697:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 698:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* Tasks can be created statically or dynamically, so note
 699:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					this task had a statically allocated stack in case it is
 700:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					later deleted.  The TCB was allocated dynamically. */
 701:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					pxNewTCB->ucStaticallyAllocated = tskSTATICALLY_ALLOCATED_STACK_ONLY;
 702:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 703:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				#endif
 704:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 705:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				prvInitialiseNewTask(	pxTaskDefinition->pvTaskCode,
 706:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 										pxTaskDefinition->pcName,
 707:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 										( uint32_t ) pxTaskDefinition->usStackDepth,
 708:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 										pxTaskDefinition->pvParameters,
 709:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 										pxTaskDefinition->uxPriority,
 710:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 										pxCreatedTask, pxNewTCB,
 711:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 										pxTaskDefinition->xRegions );
 712:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 713:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				prvAddNewTaskToReadyList( pxNewTCB );
 714:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				xReturn = pdPASS;
 715:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 716:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
ARM GAS  /tmp/ccRhC8mT.s 			page 14


 717:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 718:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		return xReturn;
 719:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 720:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 721:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* portUSING_MPU_WRAPPERS */
 722:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
 723:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 724:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if( configSUPPORT_DYNAMIC_ALLOCATION == 1 )
 725:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 726:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xTaskCreate(	TaskFunction_t pxTaskCode,
 727:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							const char * const pcName,		/*lint !e971 Unqualified char types are allowed for strings and 
 728:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							const configSTACK_DEPTH_TYPE usStackDepth,
 729:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							void * const pvParameters,
 730:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							UBaseType_t uxPriority,
 731:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							TaskHandle_t * const pxCreatedTask )
 732:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 733:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t *pxNewTCB;
 734:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xReturn;
 735:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 736:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* If the stack grows down then allocate the stack then the TCB so the stack
 737:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		does not grow into the TCB.  Likewise if the stack grows up then allocate
 738:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		the TCB then the stack. */
 739:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#if( portSTACK_GROWTH > 0 )
 740:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 741:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Allocate space for the TCB.  Where the memory comes from depends on
 742:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			the implementation of the port malloc function and whether or not static
 743:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			allocation is being used. */
 744:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxNewTCB = ( TCB_t * ) pvPortMalloc( sizeof( TCB_t ) );
 745:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 746:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( pxNewTCB != NULL )
 747:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 748:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* Allocate space for the stack used by the task being created.
 749:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				The base of the stack memory stored in the TCB so the task can
 750:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				be deleted later if required. */
 751:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				pxNewTCB->pxStack = ( StackType_t * ) pvPortMalloc( ( ( ( size_t ) usStackDepth ) * sizeof( Sta
 752:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 753:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				if( pxNewTCB->pxStack == NULL )
 754:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 755:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* Could not allocate the stack.  Delete the allocated TCB. */
 756:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					vPortFree( pxNewTCB );
 757:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					pxNewTCB = NULL;
 758:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 759:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 760:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 761:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#else /* portSTACK_GROWTH */
 762:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 763:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		StackType_t *pxStack;
 764:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 765:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Allocate space for the stack used by the task being created. */
 766:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxStack = ( StackType_t * ) pvPortMalloc( ( ( ( size_t ) usStackDepth ) * sizeof( StackType_t ) 
 767:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 768:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( pxStack != NULL )
 769:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 770:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* Allocate space for the TCB. */
 771:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				pxNewTCB = ( TCB_t * ) pvPortMalloc( sizeof( TCB_t ) ); /*lint !e961 MISRA exception as the cas
 772:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 773:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				if( pxNewTCB != NULL )
ARM GAS  /tmp/ccRhC8mT.s 			page 15


 774:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 775:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* Store the stack location in the TCB. */
 776:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					pxNewTCB->pxStack = pxStack;
 777:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 778:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				else
 779:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 780:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* The stack cannot be used as the TCB was not created.  Free
 781:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					it again. */
 782:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					vPortFree( pxStack );
 783:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 784:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 785:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
 786:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 787:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				pxNewTCB = NULL;
 788:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 789:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 790:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#endif /* portSTACK_GROWTH */
 791:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 792:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( pxNewTCB != NULL )
 793:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 794:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			#if( tskSTATIC_AND_DYNAMIC_ALLOCATION_POSSIBLE != 0 ) /*lint !e731 Macro has been consolidated f
 795:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 796:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* Tasks can be created statically or dynamically, so note this
 797:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				task was created dynamically in case it is later deleted. */
 798:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				pxNewTCB->ucStaticallyAllocated = tskDYNAMICALLY_ALLOCATED_STACK_AND_TCB;
 799:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 800:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			#endif /* configSUPPORT_STATIC_ALLOCATION */
 801:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 802:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			prvInitialiseNewTask( pxTaskCode, pcName, ( uint32_t ) usStackDepth, pvParameters, uxPriority, p
 803:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			prvAddNewTaskToReadyList( pxNewTCB );
 804:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			xReturn = pdPASS;
 805:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 806:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
 807:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 808:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			xReturn = errCOULD_NOT_ALLOCATE_REQUIRED_MEMORY;
 809:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 810:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 811:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		return xReturn;
 812:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 813:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 814:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* configSUPPORT_DYNAMIC_ALLOCATION */
 815:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
 816:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 817:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** static void prvInitialiseNewTask( 	TaskFunction_t pxTaskCode,
 818:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 									const char * const pcName,		/*lint !e971 Unqualified char types are allowed for strings an
 819:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 									const uint32_t ulStackDepth,
 820:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 									void * const pvParameters,
 821:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 									UBaseType_t uxPriority,
 822:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 									TaskHandle_t * const pxCreatedTask,
 823:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 									TCB_t *pxNewTCB,
 824:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 									const MemoryRegion_t * const xRegions )
 825:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** {
 826:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** StackType_t *pxTopOfStack;
 827:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** UBaseType_t x;
 828:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 829:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#if( portUSING_MPU_WRAPPERS == 1 )
 830:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Should the task be created in privileged mode? */
ARM GAS  /tmp/ccRhC8mT.s 			page 16


 831:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		BaseType_t xRunPrivileged;
 832:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( ( uxPriority & portPRIVILEGE_BIT ) != 0U )
 833:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 834:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			xRunPrivileged = pdTRUE;
 835:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 836:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
 837:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 838:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			xRunPrivileged = pdFALSE;
 839:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 840:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		uxPriority &= ~portPRIVILEGE_BIT;
 841:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#endif /* portUSING_MPU_WRAPPERS == 1 */
 842:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 843:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* Avoid dependency on memset() if it is not required. */
 844:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#if( tskSET_NEW_STACKS_TO_KNOWN_VALUE == 1 )
 845:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 846:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Fill the stack with a known value to assist debugging. */
 847:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		( void ) memset( pxNewTCB->pxStack, ( int ) tskSTACK_FILL_BYTE, ( size_t ) ulStackDepth * sizeof(
 848:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 849:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#endif /* tskSET_NEW_STACKS_TO_KNOWN_VALUE */
 850:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 851:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* Calculate the top of stack address.  This depends on whether the stack
 852:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	grows from high memory to low (as per the 80x86) or vice versa.
 853:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	portSTACK_GROWTH is used to make the result positive or negative as required
 854:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	by the port. */
 855:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#if( portSTACK_GROWTH < 0 )
 856:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 857:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxTopOfStack = pxNewTCB->pxStack + ( ulStackDepth - ( uint32_t ) 1 );
 858:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxTopOfStack = ( StackType_t * ) ( ( ( portPOINTER_SIZE_TYPE ) pxTopOfStack ) & ( ~( ( portPOINTE
 859:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 860:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Check the alignment of the calculated top of stack is correct. */
 861:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		configASSERT( ( ( ( portPOINTER_SIZE_TYPE ) pxTopOfStack & ( portPOINTER_SIZE_TYPE ) portBYTE_ALI
 862:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 863:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#if( configRECORD_STACK_HIGH_ADDRESS == 1 )
 864:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 865:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Also record the stack's high address, which may assist
 866:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			debugging. */
 867:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxNewTCB->pxEndOfStack = pxTopOfStack;
 868:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 869:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#endif /* configRECORD_STACK_HIGH_ADDRESS */
 870:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 871:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#else /* portSTACK_GROWTH */
 872:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 873:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxTopOfStack = pxNewTCB->pxStack;
 874:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 875:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Check the alignment of the stack buffer is correct. */
 876:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		configASSERT( ( ( ( portPOINTER_SIZE_TYPE ) pxNewTCB->pxStack & ( portPOINTER_SIZE_TYPE ) portBYT
 877:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 878:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* The other extreme of the stack space is required if stack checking is
 879:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		performed. */
 880:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxNewTCB->pxEndOfStack = pxNewTCB->pxStack + ( ulStackDepth - ( uint32_t ) 1 );
 881:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 882:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#endif /* portSTACK_GROWTH */
 883:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 884:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* Store the task name in the TCB. */
 885:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	for( x = ( UBaseType_t ) 0; x < ( UBaseType_t ) configMAX_TASK_NAME_LEN; x++ )
 886:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 887:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxNewTCB->pcTaskName[ x ] = pcName[ x ];
ARM GAS  /tmp/ccRhC8mT.s 			page 17


 888:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 889:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Don't copy all configMAX_TASK_NAME_LEN if the string is shorter than
 890:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		configMAX_TASK_NAME_LEN characters just in case the memory after the
 891:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		string is not accessible (extremely unlikely). */
 892:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( pcName[ x ] == 0x00 )
 893:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 894:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			break;
 895:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 896:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
 897:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 898:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
 899:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 900:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 901:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 902:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* Ensure the name string is terminated in the case that the string length
 903:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	was greater or equal to configMAX_TASK_NAME_LEN. */
 904:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	pxNewTCB->pcTaskName[ configMAX_TASK_NAME_LEN - 1 ] = '\0';
 905:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 906:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* This is used as an array index so must ensure it's not too large.  First
 907:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	remove the privilege bit if one is present. */
 908:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	if( uxPriority >= ( UBaseType_t ) configMAX_PRIORITIES )
 909:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 910:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		uxPriority = ( UBaseType_t ) configMAX_PRIORITIES - ( UBaseType_t ) 1U;
 911:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 912:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	else
 913:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 914:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		mtCOVERAGE_TEST_MARKER();
 915:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 916:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 917:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	pxNewTCB->uxPriority = uxPriority;
 918:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#if ( configUSE_MUTEXES == 1 )
 919:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 920:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxNewTCB->uxBasePriority = uxPriority;
 921:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxNewTCB->uxMutexesHeld = 0;
 922:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 923:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#endif /* configUSE_MUTEXES */
 924:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 925:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	vListInitialiseItem( &( pxNewTCB->xStateListItem ) );
 926:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	vListInitialiseItem( &( pxNewTCB->xEventListItem ) );
 927:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 928:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* Set the pxNewTCB as a link back from the ListItem_t.  This is so we can get
 929:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	back to	the containing TCB from a generic item in a list. */
 930:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	listSET_LIST_ITEM_OWNER( &( pxNewTCB->xStateListItem ), pxNewTCB );
 931:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 932:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* Event lists are always in priority order. */
 933:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	listSET_LIST_ITEM_VALUE( &( pxNewTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( Ti
 934:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	listSET_LIST_ITEM_OWNER( &( pxNewTCB->xEventListItem ), pxNewTCB );
 935:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 936:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#if ( portCRITICAL_NESTING_IN_TCB == 1 )
 937:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 938:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxNewTCB->uxCriticalNesting = ( UBaseType_t ) 0U;
 939:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 940:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#endif /* portCRITICAL_NESTING_IN_TCB */
 941:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 942:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#if ( configUSE_APPLICATION_TASK_TAG == 1 )
 943:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 944:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxNewTCB->pxTaskTag = NULL;
ARM GAS  /tmp/ccRhC8mT.s 			page 18


 945:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 946:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#endif /* configUSE_APPLICATION_TASK_TAG */
 947:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 948:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#if ( configGENERATE_RUN_TIME_STATS == 1 )
 949:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 950:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxNewTCB->ulRunTimeCounter = 0UL;
 951:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 952:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#endif /* configGENERATE_RUN_TIME_STATS */
 953:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 954:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#if ( portUSING_MPU_WRAPPERS == 1 )
 955:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 956:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		vPortStoreTaskMPUSettings( &( pxNewTCB->xMPUSettings ), xRegions, pxNewTCB->pxStack, ulStackDepth
 957:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 958:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#else
 959:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 960:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Avoid compiler warning about unreferenced parameter. */
 961:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		( void ) xRegions;
 962:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 963:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#endif
 964:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 965:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#if( configNUM_THREAD_LOCAL_STORAGE_POINTERS != 0 )
 966:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 967:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		for( x = 0; x < ( UBaseType_t ) configNUM_THREAD_LOCAL_STORAGE_POINTERS; x++ )
 968:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 969:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxNewTCB->pvThreadLocalStoragePointers[ x ] = NULL;
 970:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 971:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 972:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#endif
 973:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 974:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#if ( configUSE_TASK_NOTIFICATIONS == 1 )
 975:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 976:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxNewTCB->ulNotifiedValue = 0;
 977:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxNewTCB->ucNotifyState = taskNOT_WAITING_NOTIFICATION;
 978:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 979:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#endif
 980:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 981:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#if ( configUSE_NEWLIB_REENTRANT == 1 )
 982:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 983:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Initialise this task's Newlib reent structure. */
 984:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		_REENT_INIT_PTR( ( &( pxNewTCB->xNewLib_reent ) ) );
 985:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 986:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#endif
 987:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 988:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#if( INCLUDE_xTaskAbortDelay == 1 )
 989:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 990:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxNewTCB->ucDelayAborted = pdFALSE;
 991:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 992:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#endif
 993:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 994:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* Initialize the TCB stack to look as if the task was already running,
 995:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	but had been interrupted by the scheduler.  The return address is set
 996:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	to the start of the task function. Once the stack has been initialised
 997:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	the top of stack variable is updated. */
 998:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#if( portUSING_MPU_WRAPPERS == 1 )
 999:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
1000:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxNewTCB->pxTopOfStack = pxPortInitialiseStack( pxTopOfStack, pxTaskCode, pvParameters, xRunPrivi
1001:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
ARM GAS  /tmp/ccRhC8mT.s 			page 19


1002:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#else /* portUSING_MPU_WRAPPERS */
1003:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
1004:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxNewTCB->pxTopOfStack = pxPortInitialiseStack( pxTopOfStack, pxTaskCode, pvParameters );
1005:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
1006:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#endif /* portUSING_MPU_WRAPPERS */
1007:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1008:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	if( ( void * ) pxCreatedTask != NULL )
1009:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
1010:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Pass the handle out in an anonymous way.  The handle can be used to
1011:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		change the created task's priority, delete the created task, etc.*/
1012:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		*pxCreatedTask = ( TaskHandle_t ) pxNewTCB;
1013:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
1014:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	else
1015:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
1016:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		mtCOVERAGE_TEST_MARKER();
1017:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
1018:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
1019:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
1020:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1021:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** static void prvAddNewTaskToReadyList( TCB_t *pxNewTCB )
1022:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** {
1023:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* Ensure interrupts don't access the task lists while the lists are being
1024:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	updated. */
1025:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	taskENTER_CRITICAL();
1026:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
1027:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		uxCurrentNumberOfTasks++;
1028:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( pxCurrentTCB == NULL )
1029:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
1030:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* There are no other tasks, or all the other tasks are in
1031:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			the suspended state - make this the current task. */
1032:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxCurrentTCB = pxNewTCB;
1033:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1034:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( uxCurrentNumberOfTasks == ( UBaseType_t ) 1 )
1035:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
1036:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* This is the first task to be created so do the preliminary
1037:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				initialisation required.  We will not recover if this call
1038:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				fails, but we will report the failure. */
1039:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				prvInitialiseTaskLists();
1040:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
1041:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
1042:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
1043:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
1044:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
1045:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
1046:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
1047:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
1048:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* If the scheduler is not already running, make this task the
1049:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			current task if it is the highest priority task to be created
1050:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			so far. */
1051:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( xSchedulerRunning == pdFALSE )
1052:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
1053:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				if( pxCurrentTCB->uxPriority <= pxNewTCB->uxPriority )
1054:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
1055:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					pxCurrentTCB = pxNewTCB;
1056:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
1057:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				else
1058:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
ARM GAS  /tmp/ccRhC8mT.s 			page 20


1059:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					mtCOVERAGE_TEST_MARKER();
1060:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
1061:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
1062:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
1063:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
1064:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
1065:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
1066:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
1067:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1068:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		uxTaskNumber++;
1069:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1070:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#if ( configUSE_TRACE_FACILITY == 1 )
1071:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
1072:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Add a counter into the TCB for tracing only. */
1073:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxNewTCB->uxTCBNumber = uxTaskNumber;
1074:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
1075:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#endif /* configUSE_TRACE_FACILITY */
1076:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		traceTASK_CREATE( pxNewTCB );
1077:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1078:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		prvAddTaskToReadyList( pxNewTCB );
1079:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1080:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		portSETUP_TCB( pxNewTCB );
1081:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
1082:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	taskEXIT_CRITICAL();
1083:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1084:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	if( xSchedulerRunning != pdFALSE )
1085:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
1086:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* If the created task is of a higher priority than the current task
1087:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		then it should run now. */
1088:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( pxCurrentTCB->uxPriority < pxNewTCB->uxPriority )
1089:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
1090:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			taskYIELD_IF_USING_PREEMPTION();
1091:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
1092:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
1093:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
1094:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
1095:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
1096:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
1097:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	else
1098:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
1099:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		mtCOVERAGE_TEST_MARKER();
1100:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
1101:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
1102:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
1103:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1104:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( INCLUDE_vTaskDelete == 1 )
1105:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1106:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	void vTaskDelete( TaskHandle_t xTaskToDelete )
1107:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
1108:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t *pxTCB;
1109:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1110:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		taskENTER_CRITICAL();
1111:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
1112:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* If null is passed in here then it is the calling task that is
1113:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			being deleted. */
1114:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxTCB = prvGetTCBFromHandle( xTaskToDelete );
1115:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
ARM GAS  /tmp/ccRhC8mT.s 			page 21


1116:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Remove task from the ready list. */
1117:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( uxListRemove( &( pxTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
1118:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
1119:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				taskRESET_READY_PRIORITY( pxTCB->uxPriority );
1120:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
1121:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
1122:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
1123:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
1124:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
1125:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1126:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Is the task waiting on an event also? */
1127:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( listLIST_ITEM_CONTAINER( &( pxTCB->xEventListItem ) ) != NULL )
1128:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
1129:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				( void ) uxListRemove( &( pxTCB->xEventListItem ) );
1130:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
1131:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
1132:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
1133:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
1134:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
1135:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1136:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Increment the uxTaskNumber also so kernel aware debuggers can
1137:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			detect that the task lists need re-generating.  This is done before
1138:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			portPRE_TASK_DELETE_HOOK() as in the Windows port that macro will
1139:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			not return. */
1140:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			uxTaskNumber++;
1141:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1142:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( pxTCB == pxCurrentTCB )
1143:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
1144:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* A task is deleting itself.  This cannot complete within the
1145:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				task itself, as a context switch to another task is required.
1146:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				Place the task in the termination list.  The idle task will
1147:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				check the termination list and free up any memory allocated by
1148:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				the scheduler for the TCB and stack of the deleted task. */
1149:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				vListInsertEnd( &xTasksWaitingTermination, &( pxTCB->xStateListItem ) );
1150:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1151:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* Increment the ucTasksDeleted variable so the idle task knows
1152:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				there is a task that has been deleted and that it should therefore
1153:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				check the xTasksWaitingTermination list. */
1154:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				++uxDeletedTasksWaitingCleanUp;
1155:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1156:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* The pre-delete hook is primarily for the Windows simulator,
1157:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				in which Windows specific clean up operations are performed,
1158:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				after which it is not possible to yield away from this task -
1159:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				hence xYieldPending is used to latch that a context switch is
1160:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				required. */
1161:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				portPRE_TASK_DELETE_HOOK( pxTCB, &xYieldPending );
1162:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
1163:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
1164:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
1165:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				--uxCurrentNumberOfTasks;
1166:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				prvDeleteTCB( pxTCB );
1167:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1168:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* Reset the next expected unblock time in case it referred to
1169:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				the task that has just been deleted. */
1170:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				prvResetNextTaskUnblockTime();
1171:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
1172:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
ARM GAS  /tmp/ccRhC8mT.s 			page 22


1173:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			traceTASK_DELETE( pxTCB );
1174:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
1175:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		taskEXIT_CRITICAL();
1176:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1177:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Force a reschedule if it is the currently running task that has just
1178:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		been deleted. */
1179:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( xSchedulerRunning != pdFALSE )
1180:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
1181:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( pxTCB == pxCurrentTCB )
1182:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
1183:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				configASSERT( uxSchedulerSuspended == 0 );
1184:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				portYIELD_WITHIN_API();
1185:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
1186:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
1187:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
1188:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
1189:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
1190:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
1191:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
1192:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1193:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* INCLUDE_vTaskDelete */
1194:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
1195:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1196:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( INCLUDE_vTaskDelayUntil == 1 )
1197:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1198:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	void vTaskDelayUntil( TickType_t * const pxPreviousWakeTime, const TickType_t xTimeIncrement )
1199:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
1200:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TickType_t xTimeToWake;
1201:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xAlreadyYielded, xShouldDelay = pdFALSE;
1202:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1203:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		configASSERT( pxPreviousWakeTime );
1204:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		configASSERT( ( xTimeIncrement > 0U ) );
1205:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		configASSERT( uxSchedulerSuspended == 0 );
1206:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1207:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		vTaskSuspendAll();
1208:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
1209:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Minor optimisation.  The tick count cannot change in this
1210:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			block. */
1211:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			const TickType_t xConstTickCount = xTickCount;
1212:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1213:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Generate the tick time at which the task wants to wake. */
1214:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			xTimeToWake = *pxPreviousWakeTime + xTimeIncrement;
1215:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1216:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( xConstTickCount < *pxPreviousWakeTime )
1217:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
1218:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* The tick count has overflowed since this function was
1219:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				lasted called.  In this case the only time we should ever
1220:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				actually delay is if the wake time has also	overflowed,
1221:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				and the wake time is greater than the tick time.  When this
1222:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				is the case it is as if neither time had overflowed. */
1223:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				if( ( xTimeToWake < *pxPreviousWakeTime ) && ( xTimeToWake > xConstTickCount ) )
1224:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
1225:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					xShouldDelay = pdTRUE;
1226:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
1227:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				else
1228:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
1229:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					mtCOVERAGE_TEST_MARKER();
ARM GAS  /tmp/ccRhC8mT.s 			page 23


1230:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
1231:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
1232:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
1233:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
1234:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* The tick time has not overflowed.  In this case we will
1235:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				delay if either the wake time has overflowed, and/or the
1236:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				tick time is less than the wake time. */
1237:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				if( ( xTimeToWake < *pxPreviousWakeTime ) || ( xTimeToWake > xConstTickCount ) )
1238:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
1239:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					xShouldDelay = pdTRUE;
1240:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
1241:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				else
1242:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
1243:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					mtCOVERAGE_TEST_MARKER();
1244:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
1245:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
1246:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1247:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Update the wake time ready for the next call. */
1248:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			*pxPreviousWakeTime = xTimeToWake;
1249:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1250:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( xShouldDelay != pdFALSE )
1251:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
1252:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				traceTASK_DELAY_UNTIL( xTimeToWake );
1253:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1254:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* prvAddCurrentTaskToDelayedList() needs the block time, not
1255:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				the time to wake, so subtract the current tick count. */
1256:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				prvAddCurrentTaskToDelayedList( xTimeToWake - xConstTickCount, pdFALSE );
1257:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
1258:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
1259:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
1260:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
1261:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
1262:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
1263:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		xAlreadyYielded = xTaskResumeAll();
1264:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1265:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Force a reschedule if xTaskResumeAll has not already done so, we may
1266:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		have put ourselves to sleep. */
1267:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( xAlreadyYielded == pdFALSE )
1268:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
1269:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			portYIELD_WITHIN_API();
1270:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
1271:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
1272:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
1273:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
1274:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
1275:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
1276:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1277:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* INCLUDE_vTaskDelayUntil */
1278:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
1279:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1280:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( INCLUDE_vTaskDelay == 1 )
1281:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1282:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	void vTaskDelay( const TickType_t xTicksToDelay )
1283:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
1284:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xAlreadyYielded = pdFALSE;
1285:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1286:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* A delay time of zero just forces a reschedule. */
ARM GAS  /tmp/ccRhC8mT.s 			page 24


1287:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( xTicksToDelay > ( TickType_t ) 0U )
1288:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
1289:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			configASSERT( uxSchedulerSuspended == 0 );
1290:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			vTaskSuspendAll();
1291:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
1292:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				traceTASK_DELAY();
1293:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1294:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* A task that is removed from the event list while the
1295:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				scheduler is suspended will not get placed in the ready
1296:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				list or removed from the blocked list until the scheduler
1297:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				is resumed.
1298:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1299:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				This task cannot be in an event list as it is the currently
1300:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				executing task. */
1301:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				prvAddCurrentTaskToDelayedList( xTicksToDelay, pdFALSE );
1302:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
1303:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			xAlreadyYielded = xTaskResumeAll();
1304:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
1305:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
1306:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
1307:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
1308:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
1309:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1310:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Force a reschedule if xTaskResumeAll has not already done so, we may
1311:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		have put ourselves to sleep. */
1312:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( xAlreadyYielded == pdFALSE )
1313:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
1314:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			portYIELD_WITHIN_API();
1315:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
1316:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
1317:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
1318:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
1319:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
1320:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
1321:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1322:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* INCLUDE_vTaskDelay */
1323:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
1324:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1325:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if( ( INCLUDE_eTaskGetState == 1 ) || ( configUSE_TRACE_FACILITY == 1 ) )
1326:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1327:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	eTaskState eTaskGetState( TaskHandle_t xTask )
1328:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
1329:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	eTaskState eReturn;
1330:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	List_t *pxStateList;
1331:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	const TCB_t * const pxTCB = ( TCB_t * ) xTask;
1332:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1333:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		configASSERT( pxTCB );
1334:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1335:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( pxTCB == pxCurrentTCB )
1336:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
1337:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* The task calling this function is querying its own state. */
1338:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			eReturn = eRunning;
1339:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
1340:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
1341:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
1342:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			taskENTER_CRITICAL();
1343:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
ARM GAS  /tmp/ccRhC8mT.s 			page 25


1344:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				pxStateList = ( List_t * ) listLIST_ITEM_CONTAINER( &( pxTCB->xStateListItem ) );
1345:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
1346:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			taskEXIT_CRITICAL();
1347:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1348:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( ( pxStateList == pxDelayedTaskList ) || ( pxStateList == pxOverflowDelayedTaskList ) )
1349:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
1350:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* The task being queried is referenced from one of the Blocked
1351:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				lists. */
1352:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				eReturn = eBlocked;
1353:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
1354:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1355:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			#if ( INCLUDE_vTaskSuspend == 1 )
1356:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				else if( pxStateList == &xSuspendedTaskList )
1357:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
1358:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* The task being queried is referenced from the suspended
1359:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					list.  Is it genuinely suspended or is it block
1360:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					indefinitely? */
1361:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					if( listLIST_ITEM_CONTAINER( &( pxTCB->xEventListItem ) ) == NULL )
1362:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
1363:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						eReturn = eSuspended;
1364:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
1365:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					else
1366:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
1367:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						eReturn = eBlocked;
1368:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
1369:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
1370:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			#endif
1371:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1372:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			#if ( INCLUDE_vTaskDelete == 1 )
1373:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				else if( ( pxStateList == &xTasksWaitingTermination ) || ( pxStateList == NULL ) )
1374:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
1375:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* The task being queried is referenced from the deleted
1376:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					tasks list, or it is not referenced from any lists at
1377:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					all. */
1378:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					eReturn = eDeleted;
1379:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
1380:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			#endif
1381:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1382:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else /*lint !e525 Negative indentation is intended to make use of pre-processor clearer. */
1383:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
1384:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* If the task is not in any other state, it must be in the
1385:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				Ready (including pending ready) state. */
1386:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				eReturn = eReady;
1387:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
1388:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
1389:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1390:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		return eReturn;
1391:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	} /*lint !e818 xTask cannot be a pointer to const because it is a typedef. */
1392:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1393:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* INCLUDE_eTaskGetState */
1394:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
1395:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1396:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( INCLUDE_uxTaskPriorityGet == 1 )
1397:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1398:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	UBaseType_t uxTaskPriorityGet( TaskHandle_t xTask )
1399:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
1400:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t *pxTCB;
ARM GAS  /tmp/ccRhC8mT.s 			page 26


1401:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	UBaseType_t uxReturn;
1402:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1403:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		taskENTER_CRITICAL();
1404:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
1405:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* If null is passed in here then it is the priority of the that
1406:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			called uxTaskPriorityGet() that is being queried. */
1407:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxTCB = prvGetTCBFromHandle( xTask );
1408:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			uxReturn = pxTCB->uxPriority;
1409:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
1410:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		taskEXIT_CRITICAL();
1411:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1412:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		return uxReturn;
1413:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
1414:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1415:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* INCLUDE_uxTaskPriorityGet */
1416:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
1417:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1418:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( INCLUDE_uxTaskPriorityGet == 1 )
1419:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1420:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	UBaseType_t uxTaskPriorityGetFromISR( TaskHandle_t xTask )
1421:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
1422:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t *pxTCB;
1423:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	UBaseType_t uxReturn, uxSavedInterruptState;
1424:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1425:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* RTOS ports that support interrupt nesting have the concept of a
1426:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		maximum	system call (or maximum API call) interrupt priority.
1427:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		Interrupts that are	above the maximum system call priority are keep
1428:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		permanently enabled, even when the RTOS kernel is in a critical section,
1429:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		but cannot make any calls to FreeRTOS API functions.  If configASSERT()
1430:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		is defined in FreeRTOSConfig.h then
1431:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		portASSERT_IF_INTERRUPT_PRIORITY_INVALID() will result in an assertion
1432:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		failure if a FreeRTOS API function is called from an interrupt that has
1433:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		been assigned a priority above the configured maximum system call
1434:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		priority.  Only FreeRTOS functions that end in FromISR can be called
1435:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		from interrupts	that have been assigned a priority at or (logically)
1436:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		below the maximum system call interrupt priority.  FreeRTOS maintains a
1437:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		separate interrupt safe API to ensure interrupt entry is as fast and as
1438:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		simple as possible.  More information (albeit Cortex-M specific) is
1439:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		provided on the following link:
1440:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		http://www.freertos.org/RTOS-Cortex-M3-M4.html */
1441:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
1442:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1443:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		uxSavedInterruptState = portSET_INTERRUPT_MASK_FROM_ISR();
1444:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
1445:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* If null is passed in here then it is the priority of the calling
1446:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			task that is being queried. */
1447:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxTCB = prvGetTCBFromHandle( xTask );
1448:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			uxReturn = pxTCB->uxPriority;
1449:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
1450:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		portCLEAR_INTERRUPT_MASK_FROM_ISR( uxSavedInterruptState );
1451:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1452:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		return uxReturn;
1453:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
1454:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1455:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* INCLUDE_uxTaskPriorityGet */
1456:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
1457:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
ARM GAS  /tmp/ccRhC8mT.s 			page 27


1458:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( INCLUDE_vTaskPrioritySet == 1 )
1459:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1460:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	void vTaskPrioritySet( TaskHandle_t xTask, UBaseType_t uxNewPriority )
1461:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
1462:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t *pxTCB;
1463:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	UBaseType_t uxCurrentBasePriority, uxPriorityUsedOnEntry;
1464:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xYieldRequired = pdFALSE;
1465:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1466:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		configASSERT( ( uxNewPriority < configMAX_PRIORITIES ) );
1467:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1468:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Ensure the new priority is valid. */
1469:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( uxNewPriority >= ( UBaseType_t ) configMAX_PRIORITIES )
1470:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
1471:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			uxNewPriority = ( UBaseType_t ) configMAX_PRIORITIES - ( UBaseType_t ) 1U;
1472:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
1473:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
1474:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
1475:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
1476:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
1477:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1478:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		taskENTER_CRITICAL();
1479:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
1480:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* If null is passed in here then it is the priority of the calling
1481:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			task that is being changed. */
1482:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxTCB = prvGetTCBFromHandle( xTask );
1483:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1484:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			traceTASK_PRIORITY_SET( pxTCB, uxNewPriority );
1485:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1486:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			#if ( configUSE_MUTEXES == 1 )
1487:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
1488:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				uxCurrentBasePriority = pxTCB->uxBasePriority;
1489:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
1490:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			#else
1491:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
1492:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				uxCurrentBasePriority = pxTCB->uxPriority;
1493:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
1494:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			#endif
1495:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1496:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( uxCurrentBasePriority != uxNewPriority )
1497:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
1498:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* The priority change may have readied a task of higher
1499:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				priority than the calling task. */
1500:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				if( uxNewPriority > uxCurrentBasePriority )
1501:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
1502:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					if( pxTCB != pxCurrentTCB )
1503:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
1504:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						/* The priority of a task other than the currently
1505:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						running task is being raised.  Is the priority being
1506:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						raised above that of the running task? */
1507:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						if( uxNewPriority >= pxCurrentTCB->uxPriority )
1508:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						{
1509:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							xYieldRequired = pdTRUE;
1510:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						}
1511:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						else
1512:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						{
1513:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							mtCOVERAGE_TEST_MARKER();
1514:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						}
ARM GAS  /tmp/ccRhC8mT.s 			page 28


1515:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
1516:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					else
1517:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
1518:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						/* The priority of the running task is being raised,
1519:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						but the running task must already be the highest
1520:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						priority task able to run so no yield is required. */
1521:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
1522:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
1523:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				else if( pxTCB == pxCurrentTCB )
1524:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
1525:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* Setting the priority of the running task down means
1526:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					there may now be another task of higher priority that
1527:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					is ready to execute. */
1528:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					xYieldRequired = pdTRUE;
1529:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
1530:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				else
1531:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
1532:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* Setting the priority of any other task down does not
1533:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					require a yield as the running task must be above the
1534:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					new priority of the task being modified. */
1535:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
1536:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1537:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* Remember the ready list the task might be referenced from
1538:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				before its uxPriority member is changed so the
1539:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				taskRESET_READY_PRIORITY() macro can function correctly. */
1540:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				uxPriorityUsedOnEntry = pxTCB->uxPriority;
1541:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1542:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				#if ( configUSE_MUTEXES == 1 )
1543:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
1544:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* Only change the priority being used if the task is not
1545:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					currently using an inherited priority. */
1546:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					if( pxTCB->uxBasePriority == pxTCB->uxPriority )
1547:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
1548:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						pxTCB->uxPriority = uxNewPriority;
1549:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
1550:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					else
1551:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
1552:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						mtCOVERAGE_TEST_MARKER();
1553:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
1554:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1555:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* The base priority gets set whatever. */
1556:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					pxTCB->uxBasePriority = uxNewPriority;
1557:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
1558:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				#else
1559:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
1560:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					pxTCB->uxPriority = uxNewPriority;
1561:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
1562:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				#endif
1563:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1564:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* Only reset the event list item value if the value is not
1565:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				being used for anything else. */
1566:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				if( ( listGET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_VALUE_IN_USE 
1567:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
1568:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					listSET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ), ( ( TickType_t ) configMAX_PRIORITIES - (
1569:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
1570:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				else
1571:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
ARM GAS  /tmp/ccRhC8mT.s 			page 29


1572:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					mtCOVERAGE_TEST_MARKER();
1573:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
1574:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1575:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* If the task is in the blocked or suspended list we need do
1576:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				nothing more than change its priority variable. However, if
1577:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				the task is in a ready list it needs to be removed and placed
1578:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				in the list appropriate to its new priority. */
1579:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ uxPriorityUsedOnEntry ] ), &( pxTCB->xStateL
1580:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
1581:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* The task is currently in its ready list - remove before
1582:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					adding it to it's new ready list.  As we are in a critical
1583:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					section we can do this even if the scheduler is suspended. */
1584:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					if( uxListRemove( &( pxTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
1585:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
1586:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						/* It is known that the task is in its ready list so
1587:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						there is no need to check again and the port level
1588:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						reset macro can be called directly. */
1589:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						portRESET_READY_PRIORITY( uxPriorityUsedOnEntry, uxTopReadyPriority );
1590:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
1591:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					else
1592:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
1593:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						mtCOVERAGE_TEST_MARKER();
1594:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
1595:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					prvAddTaskToReadyList( pxTCB );
1596:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
1597:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				else
1598:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
1599:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					mtCOVERAGE_TEST_MARKER();
1600:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
1601:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1602:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				if( xYieldRequired != pdFALSE )
1603:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
1604:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					taskYIELD_IF_USING_PREEMPTION();
1605:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
1606:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				else
1607:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
1608:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					mtCOVERAGE_TEST_MARKER();
1609:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
1610:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1611:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* Remove compiler warning about unused variables when the port
1612:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				optimised task selection is not being used. */
1613:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				( void ) uxPriorityUsedOnEntry;
1614:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
1615:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
1616:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		taskEXIT_CRITICAL();
1617:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
1618:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1619:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* INCLUDE_vTaskPrioritySet */
1620:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
1621:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1622:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( INCLUDE_vTaskSuspend == 1 )
1623:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1624:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	void vTaskSuspend( TaskHandle_t xTaskToSuspend )
1625:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
1626:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t *pxTCB;
1627:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1628:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		taskENTER_CRITICAL();
ARM GAS  /tmp/ccRhC8mT.s 			page 30


1629:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
1630:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* If null is passed in here then it is the running task that is
1631:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			being suspended. */
1632:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxTCB = prvGetTCBFromHandle( xTaskToSuspend );
1633:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1634:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			traceTASK_SUSPEND( pxTCB );
1635:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1636:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Remove task from the ready/delayed list and place in the
1637:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			suspended list. */
1638:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( uxListRemove( &( pxTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
1639:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
1640:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				taskRESET_READY_PRIORITY( pxTCB->uxPriority );
1641:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
1642:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
1643:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
1644:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
1645:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
1646:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1647:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Is the task waiting on an event also? */
1648:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( listLIST_ITEM_CONTAINER( &( pxTCB->xEventListItem ) ) != NULL )
1649:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
1650:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				( void ) uxListRemove( &( pxTCB->xEventListItem ) );
1651:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
1652:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
1653:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
1654:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
1655:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
1656:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1657:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			vListInsertEnd( &xSuspendedTaskList, &( pxTCB->xStateListItem ) );
1658:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1659:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			#if( configUSE_TASK_NOTIFICATIONS == 1 )
1660:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
1661:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				if( pxTCB->ucNotifyState == taskWAITING_NOTIFICATION )
1662:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
1663:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* The task was blocked to wait for a notification, but is
1664:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					now suspended, so no notification was received. */
1665:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					pxTCB->ucNotifyState = taskNOT_WAITING_NOTIFICATION;
1666:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
1667:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
1668:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			#endif
1669:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
1670:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		taskEXIT_CRITICAL();
1671:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1672:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( xSchedulerRunning != pdFALSE )
1673:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
1674:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Reset the next expected unblock time in case it referred to the
1675:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			task that is now in the Suspended state. */
1676:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			taskENTER_CRITICAL();
1677:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
1678:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				prvResetNextTaskUnblockTime();
1679:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
1680:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			taskEXIT_CRITICAL();
1681:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
1682:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
1683:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
1684:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
1685:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
ARM GAS  /tmp/ccRhC8mT.s 			page 31


1686:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1687:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( pxTCB == pxCurrentTCB )
1688:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
1689:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( xSchedulerRunning != pdFALSE )
1690:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
1691:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* The current task has just been suspended. */
1692:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				configASSERT( uxSchedulerSuspended == 0 );
1693:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				portYIELD_WITHIN_API();
1694:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
1695:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
1696:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
1697:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* The scheduler is not running, but the task that was pointed
1698:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				to by pxCurrentTCB has just been suspended and pxCurrentTCB
1699:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				must be adjusted to point to a different task. */
1700:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				if( listCURRENT_LIST_LENGTH( &xSuspendedTaskList ) == uxCurrentNumberOfTasks )
1701:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
1702:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* No other tasks are ready, so set pxCurrentTCB back to
1703:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					NULL so when the next task is created pxCurrentTCB will
1704:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					be set to point to it no matter what its relative priority
1705:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					is. */
1706:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					pxCurrentTCB = NULL;
1707:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
1708:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				else
1709:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
1710:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					vTaskSwitchContext();
1711:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
1712:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
1713:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
1714:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
1715:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
1716:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
1717:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
1718:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
1719:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1720:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* INCLUDE_vTaskSuspend */
1721:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
1722:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1723:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( INCLUDE_vTaskSuspend == 1 )
1724:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1725:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	static BaseType_t prvTaskIsTaskSuspended( const TaskHandle_t xTask )
1726:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
  27              		.loc 1 1726 2 view -0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 0
  30              		@ frame_needed = 0, uses_anonymous_args = 0
  31              		@ link register save eliminated.
1727:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xReturn = pdFALSE;
  32              		.loc 1 1727 2 view .LVU1
1728:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	const TCB_t * const pxTCB = ( TCB_t * ) xTask;
  33              		.loc 1 1728 2 view .LVU2
1729:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1730:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Accesses xPendingReadyList so must be called from a critical
1731:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		section. */
1732:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1733:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* It does not make sense to check if the calling task is suspended. */
1734:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		configASSERT( xTask );
  34              		.loc 1 1734 3 view .LVU3
ARM GAS  /tmp/ccRhC8mT.s 			page 32


  35 0000 28B1     		cbz	r0, .L8
  36              		.loc 1 1734 24 discriminator 2 view .LVU4
1735:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1736:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Is the task being resumed actually in the suspended list? */
1737:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( listIS_CONTAINED_WITHIN( &xSuspendedTaskList, &( pxTCB->xStateListItem ) ) != pdFALSE )
  37              		.loc 1 1737 3 view .LVU5
  38              		.loc 1 1737 7 is_stmt 0 view .LVU6
  39 0002 4169     		ldr	r1, [r0, #20]
  40              		.loc 1 1737 82 view .LVU7
  41 0004 0C4A     		ldr	r2, .L10
  42 0006 9142     		cmp	r1, r2
  43 0008 0AD0     		beq	.L9
1727:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	const TCB_t * const pxTCB = ( TCB_t * ) xTask;
  44              		.loc 1 1727 13 view .LVU8
  45 000a 0020     		movs	r0, #0
  46              	.LVL1:
1727:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	const TCB_t * const pxTCB = ( TCB_t * ) xTask;
  47              		.loc 1 1727 13 view .LVU9
  48 000c 7047     		bx	lr
  49              	.LVL2:
  50              	.L8:
1734:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
  51              		.loc 1 1734 3 is_stmt 1 discriminator 1 view .LVU10
  52              	.LBB104:
  53              	.LBI104:
  54              		.file 2 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h"
   1:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** /*
   2:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h ****  * FreeRTOS Kernel V10.0.1
   3:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h ****  * Copyright (C) 2017 Amazon.com, Inc. or its affiliates.  All Rights Reserved.
   4:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h ****  *
   5:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h ****  * Permission is hereby granted, free of charge, to any person obtaining a copy of
   6:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h ****  * this software and associated documentation files (the "Software"), to deal in
   7:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h ****  * the Software without restriction, including without limitation the rights to
   8:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h ****  * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of
   9:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h ****  * the Software, and to permit persons to whom the Software is furnished to do so,
  10:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h ****  * subject to the following conditions:
  11:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h ****  *
  12:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h ****  * The above copyright notice and this permission notice shall be included in all
  13:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h ****  * copies or substantial portions of the Software.
  14:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h ****  *
  15:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h ****  * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  16:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h ****  * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
  17:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h ****  * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
  18:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h ****  * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
  19:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h ****  * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
  20:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h ****  * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
  21:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h ****  *
  22:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h ****  * http://www.FreeRTOS.org
  23:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h ****  * http://aws.amazon.com/freertos
  24:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h ****  *
  25:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h ****  * 1 tab == 4 spaces!
  26:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h ****  */
  27:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
  28:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
  29:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** #ifndef PORTMACRO_H
  30:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** #define PORTMACRO_H
  31:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
ARM GAS  /tmp/ccRhC8mT.s 			page 33


  32:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** #ifdef __cplusplus
  33:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** extern "C" {
  34:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** #endif
  35:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
  36:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** /*-----------------------------------------------------------
  37:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h ****  * Port specific definitions.
  38:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h ****  *
  39:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h ****  * The settings in this file configure FreeRTOS correctly for the
  40:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h ****  * given hardware and compiler.
  41:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h ****  *
  42:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h ****  * These settings should not be altered.
  43:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h ****  *-----------------------------------------------------------
  44:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h ****  */
  45:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
  46:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** /* Type definitions. */
  47:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** #define portCHAR		char
  48:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** #define portFLOAT		float
  49:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** #define portDOUBLE		double
  50:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** #define portLONG		long
  51:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** #define portSHORT		short
  52:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** #define portSTACK_TYPE	uint32_t
  53:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** #define portBASE_TYPE	long
  54:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
  55:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** typedef portSTACK_TYPE StackType_t;
  56:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** typedef long BaseType_t;
  57:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** typedef unsigned long UBaseType_t;
  58:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
  59:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** #if( configUSE_16_BIT_TICKS == 1 )
  60:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	typedef uint16_t TickType_t;
  61:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	#define portMAX_DELAY ( TickType_t ) 0xffff
  62:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** #else
  63:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	typedef uint32_t TickType_t;
  64:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	#define portMAX_DELAY ( TickType_t ) 0xffffffffUL
  65:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
  66:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	/* 32-bit tick type on a 32-bit architecture, so reads of the tick count do
  67:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	not need to be guarded with a critical section. */
  68:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	#define portTICK_TYPE_IS_ATOMIC 1
  69:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** #endif
  70:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** /*-----------------------------------------------------------*/
  71:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
  72:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** /* Architecture specifics. */
  73:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** #define portSTACK_GROWTH			( -1 )
  74:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** #define portTICK_PERIOD_MS			( ( TickType_t ) 1000 / configTICK_RATE_HZ )
  75:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** #define portBYTE_ALIGNMENT			8
  76:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** /*-----------------------------------------------------------*/
  77:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
  78:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** /* Scheduler utilities. */
  79:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** #define portYIELD() 															\
  80:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** {																				\
  81:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	/* Set a PendSV to request a context switch. */								\
  82:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	portNVIC_INT_CTRL_REG = portNVIC_PENDSVSET_BIT;								\
  83:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 																				\
  84:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	/* Barriers are normally not required but do ensure the code is completely	\
  85:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	within the specified behaviour for the architecture. */						\
  86:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	__asm volatile( "dsb" ::: "memory" );										\
  87:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	__asm volatile( "isb" );													\
  88:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** }
ARM GAS  /tmp/ccRhC8mT.s 			page 34


  89:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
  90:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** #define portNVIC_INT_CTRL_REG		( * ( ( volatile uint32_t * ) 0xe000ed04 ) )
  91:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** #define portNVIC_PENDSVSET_BIT		( 1UL << 28UL )
  92:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** #define portEND_SWITCHING_ISR( xSwitchRequired ) if( xSwitchRequired != pdFALSE ) portYIELD()
  93:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** #define portYIELD_FROM_ISR( x ) portEND_SWITCHING_ISR( x )
  94:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** /*-----------------------------------------------------------*/
  95:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
  96:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** /* Critical section management. */
  97:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** extern void vPortEnterCritical( void );
  98:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** extern void vPortExitCritical( void );
  99:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** #define portSET_INTERRUPT_MASK_FROM_ISR()		ulPortRaiseBASEPRI()
 100:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** #define portCLEAR_INTERRUPT_MASK_FROM_ISR(x)	vPortSetBASEPRI(x)
 101:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** #define portDISABLE_INTERRUPTS()				vPortRaiseBASEPRI()
 102:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** #define portENABLE_INTERRUPTS()					vPortSetBASEPRI(0)
 103:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** #define portENTER_CRITICAL()					vPortEnterCritical()
 104:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** #define portEXIT_CRITICAL()						vPortExitCritical()
 105:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
 106:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** /*-----------------------------------------------------------*/
 107:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
 108:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** /* Task function macros as described on the FreeRTOS.org WEB site.  These are
 109:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** not necessary for to use this port.  They are defined so the common demo files
 110:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** (which build with all the ports) will build. */
 111:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** #define portTASK_FUNCTION_PROTO( vFunction, pvParameters ) void vFunction( void *pvParameters )
 112:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** #define portTASK_FUNCTION( vFunction, pvParameters ) void vFunction( void *pvParameters )
 113:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** /*-----------------------------------------------------------*/
 114:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
 115:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** /* Tickless idle/low power functionality. */
 116:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** #ifndef portSUPPRESS_TICKS_AND_SLEEP
 117:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	extern void vPortSuppressTicksAndSleep( TickType_t xExpectedIdleTime );
 118:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	#define portSUPPRESS_TICKS_AND_SLEEP( xExpectedIdleTime ) vPortSuppressTicksAndSleep( xExpectedIdl
 119:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** #endif
 120:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** /*-----------------------------------------------------------*/
 121:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
 122:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** /* Architecture specific optimisations. */
 123:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** #ifndef configUSE_PORT_OPTIMISED_TASK_SELECTION
 124:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	#define configUSE_PORT_OPTIMISED_TASK_SELECTION 1
 125:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** #endif
 126:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
 127:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** #if configUSE_PORT_OPTIMISED_TASK_SELECTION == 1
 128:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
 129:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	/* Generic helper function. */
 130:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	__attribute__( ( always_inline ) ) static inline uint8_t ucPortCountLeadingZeros( uint32_t ulBitma
 131:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	{
 132:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	uint8_t ucReturn;
 133:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
 134:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 		__asm volatile ( "clz %0, %1" : "=r" ( ucReturn ) : "r" ( ulBitmap ) : "memory" );
 135:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 		return ucReturn;
 136:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	}
 137:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
 138:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	/* Check the configuration. */
 139:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	#if( configMAX_PRIORITIES > 32 )
 140:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 		#error configUSE_PORT_OPTIMISED_TASK_SELECTION can only be set to 1 when configMAX_PRIORITIES is 
 141:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	#endif
 142:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
 143:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	/* Store/clear the ready priorities in a bit map. */
 144:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	#define portRECORD_READY_PRIORITY( uxPriority, uxReadyPriorities ) ( uxReadyPriorities ) |= ( 1UL 
 145:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	#define portRESET_READY_PRIORITY( uxPriority, uxReadyPriorities ) ( uxReadyPriorities ) &= ~( 1UL 
ARM GAS  /tmp/ccRhC8mT.s 			page 35


 146:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
 147:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	/*-----------------------------------------------------------*/
 148:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
 149:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	#define portGET_HIGHEST_PRIORITY( uxTopPriority, uxReadyPriorities ) uxTopPriority = ( 31UL - ( ui
 150:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
 151:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** #endif /* configUSE_PORT_OPTIMISED_TASK_SELECTION */
 152:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
 153:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** /*-----------------------------------------------------------*/
 154:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
 155:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** #ifdef configASSERT
 156:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	void vPortValidateInterruptPriority( void );
 157:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	#define portASSERT_IF_INTERRUPT_PRIORITY_INVALID() 	vPortValidateInterruptPriority()
 158:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** #endif
 159:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
 160:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** /* portNOP() is not required by this port. */
 161:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** #define portNOP()
 162:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
 163:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** #define portINLINE	__inline
 164:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
 165:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** #ifndef portFORCE_INLINE
 166:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	#define portFORCE_INLINE inline __attribute__(( always_inline))
 167:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** #endif
 168:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
 169:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** portFORCE_INLINE static BaseType_t xPortIsInsideInterrupt( void )
 170:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** {
 171:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** uint32_t ulCurrentInterrupt;
 172:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** BaseType_t xReturn;
 173:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
 174:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	/* Obtain the number of the currently executing interrupt. */
 175:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	__asm volatile( "mrs %0, ipsr" : "=r"( ulCurrentInterrupt ) :: "memory" );
 176:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
 177:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	if( ulCurrentInterrupt == 0 )
 178:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	{
 179:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 		xReturn = pdFALSE;
 180:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	}
 181:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	else
 182:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	{
 183:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 		xReturn = pdTRUE;
 184:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	}
 185:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
 186:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	return xReturn;
 187:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** }
 188:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
 189:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** /*-----------------------------------------------------------*/
 190:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
 191:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** portFORCE_INLINE static void vPortRaiseBASEPRI( void )
  55              		.loc 2 191 30 view .LVU11
  56              	.LBB105:
 192:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** {
 193:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** uint32_t ulNewBASEPRI;
  57              		.loc 2 193 1 view .LVU12
 194:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	__asm volatile
  58              		.loc 2 195 2 view .LVU13
  59              		.syntax unified
  60              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h" 1
  61 000e 4FF05003 			mov r3, #80												
ARM GAS  /tmp/ccRhC8mT.s 			page 36


  62 0012 83F31188 		msr basepri, r3											
  63 0016 BFF36F8F 		isb														
  64 001a BFF34F8F 		dsb														
  65              	
  66              	@ 0 "" 2
  67              		.thumb
  68              		.syntax unified
  69              	.L3:
  70              	.LBE105:
  71              	.LBE104:
1734:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
  72              		.loc 1 1734 3 discriminator 3 view .LVU14
1734:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
  73              		.loc 1 1734 3 discriminator 3 view .LVU15
  74 001e FEE7     		b	.L3
  75              	.L9:
1738:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
1739:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Has the task already been resumed from within an ISR? */
1740:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( listIS_CONTAINED_WITHIN( &xPendingReadyList, &( pxTCB->xEventListItem ) ) == pdFALSE )
  76              		.loc 1 1740 4 view .LVU16
  77              		.loc 1 1740 8 is_stmt 0 view .LVU17
  78 0020 836A     		ldr	r3, [r0, #40]
  79              		.loc 1 1740 6 view .LVU18
  80 0022 064A     		ldr	r2, .L10+4
  81 0024 9342     		cmp	r3, r2
  82 0026 02D0     		beq	.L6
1741:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
1742:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* Is it in the suspended list because it is in the	Suspended
1743:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				state, or because is is blocked with no timeout? */
1744:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				if( listIS_CONTAINED_WITHIN( NULL, &( pxTCB->xEventListItem ) ) != pdFALSE ) /*lint !e961.  The
  83              		.loc 1 1744 5 is_stmt 1 view .LVU19
  84              		.loc 1 1744 69 is_stmt 0 view .LVU20
  85 0028 1BB1     		cbz	r3, .L7
1727:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	const TCB_t * const pxTCB = ( TCB_t * ) xTask;
  86              		.loc 1 1727 13 view .LVU21
  87 002a 0020     		movs	r0, #0
  88              	.LVL3:
1727:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	const TCB_t * const pxTCB = ( TCB_t * ) xTask;
  89              		.loc 1 1727 13 view .LVU22
  90 002c 7047     		bx	lr
  91              	.LVL4:
  92              	.L6:
1727:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	const TCB_t * const pxTCB = ( TCB_t * ) xTask;
  93              		.loc 1 1727 13 view .LVU23
  94 002e 0020     		movs	r0, #0
  95              	.LVL5:
1727:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	const TCB_t * const pxTCB = ( TCB_t * ) xTask;
  96              		.loc 1 1727 13 view .LVU24
  97 0030 7047     		bx	lr
  98              	.LVL6:
  99              	.L7:
1745:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
1746:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					xReturn = pdTRUE;
 100              		.loc 1 1746 14 view .LVU25
 101 0032 0120     		movs	r0, #1
 102              	.LVL7:
1747:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
ARM GAS  /tmp/ccRhC8mT.s 			page 37


1748:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				else
1749:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
1750:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					mtCOVERAGE_TEST_MARKER();
1751:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
1752:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
1753:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
1754:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
1755:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
1756:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
1757:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
1758:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
1759:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
1760:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
 103              		.loc 1 1760 28 is_stmt 1 view .LVU26
1761:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
1762:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1763:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		return xReturn;
 104              		.loc 1 1763 3 view .LVU27
1764:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	} /*lint !e818 xTask cannot be a pointer to const because it is a typedef. */
 105              		.loc 1 1764 2 is_stmt 0 view .LVU28
 106 0034 7047     		bx	lr
 107              	.L11:
 108 0036 00BF     		.align	2
 109              	.L10:
 110 0038 00000000 		.word	xSuspendedTaskList
 111 003c 00000000 		.word	xPendingReadyList
 112              		.cfi_endproc
 113              	.LFE15:
 115              		.section	.text.prvResetNextTaskUnblockTime,"ax",%progbits
 116              		.align	1
 117              		.syntax unified
 118              		.thumb
 119              		.thumb_func
 121              	prvResetNextTaskUnblockTime:
 122              	.LFB40:
1765:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1766:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* INCLUDE_vTaskSuspend */
1767:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
1768:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1769:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( INCLUDE_vTaskSuspend == 1 )
1770:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1771:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	void vTaskResume( TaskHandle_t xTaskToResume )
1772:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
1773:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t * const pxTCB = ( TCB_t * ) xTaskToResume;
1774:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1775:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* It does not make sense to resume the calling task. */
1776:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		configASSERT( xTaskToResume );
1777:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1778:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* The parameter cannot be NULL as it is impossible to resume the
1779:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		currently executing task. */
1780:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( ( pxTCB != NULL ) && ( pxTCB != pxCurrentTCB ) )
1781:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
1782:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			taskENTER_CRITICAL();
1783:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
1784:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				if( prvTaskIsTaskSuspended( pxTCB ) != pdFALSE )
1785:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
1786:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					traceTASK_RESUME( pxTCB );
ARM GAS  /tmp/ccRhC8mT.s 			page 38


1787:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1788:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* The ready list can be accessed even if the scheduler is
1789:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					suspended because this is inside a critical section. */
1790:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					( void ) uxListRemove(  &( pxTCB->xStateListItem ) );
1791:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					prvAddTaskToReadyList( pxTCB );
1792:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1793:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* A higher priority task may have just been resumed. */
1794:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					if( pxTCB->uxPriority >= pxCurrentTCB->uxPriority )
1795:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
1796:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						/* This yield may not cause the task just resumed to run,
1797:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						but will leave the lists in the correct state for the
1798:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						next yield. */
1799:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						taskYIELD_IF_USING_PREEMPTION();
1800:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
1801:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					else
1802:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
1803:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						mtCOVERAGE_TEST_MARKER();
1804:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
1805:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
1806:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				else
1807:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
1808:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					mtCOVERAGE_TEST_MARKER();
1809:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
1810:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
1811:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			taskEXIT_CRITICAL();
1812:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
1813:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
1814:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
1815:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
1816:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
1817:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
1818:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1819:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* INCLUDE_vTaskSuspend */
1820:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1821:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
1822:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1823:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( ( INCLUDE_xTaskResumeFromISR == 1 ) && ( INCLUDE_vTaskSuspend == 1 ) )
1824:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1825:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xTaskResumeFromISR( TaskHandle_t xTaskToResume )
1826:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
1827:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xYieldRequired = pdFALSE;
1828:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t * const pxTCB = ( TCB_t * ) xTaskToResume;
1829:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	UBaseType_t uxSavedInterruptStatus;
1830:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1831:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		configASSERT( xTaskToResume );
1832:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1833:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* RTOS ports that support interrupt nesting have the concept of a
1834:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		maximum	system call (or maximum API call) interrupt priority.
1835:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		Interrupts that are	above the maximum system call priority are keep
1836:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		permanently enabled, even when the RTOS kernel is in a critical section,
1837:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		but cannot make any calls to FreeRTOS API functions.  If configASSERT()
1838:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		is defined in FreeRTOSConfig.h then
1839:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		portASSERT_IF_INTERRUPT_PRIORITY_INVALID() will result in an assertion
1840:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		failure if a FreeRTOS API function is called from an interrupt that has
1841:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		been assigned a priority above the configured maximum system call
1842:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		priority.  Only FreeRTOS functions that end in FromISR can be called
1843:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		from interrupts	that have been assigned a priority at or (logically)
ARM GAS  /tmp/ccRhC8mT.s 			page 39


1844:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		below the maximum system call interrupt priority.  FreeRTOS maintains a
1845:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		separate interrupt safe API to ensure interrupt entry is as fast and as
1846:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		simple as possible.  More information (albeit Cortex-M specific) is
1847:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		provided on the following link:
1848:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		http://www.freertos.org/RTOS-Cortex-M3-M4.html */
1849:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
1850:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1851:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		uxSavedInterruptStatus = portSET_INTERRUPT_MASK_FROM_ISR();
1852:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
1853:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( prvTaskIsTaskSuspended( pxTCB ) != pdFALSE )
1854:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
1855:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				traceTASK_RESUME_FROM_ISR( pxTCB );
1856:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1857:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* Check the ready lists can be accessed. */
1858:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
1859:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
1860:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* Ready lists can be accessed so move the task from the
1861:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					suspended list to the ready list directly. */
1862:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					if( pxTCB->uxPriority >= pxCurrentTCB->uxPriority )
1863:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
1864:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						xYieldRequired = pdTRUE;
1865:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
1866:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					else
1867:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
1868:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						mtCOVERAGE_TEST_MARKER();
1869:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
1870:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1871:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
1872:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					prvAddTaskToReadyList( pxTCB );
1873:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
1874:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				else
1875:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
1876:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* The delayed or ready lists cannot be accessed so the task
1877:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					is held in the pending ready list until the scheduler is
1878:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					unsuspended. */
1879:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					vListInsertEnd( &( xPendingReadyList ), &( pxTCB->xEventListItem ) );
1880:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
1881:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
1882:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
1883:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
1884:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
1885:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
1886:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
1887:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		portCLEAR_INTERRUPT_MASK_FROM_ISR( uxSavedInterruptStatus );
1888:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1889:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		return xYieldRequired;
1890:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
1891:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1892:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* ( ( INCLUDE_xTaskResumeFromISR == 1 ) && ( INCLUDE_vTaskSuspend == 1 ) ) */
1893:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
1894:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1895:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** void vTaskStartScheduler( void )
1896:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** {
1897:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** BaseType_t xReturn;
1898:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1899:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* Add the idle task at the lowest priority. */
1900:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#if( configSUPPORT_STATIC_ALLOCATION == 1 )
ARM GAS  /tmp/ccRhC8mT.s 			page 40


1901:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
1902:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		StaticTask_t *pxIdleTaskTCBBuffer = NULL;
1903:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		StackType_t *pxIdleTaskStackBuffer = NULL;
1904:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		uint32_t ulIdleTaskStackSize;
1905:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1906:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* The Idle task is created using user provided RAM - obtain the
1907:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		address of the RAM then create the idle task. */
1908:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		vApplicationGetIdleTaskMemory( &pxIdleTaskTCBBuffer, &pxIdleTaskStackBuffer, &ulIdleTaskStackSize
1909:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		xIdleTaskHandle = xTaskCreateStatic(	prvIdleTask,
1910:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 												configIDLE_TASK_NAME,
1911:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 												ulIdleTaskStackSize,
1912:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 												( void * ) NULL, /*lint !e961.  The cast is not redundant for all compilers. */
1913:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 												( tskIDLE_PRIORITY | portPRIVILEGE_BIT ),
1914:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 												pxIdleTaskStackBuffer,
1915:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 												pxIdleTaskTCBBuffer ); /*lint !e961 MISRA exception, justified as it is not a redundant
1916:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1917:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( xIdleTaskHandle != NULL )
1918:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
1919:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			xReturn = pdPASS;
1920:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
1921:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
1922:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
1923:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			xReturn = pdFAIL;
1924:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
1925:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
1926:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#else
1927:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
1928:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* The Idle task is being created using dynamically allocated RAM. */
1929:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		xReturn = xTaskCreate(	prvIdleTask,
1930:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 								configIDLE_TASK_NAME,
1931:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 								configMINIMAL_STACK_SIZE,
1932:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 								( void * ) NULL,
1933:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 								( tskIDLE_PRIORITY | portPRIVILEGE_BIT ),
1934:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 								&xIdleTaskHandle ); /*lint !e961 MISRA exception, justified as it is not a redundant explic
1935:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
1936:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#endif /* configSUPPORT_STATIC_ALLOCATION */
1937:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1938:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#if ( configUSE_TIMERS == 1 )
1939:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
1940:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( xReturn == pdPASS )
1941:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
1942:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			xReturn = xTimerCreateTimerTask();
1943:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
1944:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
1945:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
1946:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
1947:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
1948:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
1949:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#endif /* configUSE_TIMERS */
1950:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1951:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	if( xReturn == pdPASS )
1952:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
1953:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* freertos_tasks_c_additions_init() should only be called if the user
1954:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		definable macro FREERTOS_TASKS_C_ADDITIONS_INIT() is defined, as that is
1955:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		the only macro called by the function. */
1956:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#ifdef FREERTOS_TASKS_C_ADDITIONS_INIT
1957:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
ARM GAS  /tmp/ccRhC8mT.s 			page 41


1958:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			freertos_tasks_c_additions_init();
1959:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
1960:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#endif
1961:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1962:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Interrupts are turned off here, to ensure a tick does not occur
1963:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		before or during the call to xPortStartScheduler().  The stacks of
1964:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		the created tasks contain a status word with interrupts switched on
1965:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		so interrupts will automatically get re-enabled when the first task
1966:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		starts to run. */
1967:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		portDISABLE_INTERRUPTS();
1968:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1969:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#if ( configUSE_NEWLIB_REENTRANT == 1 )
1970:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
1971:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Switch Newlib's _impure_ptr variable to point to the _reent
1972:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			structure specific to the task that will run first. */
1973:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			_impure_ptr = &( pxCurrentTCB->xNewLib_reent );
1974:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
1975:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#endif /* configUSE_NEWLIB_REENTRANT */
1976:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1977:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		xNextTaskUnblockTime = portMAX_DELAY;
1978:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		xSchedulerRunning = pdTRUE;
1979:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		xTickCount = ( TickType_t ) 0U;
1980:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1981:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* If configGENERATE_RUN_TIME_STATS is defined then the following
1982:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		macro must be defined to configure the timer/counter used to generate
1983:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		the run time counter time base.   NOTE:  If configGENERATE_RUN_TIME_STATS
1984:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		is set to 0 and the following line fails to build then ensure you do not
1985:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		have portCONFIGURE_TIMER_FOR_RUN_TIME_STATS() defined in your
1986:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		FreeRTOSConfig.h file. */
1987:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		portCONFIGURE_TIMER_FOR_RUN_TIME_STATS();
1988:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1989:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Setting up the timer tick is hardware specific and thus in the
1990:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		portable interface. */
1991:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( xPortStartScheduler() != pdFALSE )
1992:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
1993:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Should not reach here as if the scheduler is running the
1994:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			function will not return. */
1995:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
1996:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
1997:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
1998:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Should only reach here if a task calls xTaskEndScheduler(). */
1999:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
2000:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
2001:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	else
2002:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
2003:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* This line will only be reached if the kernel could not be started,
2004:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		because there was not enough FreeRTOS heap to create the idle task
2005:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		or the timer task. */
2006:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		configASSERT( xReturn != errCOULD_NOT_ALLOCATE_REQUIRED_MEMORY );
2007:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
2008:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2009:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* Prevent compiler warnings if INCLUDE_xTaskGetIdleTaskHandle is set to 0,
2010:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	meaning xIdleTaskHandle is not used anywhere else. */
2011:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	( void ) xIdleTaskHandle;
2012:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
2013:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
2014:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
ARM GAS  /tmp/ccRhC8mT.s 			page 42


2015:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** void vTaskEndScheduler( void )
2016:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** {
2017:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* Stop the scheduler interrupts and call the portable scheduler end
2018:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	routine so the original ISRs can be restored if necessary.  The port
2019:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	layer must ensure interrupts enable	bit is left in the correct state. */
2020:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	portDISABLE_INTERRUPTS();
2021:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	xSchedulerRunning = pdFALSE;
2022:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	vPortEndScheduler();
2023:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
2024:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*----------------------------------------------------------*/
2025:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2026:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** void vTaskSuspendAll( void )
2027:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** {
2028:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* A critical section is not required as the variable is of type
2029:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t.  Please read Richard Barry's reply in the following link to a
2030:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	post in the FreeRTOS support forum before reporting this as a bug! -
2031:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	http://goo.gl/wu4acr */
2032:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	++uxSchedulerSuspended;
2033:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
2034:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*----------------------------------------------------------*/
2035:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2036:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( configUSE_TICKLESS_IDLE != 0 )
2037:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2038:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	static TickType_t prvGetExpectedIdleTime( void )
2039:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
2040:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TickType_t xReturn;
2041:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	UBaseType_t uxHigherPriorityReadyTasks = pdFALSE;
2042:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2043:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* uxHigherPriorityReadyTasks takes care of the case where
2044:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		configUSE_PREEMPTION is 0, so there may be tasks above the idle priority
2045:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		task that are in the Ready state, even though the idle task is
2046:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		running. */
2047:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#if( configUSE_PORT_OPTIMISED_TASK_SELECTION == 0 )
2048:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
2049:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( uxTopReadyPriority > tskIDLE_PRIORITY )
2050:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
2051:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				uxHigherPriorityReadyTasks = pdTRUE;
2052:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
2053:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
2054:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#else
2055:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
2056:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			const UBaseType_t uxLeastSignificantBit = ( UBaseType_t ) 0x01;
2057:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2058:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* When port optimised task selection is used the uxTopReadyPriority
2059:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			variable is used as a bit map.  If bits other than the least
2060:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			significant bit are set then there are tasks that have a priority
2061:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			above the idle priority that are in the Ready state.  This takes
2062:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			care of the case where the co-operative scheduler is in use. */
2063:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( uxTopReadyPriority > uxLeastSignificantBit )
2064:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
2065:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				uxHigherPriorityReadyTasks = pdTRUE;
2066:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
2067:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
2068:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#endif
2069:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2070:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( pxCurrentTCB->uxPriority > tskIDLE_PRIORITY )
2071:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
ARM GAS  /tmp/ccRhC8mT.s 			page 43


2072:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			xReturn = 0;
2073:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
2074:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else if( listCURRENT_LIST_LENGTH( &( pxReadyTasksLists[ tskIDLE_PRIORITY ] ) ) > 1 )
2075:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
2076:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* There are other idle priority tasks in the ready state.  If
2077:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			time slicing is used then the very next tick interrupt must be
2078:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			processed. */
2079:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			xReturn = 0;
2080:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
2081:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else if( uxHigherPriorityReadyTasks != pdFALSE )
2082:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
2083:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* There are tasks in the Ready state that have a priority above the
2084:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			idle priority.  This path can only be reached if
2085:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			configUSE_PREEMPTION is 0. */
2086:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			xReturn = 0;
2087:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
2088:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
2089:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
2090:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			xReturn = xNextTaskUnblockTime - xTickCount;
2091:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
2092:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2093:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		return xReturn;
2094:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
2095:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2096:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* configUSE_TICKLESS_IDLE */
2097:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*----------------------------------------------------------*/
2098:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2099:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** BaseType_t xTaskResumeAll( void )
2100:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** {
2101:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** TCB_t *pxTCB = NULL;
2102:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** BaseType_t xAlreadyYielded = pdFALSE;
2103:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2104:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* If uxSchedulerSuspended is zero then this function does not match a
2105:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	previous call to vTaskSuspendAll(). */
2106:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	configASSERT( uxSchedulerSuspended );
2107:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2108:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* It is possible that an ISR caused a task to be removed from an event
2109:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	list while the scheduler was suspended.  If this was the case then the
2110:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	removed task will have been added to the xPendingReadyList.  Once the
2111:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	scheduler has been resumed it is safe to move all the pending ready
2112:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	tasks from this list into their appropriate ready list. */
2113:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	taskENTER_CRITICAL();
2114:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
2115:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		--uxSchedulerSuspended;
2116:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2117:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
2118:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
2119:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( uxCurrentNumberOfTasks > ( UBaseType_t ) 0U )
2120:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
2121:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* Move any readied tasks from the pending list into the
2122:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				appropriate ready list. */
2123:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				while( listLIST_IS_EMPTY( &xPendingReadyList ) == pdFALSE )
2124:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
2125:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					pxTCB = ( TCB_t * ) listGET_OWNER_OF_HEAD_ENTRY( ( &xPendingReadyList ) );
2126:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					( void ) uxListRemove( &( pxTCB->xEventListItem ) );
2127:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
2128:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					prvAddTaskToReadyList( pxTCB );
ARM GAS  /tmp/ccRhC8mT.s 			page 44


2129:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2130:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* If the moved task has a priority higher than the current
2131:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					task then a yield must be performed. */
2132:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					if( pxTCB->uxPriority >= pxCurrentTCB->uxPriority )
2133:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
2134:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						xYieldPending = pdTRUE;
2135:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
2136:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					else
2137:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
2138:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						mtCOVERAGE_TEST_MARKER();
2139:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
2140:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
2141:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2142:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				if( pxTCB != NULL )
2143:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
2144:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* A task was unblocked while the scheduler was suspended,
2145:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					which may have prevented the next unblock time from being
2146:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					re-calculated, in which case re-calculate it now.  Mainly
2147:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					important for low power tickless implementations, where
2148:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					this can prevent an unnecessary exit from low power
2149:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					state. */
2150:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					prvResetNextTaskUnblockTime();
2151:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
2152:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2153:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* If any ticks occurred while the scheduler was suspended then
2154:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				they should be processed now.  This ensures the tick count does
2155:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				not	slip, and that any delayed tasks are resumed at the correct
2156:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				time. */
2157:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
2158:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					UBaseType_t uxPendedCounts = uxPendedTicks; /* Non-volatile copy. */
2159:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2160:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					if( uxPendedCounts > ( UBaseType_t ) 0U )
2161:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
2162:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						do
2163:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						{
2164:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							if( xTaskIncrementTick() != pdFALSE )
2165:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							{
2166:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 								xYieldPending = pdTRUE;
2167:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							}
2168:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							else
2169:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							{
2170:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 								mtCOVERAGE_TEST_MARKER();
2171:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							}
2172:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							--uxPendedCounts;
2173:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						} while( uxPendedCounts > ( UBaseType_t ) 0U );
2174:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2175:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						uxPendedTicks = 0;
2176:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
2177:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					else
2178:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
2179:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						mtCOVERAGE_TEST_MARKER();
2180:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
2181:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
2182:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2183:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				if( xYieldPending != pdFALSE )
2184:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
2185:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					#if( configUSE_PREEMPTION != 0 )
ARM GAS  /tmp/ccRhC8mT.s 			page 45


2186:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
2187:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						xAlreadyYielded = pdTRUE;
2188:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
2189:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					#endif
2190:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					taskYIELD_IF_USING_PREEMPTION();
2191:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
2192:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				else
2193:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
2194:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					mtCOVERAGE_TEST_MARKER();
2195:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
2196:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
2197:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
2198:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
2199:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
2200:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
2201:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
2202:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
2203:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	taskEXIT_CRITICAL();
2204:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2205:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	return xAlreadyYielded;
2206:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
2207:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
2208:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2209:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** TickType_t xTaskGetTickCount( void )
2210:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** {
2211:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** TickType_t xTicks;
2212:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2213:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* Critical section required if running on a 16 bit processor. */
2214:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	portTICK_TYPE_ENTER_CRITICAL();
2215:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
2216:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		xTicks = xTickCount;
2217:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
2218:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	portTICK_TYPE_EXIT_CRITICAL();
2219:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2220:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	return xTicks;
2221:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
2222:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
2223:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2224:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** TickType_t xTaskGetTickCountFromISR( void )
2225:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** {
2226:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** TickType_t xReturn;
2227:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** UBaseType_t uxSavedInterruptStatus;
2228:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2229:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* RTOS ports that support interrupt nesting have the concept of a maximum
2230:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	system call (or maximum API call) interrupt priority.  Interrupts that are
2231:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	above the maximum system call priority are kept permanently enabled, even
2232:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	when the RTOS kernel is in a critical section, but cannot make any calls to
2233:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	FreeRTOS API functions.  If configASSERT() is defined in FreeRTOSConfig.h
2234:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	then portASSERT_IF_INTERRUPT_PRIORITY_INVALID() will result in an assertion
2235:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	failure if a FreeRTOS API function is called from an interrupt that has been
2236:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	assigned a priority above the configured maximum system call priority.
2237:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	Only FreeRTOS functions that end in FromISR can be called from interrupts
2238:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	that have been assigned a priority at or (logically) below the maximum
2239:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	system call	interrupt priority.  FreeRTOS maintains a separate interrupt
2240:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	safe API to ensure interrupt entry is as fast and as simple as possible.
2241:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	More information (albeit Cortex-M specific) is provided on the following
2242:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	link: http://www.freertos.org/RTOS-Cortex-M3-M4.html */
ARM GAS  /tmp/ccRhC8mT.s 			page 46


2243:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
2244:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2245:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	uxSavedInterruptStatus = portTICK_TYPE_SET_INTERRUPT_MASK_FROM_ISR();
2246:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
2247:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		xReturn = xTickCount;
2248:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
2249:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	portTICK_TYPE_CLEAR_INTERRUPT_MASK_FROM_ISR( uxSavedInterruptStatus );
2250:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2251:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	return xReturn;
2252:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
2253:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
2254:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2255:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** UBaseType_t uxTaskGetNumberOfTasks( void )
2256:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** {
2257:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* A critical section is not required because the variables are of type
2258:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t. */
2259:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	return uxCurrentNumberOfTasks;
2260:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
2261:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
2262:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2263:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** char *pcTaskGetName( TaskHandle_t xTaskToQuery ) /*lint !e971 Unqualified char types are allowed fo
2264:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** {
2265:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** TCB_t *pxTCB;
2266:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2267:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* If null is passed in here then the name of the calling task is being
2268:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	queried. */
2269:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	pxTCB = prvGetTCBFromHandle( xTaskToQuery );
2270:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	configASSERT( pxTCB );
2271:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	return &( pxTCB->pcTaskName[ 0 ] );
2272:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
2273:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
2274:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2275:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( INCLUDE_xTaskGetHandle == 1 )
2276:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2277:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	static TCB_t *prvSearchForNameWithinSingleList( List_t *pxList, const char pcNameToQuery[] )
2278:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
2279:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t *pxNextTCB, *pxFirstTCB, *pxReturn = NULL;
2280:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	UBaseType_t x;
2281:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	char cNextChar;
2282:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2283:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* This function is called with the scheduler suspended. */
2284:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2285:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( listCURRENT_LIST_LENGTH( pxList ) > ( UBaseType_t ) 0 )
2286:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
2287:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			listGET_OWNER_OF_NEXT_ENTRY( pxFirstTCB, pxList );
2288:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2289:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			do
2290:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
2291:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				listGET_OWNER_OF_NEXT_ENTRY( pxNextTCB, pxList );
2292:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2293:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* Check each character in the name looking for a match or
2294:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				mismatch. */
2295:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				for( x = ( UBaseType_t ) 0; x < ( UBaseType_t ) configMAX_TASK_NAME_LEN; x++ )
2296:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
2297:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					cNextChar = pxNextTCB->pcTaskName[ x ];
2298:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2299:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					if( cNextChar != pcNameToQuery[ x ] )
ARM GAS  /tmp/ccRhC8mT.s 			page 47


2300:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
2301:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						/* Characters didn't match. */
2302:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						break;
2303:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
2304:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					else if( cNextChar == 0x00 )
2305:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
2306:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						/* Both strings terminated, a match must have been
2307:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						found. */
2308:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						pxReturn = pxNextTCB;
2309:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						break;
2310:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
2311:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					else
2312:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
2313:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						mtCOVERAGE_TEST_MARKER();
2314:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
2315:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
2316:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2317:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				if( pxReturn != NULL )
2318:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
2319:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* The handle has been found. */
2320:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					break;
2321:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
2322:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2323:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			} while( pxNextTCB != pxFirstTCB );
2324:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
2325:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
2326:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
2327:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
2328:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
2329:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2330:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		return pxReturn;
2331:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
2332:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2333:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* INCLUDE_xTaskGetHandle */
2334:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
2335:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2336:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( INCLUDE_xTaskGetHandle == 1 )
2337:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2338:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TaskHandle_t xTaskGetHandle( const char *pcNameToQuery ) /*lint !e971 Unqualified char types are a
2339:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
2340:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	UBaseType_t uxQueue = configMAX_PRIORITIES;
2341:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t* pxTCB;
2342:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2343:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Task names will be truncated to configMAX_TASK_NAME_LEN - 1 bytes. */
2344:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		configASSERT( strlen( pcNameToQuery ) < configMAX_TASK_NAME_LEN );
2345:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2346:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		vTaskSuspendAll();
2347:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
2348:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Search the ready lists. */
2349:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			do
2350:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
2351:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				uxQueue--;
2352:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				pxTCB = prvSearchForNameWithinSingleList( ( List_t * ) &( pxReadyTasksLists[ uxQueue ] ), pcNam
2353:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2354:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				if( pxTCB != NULL )
2355:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
2356:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* Found the handle. */
ARM GAS  /tmp/ccRhC8mT.s 			page 48


2357:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					break;
2358:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
2359:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2360:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			} while( uxQueue > ( UBaseType_t ) tskIDLE_PRIORITY ); /*lint !e961 MISRA exception as the casts
2361:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2362:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Search the delayed lists. */
2363:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( pxTCB == NULL )
2364:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
2365:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				pxTCB = prvSearchForNameWithinSingleList( ( List_t * ) pxDelayedTaskList, pcNameToQuery );
2366:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
2367:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2368:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( pxTCB == NULL )
2369:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
2370:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				pxTCB = prvSearchForNameWithinSingleList( ( List_t * ) pxOverflowDelayedTaskList, pcNameToQuery
2371:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
2372:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2373:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			#if ( INCLUDE_vTaskSuspend == 1 )
2374:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
2375:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				if( pxTCB == NULL )
2376:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
2377:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* Search the suspended list. */
2378:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					pxTCB = prvSearchForNameWithinSingleList( &xSuspendedTaskList, pcNameToQuery );
2379:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
2380:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
2381:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			#endif
2382:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2383:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			#if( INCLUDE_vTaskDelete == 1 )
2384:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
2385:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				if( pxTCB == NULL )
2386:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
2387:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* Search the deleted list. */
2388:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					pxTCB = prvSearchForNameWithinSingleList( &xTasksWaitingTermination, pcNameToQuery );
2389:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
2390:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
2391:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			#endif
2392:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
2393:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		( void ) xTaskResumeAll();
2394:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2395:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		return ( TaskHandle_t ) pxTCB;
2396:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
2397:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2398:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* INCLUDE_xTaskGetHandle */
2399:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
2400:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2401:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( configUSE_TRACE_FACILITY == 1 )
2402:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2403:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	UBaseType_t uxTaskGetSystemState( TaskStatus_t * const pxTaskStatusArray, const UBaseType_t uxArra
2404:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
2405:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	UBaseType_t uxTask = 0, uxQueue = configMAX_PRIORITIES;
2406:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2407:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		vTaskSuspendAll();
2408:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
2409:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Is there a space in the array for each task in the system? */
2410:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( uxArraySize >= uxCurrentNumberOfTasks )
2411:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
2412:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* Fill in an TaskStatus_t structure with information on each
2413:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				task in the Ready state. */
ARM GAS  /tmp/ccRhC8mT.s 			page 49


2414:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				do
2415:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
2416:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					uxQueue--;
2417:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					uxTask += prvListTasksWithinSingleList( &( pxTaskStatusArray[ uxTask ] ), &( pxReadyTasksLists
2418:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2419:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				} while( uxQueue > ( UBaseType_t ) tskIDLE_PRIORITY ); /*lint !e961 MISRA exception as the cast
2420:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2421:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* Fill in an TaskStatus_t structure with information on each
2422:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				task in the Blocked state. */
2423:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				uxTask += prvListTasksWithinSingleList( &( pxTaskStatusArray[ uxTask ] ), ( List_t * ) pxDelaye
2424:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				uxTask += prvListTasksWithinSingleList( &( pxTaskStatusArray[ uxTask ] ), ( List_t * ) pxOverfl
2425:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2426:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				#if( INCLUDE_vTaskDelete == 1 )
2427:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
2428:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* Fill in an TaskStatus_t structure with information on
2429:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					each task that has been deleted but not yet cleaned up. */
2430:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					uxTask += prvListTasksWithinSingleList( &( pxTaskStatusArray[ uxTask ] ), &xTasksWaitingTermin
2431:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
2432:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				#endif
2433:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2434:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				#if ( INCLUDE_vTaskSuspend == 1 )
2435:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
2436:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* Fill in an TaskStatus_t structure with information on
2437:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					each task in the Suspended state. */
2438:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					uxTask += prvListTasksWithinSingleList( &( pxTaskStatusArray[ uxTask ] ), &xSuspendedTaskList,
2439:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
2440:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				#endif
2441:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2442:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				#if ( configGENERATE_RUN_TIME_STATS == 1)
2443:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
2444:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					if( pulTotalRunTime != NULL )
2445:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
2446:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						#ifdef portALT_GET_RUN_TIME_COUNTER_VALUE
2447:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							portALT_GET_RUN_TIME_COUNTER_VALUE( ( *pulTotalRunTime ) );
2448:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						#else
2449:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							*pulTotalRunTime = portGET_RUN_TIME_COUNTER_VALUE();
2450:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						#endif
2451:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
2452:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
2453:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				#else
2454:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
2455:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					if( pulTotalRunTime != NULL )
2456:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
2457:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						*pulTotalRunTime = 0;
2458:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
2459:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
2460:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				#endif
2461:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
2462:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
2463:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
2464:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
2465:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
2466:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
2467:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		( void ) xTaskResumeAll();
2468:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2469:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		return uxTask;
2470:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
ARM GAS  /tmp/ccRhC8mT.s 			page 50


2471:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2472:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* configUSE_TRACE_FACILITY */
2473:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*----------------------------------------------------------*/
2474:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2475:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( INCLUDE_xTaskGetIdleTaskHandle == 1 )
2476:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2477:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TaskHandle_t xTaskGetIdleTaskHandle( void )
2478:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
2479:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* If xTaskGetIdleTaskHandle() is called before the scheduler has been
2480:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		started, then xIdleTaskHandle will be NULL. */
2481:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		configASSERT( ( xIdleTaskHandle != NULL ) );
2482:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		return xIdleTaskHandle;
2483:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
2484:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2485:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* INCLUDE_xTaskGetIdleTaskHandle */
2486:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*----------------------------------------------------------*/
2487:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2488:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /* This conditional compilation should use inequality to 0, not equality to 1.
2489:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** This is to ensure vTaskStepTick() is available when user defined low power mode
2490:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** implementations require configUSE_TICKLESS_IDLE to be set to a value other than
2491:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 1. */
2492:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( configUSE_TICKLESS_IDLE != 0 )
2493:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2494:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	void vTaskStepTick( const TickType_t xTicksToJump )
2495:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
2496:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Correct the tick count value after a period during which the tick
2497:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		was suppressed.  Note this does *not* call the tick hook function for
2498:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		each stepped tick. */
2499:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		configASSERT( ( xTickCount + xTicksToJump ) <= xNextTaskUnblockTime );
2500:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		xTickCount += xTicksToJump;
2501:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		traceINCREASE_TICK_COUNT( xTicksToJump );
2502:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
2503:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2504:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* configUSE_TICKLESS_IDLE */
2505:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*----------------------------------------------------------*/
2506:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2507:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( INCLUDE_xTaskAbortDelay == 1 )
2508:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2509:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xTaskAbortDelay( TaskHandle_t xTask )
2510:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
2511:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t *pxTCB = ( TCB_t * ) xTask;
2512:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xReturn;
2513:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2514:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		configASSERT( pxTCB );
2515:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2516:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		vTaskSuspendAll();
2517:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
2518:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* A task can only be prematurely removed from the Blocked state if
2519:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			it is actually in the Blocked state. */
2520:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( eTaskGetState( xTask ) == eBlocked )
2521:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
2522:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				xReturn = pdPASS;
2523:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2524:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* Remove the reference to the task from the blocked list.  An
2525:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				interrupt won't touch the xStateListItem because the
2526:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				scheduler is suspended. */
2527:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				( void ) uxListRemove( &( pxTCB->xStateListItem ) );
ARM GAS  /tmp/ccRhC8mT.s 			page 51


2528:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2529:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* Is the task waiting on an event also?  If so remove it from
2530:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				the event list too.  Interrupts can touch the event list item,
2531:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				even though the scheduler is suspended, so a critical section
2532:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				is used. */
2533:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				taskENTER_CRITICAL();
2534:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
2535:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					if( listLIST_ITEM_CONTAINER( &( pxTCB->xEventListItem ) ) != NULL )
2536:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
2537:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						( void ) uxListRemove( &( pxTCB->xEventListItem ) );
2538:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						pxTCB->ucDelayAborted = pdTRUE;
2539:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
2540:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					else
2541:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
2542:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						mtCOVERAGE_TEST_MARKER();
2543:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
2544:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
2545:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				taskEXIT_CRITICAL();
2546:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2547:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* Place the unblocked task into the appropriate ready list. */
2548:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				prvAddTaskToReadyList( pxTCB );
2549:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2550:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* A task being unblocked cannot cause an immediate context
2551:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				switch if preemption is turned off. */
2552:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				#if (  configUSE_PREEMPTION == 1 )
2553:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
2554:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* Preemption is on, but a context switch should only be
2555:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					performed if the unblocked task has a priority that is
2556:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					equal to or higher than the currently executing task. */
2557:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					if( pxTCB->uxPriority > pxCurrentTCB->uxPriority )
2558:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
2559:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						/* Pend the yield to be performed when the scheduler
2560:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						is unsuspended. */
2561:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						xYieldPending = pdTRUE;
2562:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
2563:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					else
2564:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
2565:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						mtCOVERAGE_TEST_MARKER();
2566:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
2567:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
2568:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				#endif /* configUSE_PREEMPTION */
2569:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
2570:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
2571:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
2572:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				xReturn = pdFAIL;
2573:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
2574:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
2575:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		( void ) xTaskResumeAll();
2576:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2577:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		return xReturn;
2578:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
2579:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2580:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* INCLUDE_xTaskAbortDelay */
2581:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*----------------------------------------------------------*/
2582:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2583:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** BaseType_t xTaskIncrementTick( void )
2584:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** {
ARM GAS  /tmp/ccRhC8mT.s 			page 52


2585:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** TCB_t * pxTCB;
2586:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** TickType_t xItemValue;
2587:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** BaseType_t xSwitchRequired = pdFALSE;
2588:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2589:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* Called by the portable layer each time a tick interrupt occurs.
2590:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	Increments the tick then checks to see if the new tick value will cause any
2591:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	tasks to be unblocked. */
2592:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	traceTASK_INCREMENT_TICK( xTickCount );
2593:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
2594:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
2595:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Minor optimisation.  The tick count cannot change in this
2596:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		block. */
2597:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		const TickType_t xConstTickCount = xTickCount + ( TickType_t ) 1;
2598:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2599:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Increment the RTOS tick, switching the delayed and overflowed
2600:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		delayed lists if it wraps to 0. */
2601:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		xTickCount = xConstTickCount;
2602:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2603:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( xConstTickCount == ( TickType_t ) 0U ) /*lint !e774 'if' does not always evaluate to false as
2604:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
2605:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			taskSWITCH_DELAYED_LISTS();
2606:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
2607:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
2608:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
2609:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
2610:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
2611:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2612:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* See if this tick has made a timeout expire.  Tasks are stored in
2613:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		the	queue in the order of their wake time - meaning once one task
2614:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		has been found whose block time has not expired there is no need to
2615:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		look any further down the list. */
2616:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( xConstTickCount >= xNextTaskUnblockTime )
2617:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
2618:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			for( ;; )
2619:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
2620:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
2621:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
2622:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* The delayed list is empty.  Set xNextTaskUnblockTime
2623:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					to the maximum possible value so it is extremely
2624:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					unlikely that the
2625:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					if( xTickCount >= xNextTaskUnblockTime ) test will pass
2626:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					next time through. */
2627:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					xNextTaskUnblockTime = portMAX_DELAY; /*lint !e961 MISRA exception as the casts are only redun
2628:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					break;
2629:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
2630:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				else
2631:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
2632:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* The delayed list is not empty, get the value of the
2633:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					item at the head of the delayed list.  This is the time
2634:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					at which the task at the head of the delayed list must
2635:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					be removed from the Blocked state. */
2636:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					pxTCB = ( TCB_t * ) listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList );
2637:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					xItemValue = listGET_LIST_ITEM_VALUE( &( pxTCB->xStateListItem ) );
2638:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2639:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					if( xConstTickCount < xItemValue )
2640:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
2641:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						/* It is not time to unblock this item yet, but the
ARM GAS  /tmp/ccRhC8mT.s 			page 53


2642:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						item value is the time at which the task at the head
2643:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						of the blocked list must be removed from the Blocked
2644:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						state -	so record the item value in
2645:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						xNextTaskUnblockTime. */
2646:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						xNextTaskUnblockTime = xItemValue;
2647:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						break;
2648:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
2649:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					else
2650:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
2651:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						mtCOVERAGE_TEST_MARKER();
2652:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
2653:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2654:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* It is time to remove the item from the Blocked state. */
2655:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
2656:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2657:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* Is the task waiting on an event also?  If so remove
2658:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					it from the event list. */
2659:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					if( listLIST_ITEM_CONTAINER( &( pxTCB->xEventListItem ) ) != NULL )
2660:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
2661:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						( void ) uxListRemove( &( pxTCB->xEventListItem ) );
2662:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
2663:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					else
2664:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
2665:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						mtCOVERAGE_TEST_MARKER();
2666:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
2667:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2668:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* Place the unblocked task into the appropriate ready
2669:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					list. */
2670:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					prvAddTaskToReadyList( pxTCB );
2671:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2672:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* A task being unblocked cannot cause an immediate
2673:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					context switch if preemption is turned off. */
2674:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					#if (  configUSE_PREEMPTION == 1 )
2675:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
2676:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						/* Preemption is on, but a context switch should
2677:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						only be performed if the unblocked task has a
2678:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						priority that is equal to or higher than the
2679:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						currently executing task. */
2680:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						if( pxTCB->uxPriority >= pxCurrentTCB->uxPriority )
2681:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						{
2682:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							xSwitchRequired = pdTRUE;
2683:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						}
2684:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						else
2685:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						{
2686:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							mtCOVERAGE_TEST_MARKER();
2687:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						}
2688:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
2689:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					#endif /* configUSE_PREEMPTION */
2690:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
2691:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
2692:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
2693:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2694:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Tasks of equal priority to the currently running task will share
2695:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		processing time (time slice) if preemption is on, and the application
2696:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		writer has not explicitly turned time slicing off. */
2697:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#if ( ( configUSE_PREEMPTION == 1 ) && ( configUSE_TIME_SLICING == 1 ) )
2698:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
ARM GAS  /tmp/ccRhC8mT.s 			page 54


2699:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( listCURRENT_LIST_LENGTH( &( pxReadyTasksLists[ pxCurrentTCB->uxPriority ] ) ) > ( UBaseType_
2700:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
2701:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				xSwitchRequired = pdTRUE;
2702:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
2703:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
2704:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
2705:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
2706:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
2707:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
2708:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#endif /* ( ( configUSE_PREEMPTION == 1 ) && ( configUSE_TIME_SLICING == 1 ) ) */
2709:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2710:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#if ( configUSE_TICK_HOOK == 1 )
2711:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
2712:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Guard against the tick hook being called when the pended tick
2713:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			count is being unwound (when the scheduler is being unlocked). */
2714:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( uxPendedTicks == ( UBaseType_t ) 0U )
2715:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
2716:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				vApplicationTickHook();
2717:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
2718:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
2719:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
2720:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
2721:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
2722:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
2723:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#endif /* configUSE_TICK_HOOK */
2724:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
2725:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	else
2726:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
2727:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		++uxPendedTicks;
2728:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2729:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* The tick hook gets called at regular intervals, even if the
2730:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		scheduler is locked. */
2731:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#if ( configUSE_TICK_HOOK == 1 )
2732:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
2733:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			vApplicationTickHook();
2734:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
2735:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#endif
2736:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
2737:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2738:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#if ( configUSE_PREEMPTION == 1 )
2739:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
2740:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( xYieldPending != pdFALSE )
2741:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
2742:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			xSwitchRequired = pdTRUE;
2743:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
2744:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
2745:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
2746:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
2747:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
2748:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
2749:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#endif /* configUSE_PREEMPTION */
2750:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2751:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	return xSwitchRequired;
2752:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
2753:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
2754:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2755:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( configUSE_APPLICATION_TASK_TAG == 1 )
ARM GAS  /tmp/ccRhC8mT.s 			page 55


2756:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2757:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	void vTaskSetApplicationTaskTag( TaskHandle_t xTask, TaskHookFunction_t pxHookFunction )
2758:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
2759:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t *xTCB;
2760:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2761:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* If xTask is NULL then it is the task hook of the calling task that is
2762:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		getting set. */
2763:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( xTask == NULL )
2764:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
2765:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			xTCB = ( TCB_t * ) pxCurrentTCB;
2766:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
2767:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
2768:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
2769:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			xTCB = ( TCB_t * ) xTask;
2770:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
2771:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2772:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Save the hook function in the TCB.  A critical section is required as
2773:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		the value can be accessed from an interrupt. */
2774:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		taskENTER_CRITICAL();
2775:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			xTCB->pxTaskTag = pxHookFunction;
2776:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		taskEXIT_CRITICAL();
2777:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
2778:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2779:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* configUSE_APPLICATION_TASK_TAG */
2780:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
2781:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2782:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( configUSE_APPLICATION_TASK_TAG == 1 )
2783:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2784:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TaskHookFunction_t xTaskGetApplicationTaskTag( TaskHandle_t xTask )
2785:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
2786:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t *xTCB;
2787:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TaskHookFunction_t xReturn;
2788:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2789:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* If xTask is NULL then we are setting our own task hook. */
2790:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( xTask == NULL )
2791:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
2792:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			xTCB = ( TCB_t * ) pxCurrentTCB;
2793:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
2794:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
2795:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
2796:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			xTCB = ( TCB_t * ) xTask;
2797:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
2798:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2799:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Save the hook function in the TCB.  A critical section is required as
2800:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		the value can be accessed from an interrupt. */
2801:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		taskENTER_CRITICAL();
2802:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
2803:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			xReturn = xTCB->pxTaskTag;
2804:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
2805:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		taskEXIT_CRITICAL();
2806:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2807:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		return xReturn;
2808:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
2809:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2810:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* configUSE_APPLICATION_TASK_TAG */
2811:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
2812:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
ARM GAS  /tmp/ccRhC8mT.s 			page 56


2813:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( configUSE_APPLICATION_TASK_TAG == 1 )
2814:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2815:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xTaskCallApplicationTaskHook( TaskHandle_t xTask, void *pvParameter )
2816:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
2817:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t *xTCB;
2818:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xReturn;
2819:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2820:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* If xTask is NULL then we are calling our own task hook. */
2821:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( xTask == NULL )
2822:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
2823:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			xTCB = ( TCB_t * ) pxCurrentTCB;
2824:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
2825:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
2826:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
2827:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			xTCB = ( TCB_t * ) xTask;
2828:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
2829:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2830:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( xTCB->pxTaskTag != NULL )
2831:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
2832:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			xReturn = xTCB->pxTaskTag( pvParameter );
2833:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
2834:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
2835:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
2836:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			xReturn = pdFAIL;
2837:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
2838:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2839:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		return xReturn;
2840:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
2841:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2842:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* configUSE_APPLICATION_TASK_TAG */
2843:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
2844:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2845:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** void vTaskSwitchContext( void )
2846:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** {
2847:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	if( uxSchedulerSuspended != ( UBaseType_t ) pdFALSE )
2848:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
2849:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* The scheduler is currently suspended - do not allow a context
2850:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		switch. */
2851:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		xYieldPending = pdTRUE;
2852:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
2853:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	else
2854:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
2855:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		xYieldPending = pdFALSE;
2856:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		traceTASK_SWITCHED_OUT();
2857:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2858:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#if ( configGENERATE_RUN_TIME_STATS == 1 )
2859:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
2860:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				#ifdef portALT_GET_RUN_TIME_COUNTER_VALUE
2861:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					portALT_GET_RUN_TIME_COUNTER_VALUE( ulTotalRunTime );
2862:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				#else
2863:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					ulTotalRunTime = portGET_RUN_TIME_COUNTER_VALUE();
2864:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				#endif
2865:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2866:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* Add the amount of time the task has been running to the
2867:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				accumulated time so far.  The time the task started running was
2868:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				stored in ulTaskSwitchedInTime.  Note that there is no overflow
2869:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				protection here so count values are only valid until the timer
ARM GAS  /tmp/ccRhC8mT.s 			page 57


2870:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				overflows.  The guard against negative values is to protect
2871:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				against suspect run time stat counter implementations - which
2872:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				are provided by the application, not the kernel. */
2873:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				if( ulTotalRunTime > ulTaskSwitchedInTime )
2874:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
2875:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					pxCurrentTCB->ulRunTimeCounter += ( ulTotalRunTime - ulTaskSwitchedInTime );
2876:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
2877:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				else
2878:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
2879:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					mtCOVERAGE_TEST_MARKER();
2880:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
2881:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				ulTaskSwitchedInTime = ulTotalRunTime;
2882:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
2883:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#endif /* configGENERATE_RUN_TIME_STATS */
2884:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2885:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Check for stack overflow, if configured. */
2886:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		taskCHECK_FOR_STACK_OVERFLOW();
2887:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2888:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Select a new task to run using either the generic C or port
2889:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		optimised asm code. */
2890:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		taskSELECT_HIGHEST_PRIORITY_TASK();
2891:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		traceTASK_SWITCHED_IN();
2892:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2893:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#if ( configUSE_NEWLIB_REENTRANT == 1 )
2894:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
2895:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Switch Newlib's _impure_ptr variable to point to the _reent
2896:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			structure specific to this task. */
2897:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			_impure_ptr = &( pxCurrentTCB->xNewLib_reent );
2898:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
2899:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#endif /* configUSE_NEWLIB_REENTRANT */
2900:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
2901:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
2902:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
2903:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2904:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** void vTaskPlaceOnEventList( List_t * const pxEventList, const TickType_t xTicksToWait )
2905:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** {
2906:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	configASSERT( pxEventList );
2907:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2908:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* THIS FUNCTION MUST BE CALLED WITH EITHER INTERRUPTS DISABLED OR THE
2909:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	SCHEDULER SUSPENDED AND THE QUEUE BEING ACCESSED LOCKED. */
2910:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2911:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* Place the event list item of the TCB in the appropriate event list.
2912:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	This is placed in the list in priority order so the highest priority task
2913:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	is the first to be woken by the event.  The queue that contains the event
2914:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	list is locked, preventing simultaneous access from interrupts. */
2915:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	vListInsert( pxEventList, &( pxCurrentTCB->xEventListItem ) );
2916:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2917:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	prvAddCurrentTaskToDelayedList( xTicksToWait, pdTRUE );
2918:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
2919:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
2920:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2921:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** void vTaskPlaceOnUnorderedEventList( List_t * pxEventList, const TickType_t xItemValue, const TickT
2922:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** {
2923:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	configASSERT( pxEventList );
2924:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2925:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* THIS FUNCTION MUST BE CALLED WITH THE SCHEDULER SUSPENDED.  It is used by
2926:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	the event groups implementation. */
ARM GAS  /tmp/ccRhC8mT.s 			page 58


2927:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	configASSERT( uxSchedulerSuspended != 0 );
2928:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2929:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* Store the item value in the event list item.  It is safe to access the
2930:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	event list item here as interrupts won't access the event list item of a
2931:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	task that is not in the Blocked state. */
2932:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	listSET_LIST_ITEM_VALUE( &( pxCurrentTCB->xEventListItem ), xItemValue | taskEVENT_LIST_ITEM_VALUE
2933:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2934:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* Place the event list item of the TCB at the end of the appropriate event
2935:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	list.  It is safe to access the event list here because it is part of an
2936:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	event group implementation - and interrupts don't access event groups
2937:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	directly (instead they access them indirectly by pending function calls to
2938:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	the task level). */
2939:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	vListInsertEnd( pxEventList, &( pxCurrentTCB->xEventListItem ) );
2940:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2941:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	prvAddCurrentTaskToDelayedList( xTicksToWait, pdTRUE );
2942:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
2943:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
2944:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2945:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if( configUSE_TIMERS == 1 )
2946:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2947:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	void vTaskPlaceOnEventListRestricted( List_t * const pxEventList, TickType_t xTicksToWait, const B
2948:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
2949:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		configASSERT( pxEventList );
2950:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2951:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* This function should not be called by application code hence the
2952:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		'Restricted' in its name.  It is not part of the public API.  It is
2953:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		designed for use by kernel code, and has special calling requirements -
2954:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		it should be called with the scheduler suspended. */
2955:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2956:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2957:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Place the event list item of the TCB in the appropriate event list.
2958:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		In this case it is assume that this is the only task that is going to
2959:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		be waiting on this event list, so the faster vListInsertEnd() function
2960:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		can be used in place of vListInsert. */
2961:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		vListInsertEnd( pxEventList, &( pxCurrentTCB->xEventListItem ) );
2962:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2963:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* If the task should block indefinitely then set the block time to a
2964:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		value that will be recognised as an indefinite delay inside the
2965:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		prvAddCurrentTaskToDelayedList() function. */
2966:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( xWaitIndefinitely != pdFALSE )
2967:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
2968:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			xTicksToWait = portMAX_DELAY;
2969:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
2970:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2971:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		traceTASK_DELAY_UNTIL( ( xTickCount + xTicksToWait ) );
2972:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		prvAddCurrentTaskToDelayedList( xTicksToWait, xWaitIndefinitely );
2973:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
2974:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2975:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* configUSE_TIMERS */
2976:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
2977:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2978:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** BaseType_t xTaskRemoveFromEventList( const List_t * const pxEventList )
2979:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** {
2980:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** TCB_t *pxUnblockedTCB;
2981:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** BaseType_t xReturn;
2982:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2983:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* THIS FUNCTION MUST BE CALLED FROM A CRITICAL SECTION.  It can also be
ARM GAS  /tmp/ccRhC8mT.s 			page 59


2984:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	called from a critical section within an ISR. */
2985:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2986:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* The event list is sorted in priority order, so the first in the list can
2987:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	be removed as it is known to be the highest priority.  Remove the TCB from
2988:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	the delayed list, and add it to the ready list.
2989:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2990:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	If an event is for a queue that is locked then this function will never
2991:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	get called - the lock count on the queue will get modified instead.  This
2992:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	means exclusive access to the event list is guaranteed here.
2993:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2994:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	This function assumes that a check has already been made to ensure that
2995:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	pxEventList is not empty. */
2996:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	pxUnblockedTCB = ( TCB_t * ) listGET_OWNER_OF_HEAD_ENTRY( pxEventList );
2997:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	configASSERT( pxUnblockedTCB );
2998:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	( void ) uxListRemove( &( pxUnblockedTCB->xEventListItem ) );
2999:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3000:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
3001:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
3002:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		( void ) uxListRemove( &( pxUnblockedTCB->xStateListItem ) );
3003:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		prvAddTaskToReadyList( pxUnblockedTCB );
3004:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
3005:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	else
3006:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
3007:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* The delayed and ready lists cannot be accessed, so hold this task
3008:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pending until the scheduler is resumed. */
3009:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		vListInsertEnd( &( xPendingReadyList ), &( pxUnblockedTCB->xEventListItem ) );
3010:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
3011:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3012:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	if( pxUnblockedTCB->uxPriority > pxCurrentTCB->uxPriority )
3013:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
3014:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Return true if the task removed from the event list has a higher
3015:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		priority than the calling task.  This allows the calling task to know if
3016:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		it should force a context switch now. */
3017:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		xReturn = pdTRUE;
3018:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3019:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Mark that a yield is pending in case the user is not using the
3020:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		"xHigherPriorityTaskWoken" parameter to an ISR safe FreeRTOS function. */
3021:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		xYieldPending = pdTRUE;
3022:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
3023:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	else
3024:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
3025:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		xReturn = pdFALSE;
3026:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
3027:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3028:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#if( configUSE_TICKLESS_IDLE != 0 )
3029:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
3030:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* If a task is blocked on a kernel object then xNextTaskUnblockTime
3031:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		might be set to the blocked task's time out time.  If the task is
3032:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		unblocked for a reason other than a timeout xNextTaskUnblockTime is
3033:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		normally left unchanged, because it is automatically reset to a new
3034:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		value when the tick count equals xNextTaskUnblockTime.  However if
3035:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		tickless idling is used it might be more important to enter sleep mode
3036:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		at the earliest possible time - so reset xNextTaskUnblockTime here to
3037:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		ensure it is updated at the earliest possible time. */
3038:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		prvResetNextTaskUnblockTime();
3039:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
3040:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#endif
ARM GAS  /tmp/ccRhC8mT.s 			page 60


3041:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3042:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	return xReturn;
3043:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
3044:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
3045:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3046:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** void vTaskRemoveFromUnorderedEventList( ListItem_t * pxEventListItem, const TickType_t xItemValue )
3047:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** {
3048:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** TCB_t *pxUnblockedTCB;
3049:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3050:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* THIS FUNCTION MUST BE CALLED WITH THE SCHEDULER SUSPENDED.  It is used by
3051:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	the event flags implementation. */
3052:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	configASSERT( uxSchedulerSuspended != pdFALSE );
3053:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3054:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* Store the new item value in the event list. */
3055:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	listSET_LIST_ITEM_VALUE( pxEventListItem, xItemValue | taskEVENT_LIST_ITEM_VALUE_IN_USE );
3056:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3057:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* Remove the event list form the event flag.  Interrupts do not access
3058:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	event flags. */
3059:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	pxUnblockedTCB = ( TCB_t * ) listGET_LIST_ITEM_OWNER( pxEventListItem );
3060:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	configASSERT( pxUnblockedTCB );
3061:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	( void ) uxListRemove( pxEventListItem );
3062:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3063:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* Remove the task from the delayed list and add it to the ready list.  The
3064:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	scheduler is suspended so interrupts will not be accessing the ready
3065:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	lists. */
3066:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	( void ) uxListRemove( &( pxUnblockedTCB->xStateListItem ) );
3067:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	prvAddTaskToReadyList( pxUnblockedTCB );
3068:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3069:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	if( pxUnblockedTCB->uxPriority > pxCurrentTCB->uxPriority )
3070:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
3071:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* The unblocked task has a priority above that of the calling task, so
3072:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		a context switch is required.  This function is called with the
3073:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		scheduler suspended so xYieldPending is set so the context switch
3074:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		occurs immediately that the scheduler is resumed (unsuspended). */
3075:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		xYieldPending = pdTRUE;
3076:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
3077:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
3078:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
3079:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3080:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** void vTaskSetTimeOutState( TimeOut_t * const pxTimeOut )
3081:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** {
3082:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	configASSERT( pxTimeOut );
3083:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	taskENTER_CRITICAL();
3084:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
3085:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxTimeOut->xOverflowCount = xNumOfOverflows;
3086:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxTimeOut->xTimeOnEntering = xTickCount;
3087:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
3088:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	taskEXIT_CRITICAL();
3089:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
3090:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
3091:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3092:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** void vTaskInternalSetTimeOutState( TimeOut_t * const pxTimeOut )
3093:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** {
3094:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* For internal use only as it does not use a critical section. */
3095:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	pxTimeOut->xOverflowCount = xNumOfOverflows;
3096:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	pxTimeOut->xTimeOnEntering = xTickCount;
3097:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
ARM GAS  /tmp/ccRhC8mT.s 			page 61


3098:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
3099:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3100:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** BaseType_t xTaskCheckForTimeOut( TimeOut_t * const pxTimeOut, TickType_t * const pxTicksToWait )
3101:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** {
3102:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** BaseType_t xReturn;
3103:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3104:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	configASSERT( pxTimeOut );
3105:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	configASSERT( pxTicksToWait );
3106:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3107:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	taskENTER_CRITICAL();
3108:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
3109:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Minor optimisation.  The tick count cannot change in this block. */
3110:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		const TickType_t xConstTickCount = xTickCount;
3111:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		const TickType_t xElapsedTime = xConstTickCount - pxTimeOut->xTimeOnEntering;
3112:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3113:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#if( INCLUDE_xTaskAbortDelay == 1 )
3114:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( pxCurrentTCB->ucDelayAborted != pdFALSE )
3115:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
3116:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* The delay was aborted, which is not the same as a time out,
3117:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				but has the same result. */
3118:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				pxCurrentTCB->ucDelayAborted = pdFALSE;
3119:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				xReturn = pdTRUE;
3120:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
3121:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
3122:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#endif
3123:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3124:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#if ( INCLUDE_vTaskSuspend == 1 )
3125:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( *pxTicksToWait == portMAX_DELAY )
3126:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
3127:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* If INCLUDE_vTaskSuspend is set to 1 and the block time
3128:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				specified is the maximum block time then the task should block
3129:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				indefinitely, and therefore never time out. */
3130:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				xReturn = pdFALSE;
3131:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
3132:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
3133:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#endif
3134:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3135:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( ( xNumOfOverflows != pxTimeOut->xOverflowCount ) && ( xConstTickCount >= pxTimeOut->xTimeOnEn
3136:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3137:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* The tick count is greater than the time at which
3138:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			vTaskSetTimeout() was called, but has also overflowed since
3139:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			vTaskSetTimeOut() was called.  It must have wrapped all the way
3140:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			around and gone past again. This passed since vTaskSetTimeout()
3141:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			was called. */
3142:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			xReturn = pdTRUE;
3143:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3144:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else if( xElapsedTime < *pxTicksToWait ) /*lint !e961 Explicit casting is only redundant with som
3145:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3146:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Not a genuine timeout. Adjust parameters for time remaining. */
3147:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			*pxTicksToWait -= xElapsedTime;
3148:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			vTaskInternalSetTimeOutState( pxTimeOut );
3149:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			xReturn = pdFALSE;
3150:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3151:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
3152:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3153:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			*pxTicksToWait = 0;
3154:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			xReturn = pdTRUE;
ARM GAS  /tmp/ccRhC8mT.s 			page 62


3155:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3156:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
3157:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	taskEXIT_CRITICAL();
3158:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3159:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	return xReturn;
3160:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
3161:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
3162:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3163:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** void vTaskMissedYield( void )
3164:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** {
3165:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	xYieldPending = pdTRUE;
3166:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
3167:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
3168:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3169:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( configUSE_TRACE_FACILITY == 1 )
3170:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3171:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	UBaseType_t uxTaskGetTaskNumber( TaskHandle_t xTask )
3172:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
3173:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	UBaseType_t uxReturn;
3174:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t *pxTCB;
3175:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3176:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( xTask != NULL )
3177:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3178:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxTCB = ( TCB_t * ) xTask;
3179:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			uxReturn = pxTCB->uxTaskNumber;
3180:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3181:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
3182:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3183:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			uxReturn = 0U;
3184:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3185:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3186:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		return uxReturn;
3187:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
3188:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3189:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* configUSE_TRACE_FACILITY */
3190:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
3191:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3192:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( configUSE_TRACE_FACILITY == 1 )
3193:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3194:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	void vTaskSetTaskNumber( TaskHandle_t xTask, const UBaseType_t uxHandle )
3195:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
3196:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t *pxTCB;
3197:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3198:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( xTask != NULL )
3199:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3200:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxTCB = ( TCB_t * ) xTask;
3201:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxTCB->uxTaskNumber = uxHandle;
3202:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3203:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
3204:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3205:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* configUSE_TRACE_FACILITY */
3206:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3207:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*
3208:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * -----------------------------------------------------------
3209:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * The Idle task.
3210:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * ----------------------------------------------------------
3211:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  *
ARM GAS  /tmp/ccRhC8mT.s 			page 63


3212:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * The portTASK_FUNCTION() macro is used to allow port/compiler specific
3213:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * language extensions.  The equivalent prototype for this function is:
3214:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  *
3215:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * void prvIdleTask( void *pvParameters );
3216:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  *
3217:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  */
3218:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** static portTASK_FUNCTION( prvIdleTask, pvParameters )
3219:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** {
3220:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* Stop warnings. */
3221:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	( void ) pvParameters;
3222:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3223:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/** THIS IS THE RTOS IDLE TASK - WHICH IS CREATED AUTOMATICALLY WHEN THE
3224:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	SCHEDULER IS STARTED. **/
3225:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3226:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* In case a task that has a secure context deletes itself, in which case
3227:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	the idle task is responsible for deleting the task's secure context, if
3228:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	any. */
3229:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	portTASK_CALLS_SECURE_FUNCTIONS();
3230:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3231:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	for( ;; )
3232:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
3233:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* See if any tasks have deleted themselves - if so then the idle task
3234:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		is responsible for freeing the deleted task's TCB and stack. */
3235:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		prvCheckTasksWaitingTermination();
3236:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3237:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#if ( configUSE_PREEMPTION == 0 )
3238:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3239:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* If we are not using preemption we keep forcing a task switch to
3240:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			see if any other task has become available.  If we are using
3241:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			preemption we don't need to do this as any task becoming available
3242:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			will automatically get the processor anyway. */
3243:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			taskYIELD();
3244:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3245:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#endif /* configUSE_PREEMPTION */
3246:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3247:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#if ( ( configUSE_PREEMPTION == 1 ) && ( configIDLE_SHOULD_YIELD == 1 ) )
3248:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3249:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* When using preemption tasks of equal priority will be
3250:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			timesliced.  If a task that is sharing the idle priority is ready
3251:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			to run then the idle task should yield before the end of the
3252:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			timeslice.
3253:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3254:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			A critical region is not required here as we are just reading from
3255:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			the list, and an occasional incorrect value will not matter.  If
3256:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			the ready list at the idle priority contains more than one task
3257:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			then a task other than the idle task is ready to execute. */
3258:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( listCURRENT_LIST_LENGTH( &( pxReadyTasksLists[ tskIDLE_PRIORITY ] ) ) > ( UBaseType_t ) 1 )
3259:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
3260:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				taskYIELD();
3261:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
3262:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
3263:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
3264:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
3265:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
3266:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3267:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#endif /* ( ( configUSE_PREEMPTION == 1 ) && ( configIDLE_SHOULD_YIELD == 1 ) ) */
3268:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
ARM GAS  /tmp/ccRhC8mT.s 			page 64


3269:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#if ( configUSE_IDLE_HOOK == 1 )
3270:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3271:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			extern void vApplicationIdleHook( void );
3272:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3273:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Call the user defined function from within the idle task.  This
3274:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			allows the application designer to add background functionality
3275:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			without the overhead of a separate task.
3276:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			NOTE: vApplicationIdleHook() MUST NOT, UNDER ANY CIRCUMSTANCES,
3277:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			CALL A FUNCTION THAT MIGHT BLOCK. */
3278:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			vApplicationIdleHook();
3279:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3280:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#endif /* configUSE_IDLE_HOOK */
3281:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3282:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* This conditional compilation should use inequality to 0, not equality
3283:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		to 1.  This is to ensure portSUPPRESS_TICKS_AND_SLEEP() is called when
3284:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		user defined low power mode	implementations require
3285:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		configUSE_TICKLESS_IDLE to be set to a value other than 1. */
3286:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#if ( configUSE_TICKLESS_IDLE != 0 )
3287:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3288:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		TickType_t xExpectedIdleTime;
3289:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3290:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* It is not desirable to suspend then resume the scheduler on
3291:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			each iteration of the idle task.  Therefore, a preliminary
3292:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			test of the expected idle time is performed without the
3293:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			scheduler suspended.  The result here is not necessarily
3294:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			valid. */
3295:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			xExpectedIdleTime = prvGetExpectedIdleTime();
3296:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3297:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( xExpectedIdleTime >= configEXPECTED_IDLE_TIME_BEFORE_SLEEP )
3298:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
3299:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				vTaskSuspendAll();
3300:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
3301:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* Now the scheduler is suspended, the expected idle
3302:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					time can be sampled again, and this time its value can
3303:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					be used. */
3304:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					configASSERT( xNextTaskUnblockTime >= xTickCount );
3305:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					xExpectedIdleTime = prvGetExpectedIdleTime();
3306:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3307:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* Define the following macro to set xExpectedIdleTime to 0
3308:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					if the application does not want
3309:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					portSUPPRESS_TICKS_AND_SLEEP() to be called. */
3310:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					configPRE_SUPPRESS_TICKS_AND_SLEEP_PROCESSING( xExpectedIdleTime );
3311:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3312:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					if( xExpectedIdleTime >= configEXPECTED_IDLE_TIME_BEFORE_SLEEP )
3313:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
3314:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						traceLOW_POWER_IDLE_BEGIN();
3315:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						portSUPPRESS_TICKS_AND_SLEEP( xExpectedIdleTime );
3316:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						traceLOW_POWER_IDLE_END();
3317:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
3318:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					else
3319:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
3320:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						mtCOVERAGE_TEST_MARKER();
3321:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
3322:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
3323:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				( void ) xTaskResumeAll();
3324:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
3325:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
ARM GAS  /tmp/ccRhC8mT.s 			page 65


3326:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
3327:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
3328:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
3329:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3330:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#endif /* configUSE_TICKLESS_IDLE */
3331:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
3332:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
3333:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
3334:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3335:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if( configUSE_TICKLESS_IDLE != 0 )
3336:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3337:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	eSleepModeStatus eTaskConfirmSleepModeStatus( void )
3338:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
3339:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* The idle task exists in addition to the application tasks. */
3340:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	const UBaseType_t uxNonApplicationTasks = 1;
3341:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	eSleepModeStatus eReturn = eStandardSleep;
3342:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3343:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( listCURRENT_LIST_LENGTH( &xPendingReadyList ) != 0 )
3344:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3345:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* A task was made ready while the scheduler was suspended. */
3346:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			eReturn = eAbortSleep;
3347:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3348:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else if( xYieldPending != pdFALSE )
3349:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3350:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* A yield was pended while the scheduler was suspended. */
3351:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			eReturn = eAbortSleep;
3352:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3353:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
3354:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3355:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* If all the tasks are in the suspended list (which might mean they
3356:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			have an infinite block time rather than actually being suspended)
3357:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			then it is safe to turn all clocks off and just wait for external
3358:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			interrupts. */
3359:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( listCURRENT_LIST_LENGTH( &xSuspendedTaskList ) == ( uxCurrentNumberOfTasks - uxNonApplicatio
3360:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
3361:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				eReturn = eNoTasksWaitingTimeout;
3362:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
3363:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
3364:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
3365:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
3366:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
3367:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3368:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3369:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		return eReturn;
3370:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
3371:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3372:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* configUSE_TICKLESS_IDLE */
3373:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
3374:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3375:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( configNUM_THREAD_LOCAL_STORAGE_POINTERS != 0 )
3376:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3377:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	void vTaskSetThreadLocalStoragePointer( TaskHandle_t xTaskToSet, BaseType_t xIndex, void *pvValue 
3378:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
3379:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t *pxTCB;
3380:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3381:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( xIndex < configNUM_THREAD_LOCAL_STORAGE_POINTERS )
3382:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
ARM GAS  /tmp/ccRhC8mT.s 			page 66


3383:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxTCB = prvGetTCBFromHandle( xTaskToSet );
3384:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxTCB->pvThreadLocalStoragePointers[ xIndex ] = pvValue;
3385:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3386:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
3387:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3388:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* configNUM_THREAD_LOCAL_STORAGE_POINTERS */
3389:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
3390:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3391:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( configNUM_THREAD_LOCAL_STORAGE_POINTERS != 0 )
3392:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3393:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	void *pvTaskGetThreadLocalStoragePointer( TaskHandle_t xTaskToQuery, BaseType_t xIndex )
3394:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
3395:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	void *pvReturn = NULL;
3396:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t *pxTCB;
3397:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3398:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( xIndex < configNUM_THREAD_LOCAL_STORAGE_POINTERS )
3399:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3400:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxTCB = prvGetTCBFromHandle( xTaskToQuery );
3401:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pvReturn = pxTCB->pvThreadLocalStoragePointers[ xIndex ];
3402:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3403:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
3404:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3405:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pvReturn = NULL;
3406:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3407:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3408:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		return pvReturn;
3409:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
3410:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3411:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* configNUM_THREAD_LOCAL_STORAGE_POINTERS */
3412:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
3413:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3414:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( portUSING_MPU_WRAPPERS == 1 )
3415:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3416:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	void vTaskAllocateMPURegions( TaskHandle_t xTaskToModify, const MemoryRegion_t * const xRegions )
3417:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
3418:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t *pxTCB;
3419:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3420:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* If null is passed in here then we are modifying the MPU settings of
3421:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		the calling task. */
3422:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxTCB = prvGetTCBFromHandle( xTaskToModify );
3423:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3424:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		vPortStoreTaskMPUSettings( &( pxTCB->xMPUSettings ), xRegions, NULL, 0 );
3425:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
3426:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3427:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* portUSING_MPU_WRAPPERS */
3428:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
3429:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3430:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** static void prvInitialiseTaskLists( void )
3431:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** {
3432:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** UBaseType_t uxPriority;
3433:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3434:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	for( uxPriority = ( UBaseType_t ) 0U; uxPriority < ( UBaseType_t ) configMAX_PRIORITIES; uxPriorit
3435:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
3436:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		vListInitialise( &( pxReadyTasksLists[ uxPriority ] ) );
3437:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
3438:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3439:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	vListInitialise( &xDelayedTaskList1 );
ARM GAS  /tmp/ccRhC8mT.s 			page 67


3440:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	vListInitialise( &xDelayedTaskList2 );
3441:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	vListInitialise( &xPendingReadyList );
3442:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3443:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#if ( INCLUDE_vTaskDelete == 1 )
3444:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
3445:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		vListInitialise( &xTasksWaitingTermination );
3446:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
3447:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#endif /* INCLUDE_vTaskDelete */
3448:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3449:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#if ( INCLUDE_vTaskSuspend == 1 )
3450:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
3451:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		vListInitialise( &xSuspendedTaskList );
3452:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
3453:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#endif /* INCLUDE_vTaskSuspend */
3454:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3455:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* Start with pxDelayedTaskList using list1 and the pxOverflowDelayedTaskList
3456:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	using list2. */
3457:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	pxDelayedTaskList = &xDelayedTaskList1;
3458:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	pxOverflowDelayedTaskList = &xDelayedTaskList2;
3459:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
3460:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
3461:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3462:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** static void prvCheckTasksWaitingTermination( void )
3463:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** {
3464:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3465:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/** THIS FUNCTION IS CALLED FROM THE RTOS IDLE TASK **/
3466:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3467:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#if ( INCLUDE_vTaskDelete == 1 )
3468:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
3469:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		TCB_t *pxTCB;
3470:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3471:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* uxDeletedTasksWaitingCleanUp is used to prevent vTaskSuspendAll()
3472:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		being called too often in the idle task. */
3473:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		while( uxDeletedTasksWaitingCleanUp > ( UBaseType_t ) 0U )
3474:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3475:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			taskENTER_CRITICAL();
3476:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
3477:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				pxTCB = ( TCB_t * ) listGET_OWNER_OF_HEAD_ENTRY( ( &xTasksWaitingTermination ) );
3478:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				( void ) uxListRemove( &( pxTCB->xStateListItem ) );
3479:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				--uxCurrentNumberOfTasks;
3480:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				--uxDeletedTasksWaitingCleanUp;
3481:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
3482:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			taskEXIT_CRITICAL();
3483:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3484:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			prvDeleteTCB( pxTCB );
3485:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3486:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
3487:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#endif /* INCLUDE_vTaskDelete */
3488:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
3489:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
3490:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3491:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if( configUSE_TRACE_FACILITY == 1 )
3492:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3493:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	void vTaskGetInfo( TaskHandle_t xTask, TaskStatus_t *pxTaskStatus, BaseType_t xGetFreeStackSpace, 
3494:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
3495:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t *pxTCB;
3496:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
ARM GAS  /tmp/ccRhC8mT.s 			page 68


3497:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* xTask is NULL then get the state of the calling task. */
3498:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxTCB = prvGetTCBFromHandle( xTask );
3499:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3500:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxTaskStatus->xHandle = ( TaskHandle_t ) pxTCB;
3501:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxTaskStatus->pcTaskName = ( const char * ) &( pxTCB->pcTaskName [ 0 ] );
3502:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxTaskStatus->uxCurrentPriority = pxTCB->uxPriority;
3503:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxTaskStatus->pxStackBase = pxTCB->pxStack;
3504:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxTaskStatus->xTaskNumber = pxTCB->uxTCBNumber;
3505:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3506:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#if ( configUSE_MUTEXES == 1 )
3507:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3508:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxTaskStatus->uxBasePriority = pxTCB->uxBasePriority;
3509:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3510:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#else
3511:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3512:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxTaskStatus->uxBasePriority = 0;
3513:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3514:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#endif
3515:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3516:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#if ( configGENERATE_RUN_TIME_STATS == 1 )
3517:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3518:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxTaskStatus->ulRunTimeCounter = pxTCB->ulRunTimeCounter;
3519:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3520:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#else
3521:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3522:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxTaskStatus->ulRunTimeCounter = 0;
3523:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3524:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#endif
3525:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3526:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Obtaining the task state is a little fiddly, so is only done if the
3527:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		value of eState passed into this function is eInvalid - otherwise the
3528:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		state is just set to whatever is passed in. */
3529:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( eState != eInvalid )
3530:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3531:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( pxTCB == pxCurrentTCB )
3532:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
3533:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				pxTaskStatus->eCurrentState = eRunning;
3534:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
3535:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
3536:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
3537:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				pxTaskStatus->eCurrentState = eState;
3538:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3539:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				#if ( INCLUDE_vTaskSuspend == 1 )
3540:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
3541:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* If the task is in the suspended list then there is a
3542:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					chance it is actually just blocked indefinitely - so really
3543:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					it should be reported as being in the Blocked state. */
3544:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					if( eState == eSuspended )
3545:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
3546:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						vTaskSuspendAll();
3547:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						{
3548:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							if( listLIST_ITEM_CONTAINER( &( pxTCB->xEventListItem ) ) != NULL )
3549:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							{
3550:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 								pxTaskStatus->eCurrentState = eBlocked;
3551:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							}
3552:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						}
3553:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						( void ) xTaskResumeAll();
ARM GAS  /tmp/ccRhC8mT.s 			page 69


3554:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
3555:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
3556:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				#endif /* INCLUDE_vTaskSuspend */
3557:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
3558:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3559:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
3560:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3561:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxTaskStatus->eCurrentState = eTaskGetState( pxTCB );
3562:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3563:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3564:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Obtaining the stack space takes some time, so the xGetFreeStackSpace
3565:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		parameter is provided to allow it to be skipped. */
3566:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( xGetFreeStackSpace != pdFALSE )
3567:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3568:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			#if ( portSTACK_GROWTH > 0 )
3569:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
3570:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				pxTaskStatus->usStackHighWaterMark = prvTaskCheckFreeStackSpace( ( uint8_t * ) pxTCB->pxEndOfSt
3571:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
3572:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			#else
3573:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
3574:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				pxTaskStatus->usStackHighWaterMark = prvTaskCheckFreeStackSpace( ( uint8_t * ) pxTCB->pxStack )
3575:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
3576:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			#endif
3577:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3578:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
3579:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3580:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxTaskStatus->usStackHighWaterMark = 0;
3581:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3582:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
3583:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3584:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* configUSE_TRACE_FACILITY */
3585:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
3586:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3587:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( configUSE_TRACE_FACILITY == 1 )
3588:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3589:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	static UBaseType_t prvListTasksWithinSingleList( TaskStatus_t *pxTaskStatusArray, List_t *pxList, 
3590:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
3591:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	configLIST_VOLATILE TCB_t *pxNextTCB, *pxFirstTCB;
3592:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	UBaseType_t uxTask = 0;
3593:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3594:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( listCURRENT_LIST_LENGTH( pxList ) > ( UBaseType_t ) 0 )
3595:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3596:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			listGET_OWNER_OF_NEXT_ENTRY( pxFirstTCB, pxList );
3597:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3598:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Populate an TaskStatus_t structure within the
3599:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxTaskStatusArray array for each task that is referenced from
3600:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxList.  See the definition of TaskStatus_t in task.h for the
3601:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			meaning of each TaskStatus_t structure member. */
3602:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			do
3603:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
3604:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				listGET_OWNER_OF_NEXT_ENTRY( pxNextTCB, pxList );
3605:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				vTaskGetInfo( ( TaskHandle_t ) pxNextTCB, &( pxTaskStatusArray[ uxTask ] ), pdTRUE, eState );
3606:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				uxTask++;
3607:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			} while( pxNextTCB != pxFirstTCB );
3608:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3609:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
3610:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
ARM GAS  /tmp/ccRhC8mT.s 			page 70


3611:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
3612:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3613:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3614:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		return uxTask;
3615:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
3616:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3617:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* configUSE_TRACE_FACILITY */
3618:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
3619:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3620:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( ( configUSE_TRACE_FACILITY == 1 ) || ( INCLUDE_uxTaskGetStackHighWaterMark == 1 ) )
3621:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3622:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	static uint16_t prvTaskCheckFreeStackSpace( const uint8_t * pucStackByte )
3623:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
3624:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	uint32_t ulCount = 0U;
3625:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3626:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		while( *pucStackByte == ( uint8_t ) tskSTACK_FILL_BYTE )
3627:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3628:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pucStackByte -= portSTACK_GROWTH;
3629:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			ulCount++;
3630:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3631:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3632:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		ulCount /= ( uint32_t ) sizeof( StackType_t ); /*lint !e961 Casting is not redundant on smaller a
3633:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3634:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		return ( uint16_t ) ulCount;
3635:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
3636:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3637:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* ( ( configUSE_TRACE_FACILITY == 1 ) || ( INCLUDE_uxTaskGetStackHighWaterMark == 1 ) ) */
3638:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
3639:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3640:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( INCLUDE_uxTaskGetStackHighWaterMark == 1 )
3641:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3642:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	UBaseType_t uxTaskGetStackHighWaterMark( TaskHandle_t xTask )
3643:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
3644:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t *pxTCB;
3645:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	uint8_t *pucEndOfStack;
3646:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	UBaseType_t uxReturn;
3647:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3648:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxTCB = prvGetTCBFromHandle( xTask );
3649:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3650:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#if portSTACK_GROWTH < 0
3651:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3652:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pucEndOfStack = ( uint8_t * ) pxTCB->pxStack;
3653:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3654:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#else
3655:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3656:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pucEndOfStack = ( uint8_t * ) pxTCB->pxEndOfStack;
3657:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3658:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#endif
3659:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3660:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		uxReturn = ( UBaseType_t ) prvTaskCheckFreeStackSpace( pucEndOfStack );
3661:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3662:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		return uxReturn;
3663:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
3664:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3665:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* INCLUDE_uxTaskGetStackHighWaterMark */
3666:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
3667:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
ARM GAS  /tmp/ccRhC8mT.s 			page 71


3668:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( INCLUDE_vTaskDelete == 1 )
3669:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3670:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	static void prvDeleteTCB( TCB_t *pxTCB )
3671:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
3672:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* This call is required specifically for the TriCore port.  It must be
3673:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		above the vPortFree() calls.  The call is also used by ports/demos that
3674:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		want to allocate and clean RAM statically. */
3675:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		portCLEAN_UP_TCB( pxTCB );
3676:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3677:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Free up the memory allocated by the scheduler for the task.  It is up
3678:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		to the task to free any memory allocated at the application level. */
3679:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#if ( configUSE_NEWLIB_REENTRANT == 1 )
3680:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3681:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			_reclaim_reent( &( pxTCB->xNewLib_reent ) );
3682:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3683:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#endif /* configUSE_NEWLIB_REENTRANT */
3684:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3685:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#if( ( configSUPPORT_DYNAMIC_ALLOCATION == 1 ) && ( configSUPPORT_STATIC_ALLOCATION == 0 ) && ( p
3686:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3687:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* The task can only have been allocated dynamically - free both
3688:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			the stack and TCB. */
3689:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			vPortFree( pxTCB->pxStack );
3690:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			vPortFree( pxTCB );
3691:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3692:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#elif( tskSTATIC_AND_DYNAMIC_ALLOCATION_POSSIBLE != 0 ) /*lint !e731 Macro has been consolidated 
3693:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3694:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* The task could have been allocated statically or dynamically, so
3695:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			check what was statically allocated before trying to free the
3696:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			memory. */
3697:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( pxTCB->ucStaticallyAllocated == tskDYNAMICALLY_ALLOCATED_STACK_AND_TCB )
3698:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
3699:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* Both the stack and TCB were allocated dynamically, so both
3700:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				must be freed. */
3701:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				vPortFree( pxTCB->pxStack );
3702:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				vPortFree( pxTCB );
3703:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
3704:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else if( pxTCB->ucStaticallyAllocated == tskSTATICALLY_ALLOCATED_STACK_ONLY )
3705:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
3706:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* Only the stack was statically allocated, so the TCB is the
3707:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				only memory that must be freed. */
3708:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				vPortFree( pxTCB );
3709:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
3710:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
3711:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
3712:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* Neither the stack nor the TCB were allocated dynamically, so
3713:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				nothing needs to be freed. */
3714:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				configASSERT( pxTCB->ucStaticallyAllocated == tskSTATICALLY_ALLOCATED_STACK_AND_TCB	);
3715:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
3716:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
3717:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3718:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#endif /* configSUPPORT_DYNAMIC_ALLOCATION */
3719:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
3720:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3721:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* INCLUDE_vTaskDelete */
3722:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
3723:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3724:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** static void prvResetNextTaskUnblockTime( void )
ARM GAS  /tmp/ccRhC8mT.s 			page 72


3725:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** {
 123              		.loc 1 3725 1 is_stmt 1 view -0
 124              		.cfi_startproc
 125              		@ args = 0, pretend = 0, frame = 0
 126              		@ frame_needed = 0, uses_anonymous_args = 0
 127              		@ link register save eliminated.
3726:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** TCB_t *pxTCB;
 128              		.loc 1 3726 1 view .LVU30
3727:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3728:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
 129              		.loc 1 3728 2 view .LVU31
 130              		.loc 1 3728 6 is_stmt 0 view .LVU32
 131 0000 084B     		ldr	r3, .L15
 132 0002 1B68     		ldr	r3, [r3]
 133 0004 1B68     		ldr	r3, [r3]
 134              		.loc 1 3728 45 view .LVU33
 135 0006 23B9     		cbnz	r3, .L13
3729:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
3730:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* The new current delayed list is empty.  Set xNextTaskUnblockTime to
3731:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		the maximum possible value so it is	extremely unlikely that the
3732:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( xTickCount >= xNextTaskUnblockTime ) test will pass until
3733:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		there is an item in the delayed list. */
3734:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		xNextTaskUnblockTime = portMAX_DELAY;
 136              		.loc 1 3734 3 is_stmt 1 view .LVU34
 137              		.loc 1 3734 24 is_stmt 0 view .LVU35
 138 0008 074B     		ldr	r3, .L15+4
 139 000a 4FF0FF32 		mov	r2, #-1
 140 000e 1A60     		str	r2, [r3]
 141 0010 7047     		bx	lr
 142              	.L13:
3735:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
3736:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	else
3737:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
3738:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* The new current delayed list is not empty, get the value of
3739:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		the item at the head of the delayed list.  This is the time at
3740:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		which the task at the head of the delayed list should be removed
3741:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		from the Blocked state. */
3742:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		( pxTCB ) = ( TCB_t * ) listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList );
 143              		.loc 1 3742 3 is_stmt 1 view .LVU36
 144              		.loc 1 3742 27 is_stmt 0 view .LVU37
 145 0012 044B     		ldr	r3, .L15
 146 0014 1B68     		ldr	r3, [r3]
 147 0016 DB68     		ldr	r3, [r3, #12]
 148              		.loc 1 3742 13 view .LVU38
 149 0018 DB68     		ldr	r3, [r3, #12]
 150              	.LVL8:
3743:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		xNextTaskUnblockTime = listGET_LIST_ITEM_VALUE( &( ( pxTCB )->xStateListItem ) );
 151              		.loc 1 3743 3 is_stmt 1 view .LVU39
 152              		.loc 1 3743 26 is_stmt 0 view .LVU40
 153 001a 5A68     		ldr	r2, [r3, #4]
 154              		.loc 1 3743 24 view .LVU41
 155 001c 024B     		ldr	r3, .L15+4
 156              	.LVL9:
 157              		.loc 1 3743 24 view .LVU42
 158 001e 1A60     		str	r2, [r3]
3744:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
3745:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
ARM GAS  /tmp/ccRhC8mT.s 			page 73


 159              		.loc 1 3745 1 view .LVU43
 160 0020 7047     		bx	lr
 161              	.L16:
 162 0022 00BF     		.align	2
 163              	.L15:
 164 0024 00000000 		.word	pxDelayedTaskList
 165 0028 00000000 		.word	xNextTaskUnblockTime
 166              		.cfi_endproc
 167              	.LFE40:
 169              		.section	.text.prvInitialiseNewTask,"ax",%progbits
 170              		.align	1
 171              		.syntax unified
 172              		.thumb
 173              		.thumb_func
 175              	prvInitialiseNewTask:
 176              	.LVL10:
 177              	.LFB7:
 825:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** StackType_t *pxTopOfStack;
 178              		.loc 1 825 1 is_stmt 1 view -0
 179              		.cfi_startproc
 180              		@ args = 16, pretend = 0, frame = 0
 181              		@ frame_needed = 0, uses_anonymous_args = 0
 825:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** StackType_t *pxTopOfStack;
 182              		.loc 1 825 1 is_stmt 0 view .LVU45
 183 0000 2DE9F047 		push	{r4, r5, r6, r7, r8, r9, r10, lr}
 184              	.LCFI0:
 185              		.cfi_def_cfa_offset 32
 186              		.cfi_offset 4, -32
 187              		.cfi_offset 5, -28
 188              		.cfi_offset 6, -24
 189              		.cfi_offset 7, -20
 190              		.cfi_offset 8, -16
 191              		.cfi_offset 9, -12
 192              		.cfi_offset 10, -8
 193              		.cfi_offset 14, -4
 194 0004 0746     		mov	r7, r0
 195 0006 9846     		mov	r8, r3
 196 0008 089D     		ldr	r5, [sp, #32]
 197 000a DDF82490 		ldr	r9, [sp, #36]
 198 000e 0A9C     		ldr	r4, [sp, #40]
 826:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** UBaseType_t x;
 199              		.loc 1 826 1 is_stmt 1 view .LVU46
 827:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 200              		.loc 1 827 1 view .LVU47
 857:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxTopOfStack = ( StackType_t * ) ( ( ( portPOINTER_SIZE_TYPE ) pxTopOfStack ) & ( ~( ( portPOINTE
 201              		.loc 1 857 3 view .LVU48
 857:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxTopOfStack = ( StackType_t * ) ( ( ( portPOINTER_SIZE_TYPE ) pxTopOfStack ) & ( ~( ( portPOINTE
 202              		.loc 1 857 26 is_stmt 0 view .LVU49
 203 0010 266B     		ldr	r6, [r4, #48]
 857:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxTopOfStack = ( StackType_t * ) ( ( ( portPOINTER_SIZE_TYPE ) pxTopOfStack ) & ( ~( ( portPOINTE
 204              		.loc 1 857 36 view .LVU50
 205 0012 02F18042 		add	r2, r2, #1073741824
 206              	.LVL11:
 857:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxTopOfStack = ( StackType_t * ) ( ( ( portPOINTER_SIZE_TYPE ) pxTopOfStack ) & ( ~( ( portPOINTE
 207              		.loc 1 857 36 view .LVU51
 208 0016 013A     		subs	r2, r2, #1
 209              	.LVL12:
ARM GAS  /tmp/ccRhC8mT.s 			page 74


 857:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxTopOfStack = ( StackType_t * ) ( ( ( portPOINTER_SIZE_TYPE ) pxTopOfStack ) & ( ~( ( portPOINTE
 210              		.loc 1 857 16 view .LVU52
 211 0018 06EB8206 		add	r6, r6, r2, lsl #2
 212              	.LVL13:
 858:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 213              		.loc 1 858 3 is_stmt 1 view .LVU53
 858:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 214              		.loc 1 858 81 is_stmt 0 view .LVU54
 215 001c 26F00706 		bic	r6, r6, #7
 216              	.LVL14:
 861:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 217              		.loc 1 861 3 is_stmt 1 view .LVU55
 861:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 218              		.loc 1 861 124 discriminator 2 view .LVU56
 885:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 219              		.loc 1 885 2 view .LVU57
 885:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 220              		.loc 1 885 9 is_stmt 0 view .LVU58
 221 0020 4FF0000C 		mov	ip, #0
 222              	.LVL15:
 223              	.L18:
 885:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 224              		.loc 1 885 32 is_stmt 1 discriminator 1 view .LVU59
 225 0024 BCF10F0F 		cmp	ip, #15
 226 0028 09D8     		bhi	.L19
 887:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 227              		.loc 1 887 3 view .LVU60
 887:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 228              		.loc 1 887 37 is_stmt 0 view .LVU61
 229 002a 11F80C20 		ldrb	r2, [r1, ip]	@ zero_extendqisi2
 887:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 230              		.loc 1 887 29 view .LVU62
 231 002e 04EB0C03 		add	r3, r4, ip
 232 0032 83F83420 		strb	r2, [r3, #52]
 892:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 233              		.loc 1 892 3 is_stmt 1 view .LVU63
 892:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 234              		.loc 1 892 5 is_stmt 0 view .LVU64
 235 0036 12B1     		cbz	r2, .L19
 898:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 236              		.loc 1 898 28 is_stmt 1 view .LVU65
 885:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 237              		.loc 1 885 76 discriminator 2 view .LVU66
 238 0038 0CF1010C 		add	ip, ip, #1
 239              	.LVL16:
 885:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 240              		.loc 1 885 76 is_stmt 0 discriminator 2 view .LVU67
 241 003c F2E7     		b	.L18
 242              	.L19:
 904:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 243              		.loc 1 904 2 is_stmt 1 view .LVU68
 904:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 244              		.loc 1 904 54 is_stmt 0 view .LVU69
 245 003e 0023     		movs	r3, #0
 246 0040 84F84330 		strb	r3, [r4, #67]
 908:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 247              		.loc 1 908 2 is_stmt 1 view .LVU70
ARM GAS  /tmp/ccRhC8mT.s 			page 75


 908:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 248              		.loc 1 908 4 is_stmt 0 view .LVU71
 249 0044 062D     		cmp	r5, #6
 250 0046 00D9     		bls	.L21
 910:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 251              		.loc 1 910 14 view .LVU72
 252 0048 0625     		movs	r5, #6
 253              	.L21:
 254              	.LVL17:
 914:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 255              		.loc 1 914 27 is_stmt 1 view .LVU73
 917:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#if ( configUSE_MUTEXES == 1 )
 256              		.loc 1 917 2 view .LVU74
 917:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#if ( configUSE_MUTEXES == 1 )
 257              		.loc 1 917 23 is_stmt 0 view .LVU75
 258 004a E562     		str	r5, [r4, #44]
 920:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxNewTCB->uxMutexesHeld = 0;
 259              		.loc 1 920 3 is_stmt 1 view .LVU76
 920:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxNewTCB->uxMutexesHeld = 0;
 260              		.loc 1 920 28 is_stmt 0 view .LVU77
 261 004c 6564     		str	r5, [r4, #68]
 921:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 262              		.loc 1 921 3 is_stmt 1 view .LVU78
 921:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 263              		.loc 1 921 27 is_stmt 0 view .LVU79
 264 004e 4FF0000A 		mov	r10, #0
 265 0052 C4F848A0 		str	r10, [r4, #72]
 925:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	vListInitialiseItem( &( pxNewTCB->xEventListItem ) );
 266              		.loc 1 925 2 is_stmt 1 view .LVU80
 267 0056 201D     		adds	r0, r4, #4
 268              	.LVL18:
 925:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	vListInitialiseItem( &( pxNewTCB->xEventListItem ) );
 269              		.loc 1 925 2 is_stmt 0 view .LVU81
 270 0058 FFF7FEFF 		bl	vListInitialiseItem
 271              	.LVL19:
 926:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 272              		.loc 1 926 2 is_stmt 1 view .LVU82
 273 005c 04F11800 		add	r0, r4, #24
 274 0060 FFF7FEFF 		bl	vListInitialiseItem
 275              	.LVL20:
 930:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 276              		.loc 1 930 2 view .LVU83
 277 0064 2461     		str	r4, [r4, #16]
 933:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	listSET_LIST_ITEM_OWNER( &( pxNewTCB->xEventListItem ), pxNewTCB );
 278              		.loc 1 933 2 view .LVU84
 279 0066 C5F10705 		rsb	r5, r5, #7
 280              	.LVL21:
 933:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	listSET_LIST_ITEM_OWNER( &( pxNewTCB->xEventListItem ), pxNewTCB );
 281              		.loc 1 933 2 is_stmt 0 view .LVU85
 282 006a A561     		str	r5, [r4, #24]
 934:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 283              		.loc 1 934 2 is_stmt 1 view .LVU86
 284 006c 6462     		str	r4, [r4, #36]
 961:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 285              		.loc 1 961 3 view .LVU87
 976:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxNewTCB->ucNotifyState = taskNOT_WAITING_NOTIFICATION;
 286              		.loc 1 976 3 view .LVU88
ARM GAS  /tmp/ccRhC8mT.s 			page 76


 976:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxNewTCB->ucNotifyState = taskNOT_WAITING_NOTIFICATION;
 287              		.loc 1 976 29 is_stmt 0 view .LVU89
 288 006e C4F84CA0 		str	r10, [r4, #76]
 977:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 289              		.loc 1 977 3 is_stmt 1 view .LVU90
 977:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 290              		.loc 1 977 27 is_stmt 0 view .LVU91
 291 0072 84F850A0 		strb	r10, [r4, #80]
1004:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 292              		.loc 1 1004 3 is_stmt 1 view .LVU92
1004:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 293              		.loc 1 1004 28 is_stmt 0 view .LVU93
 294 0076 4246     		mov	r2, r8
 295 0078 3946     		mov	r1, r7
 296 007a 3046     		mov	r0, r6
 297 007c FFF7FEFF 		bl	pxPortInitialiseStack
 298              	.LVL22:
1004:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 299              		.loc 1 1004 26 discriminator 1 view .LVU94
 300 0080 2060     		str	r0, [r4]
1008:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 301              		.loc 1 1008 2 is_stmt 1 view .LVU95
1008:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 302              		.loc 1 1008 4 is_stmt 0 view .LVU96
 303 0082 B9F1000F 		cmp	r9, #0
 304 0086 01D0     		beq	.L17
1012:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 305              		.loc 1 1012 3 is_stmt 1 view .LVU97
1012:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 306              		.loc 1 1012 18 is_stmt 0 view .LVU98
 307 0088 C9F80040 		str	r4, [r9]
1016:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 308              		.loc 1 1016 27 is_stmt 1 view .LVU99
 309              	.L17:
1018:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
 310              		.loc 1 1018 1 is_stmt 0 view .LVU100
 311 008c BDE8F087 		pop	{r4, r5, r6, r7, r8, r9, r10, pc}
1018:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
 312              		.loc 1 1018 1 view .LVU101
 313              		.cfi_endproc
 314              	.LFE7:
 316              		.section	.text.prvInitialiseTaskLists,"ax",%progbits
 317              		.align	1
 318              		.syntax unified
 319              		.thumb
 320              		.thumb_func
 322              	prvInitialiseTaskLists:
 323              	.LFB37:
3431:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** UBaseType_t uxPriority;
 324              		.loc 1 3431 1 is_stmt 1 view -0
 325              		.cfi_startproc
 326              		@ args = 0, pretend = 0, frame = 0
 327              		@ frame_needed = 0, uses_anonymous_args = 0
 328 0000 38B5     		push	{r3, r4, r5, lr}
 329              	.LCFI1:
 330              		.cfi_def_cfa_offset 16
 331              		.cfi_offset 3, -16
ARM GAS  /tmp/ccRhC8mT.s 			page 77


 332              		.cfi_offset 4, -12
 333              		.cfi_offset 5, -8
 334              		.cfi_offset 14, -4
3432:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 335              		.loc 1 3432 1 view .LVU103
3434:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 336              		.loc 1 3434 2 view .LVU104
 337              	.LVL23:
3434:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 338              		.loc 1 3434 18 is_stmt 0 view .LVU105
 339 0002 0024     		movs	r4, #0
3434:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 340              		.loc 1 3434 2 view .LVU106
 341 0004 07E0     		b	.L26
 342              	.LVL24:
 343              	.L27:
3436:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 344              		.loc 1 3436 3 is_stmt 1 view .LVU107
 345 0006 04EB8402 		add	r2, r4, r4, lsl #2
 346 000a 9300     		lsls	r3, r2, #2
 347 000c 0E48     		ldr	r0, .L29
 348 000e 1844     		add	r0, r0, r3
 349 0010 FFF7FEFF 		bl	vListInitialise
 350              	.LVL25:
3434:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 351              		.loc 1 3434 101 discriminator 3 view .LVU108
 352 0014 0134     		adds	r4, r4, #1
 353              	.LVL26:
 354              	.L26:
3434:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 355              		.loc 1 3434 51 discriminator 1 view .LVU109
 356 0016 062C     		cmp	r4, #6
 357 0018 F5D9     		bls	.L27
3439:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	vListInitialise( &xDelayedTaskList2 );
 358              		.loc 1 3439 2 view .LVU110
 359 001a 0C4D     		ldr	r5, .L29+4
 360 001c 2846     		mov	r0, r5
 361 001e FFF7FEFF 		bl	vListInitialise
 362              	.LVL27:
3440:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	vListInitialise( &xPendingReadyList );
 363              		.loc 1 3440 2 view .LVU111
 364 0022 0B4C     		ldr	r4, .L29+8
 365              	.LVL28:
3440:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	vListInitialise( &xPendingReadyList );
 366              		.loc 1 3440 2 is_stmt 0 view .LVU112
 367 0024 2046     		mov	r0, r4
 368 0026 FFF7FEFF 		bl	vListInitialise
 369              	.LVL29:
3441:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 370              		.loc 1 3441 2 is_stmt 1 view .LVU113
 371 002a 0A48     		ldr	r0, .L29+12
 372 002c FFF7FEFF 		bl	vListInitialise
 373              	.LVL30:
3445:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 374              		.loc 1 3445 3 view .LVU114
 375 0030 0948     		ldr	r0, .L29+16
 376 0032 FFF7FEFF 		bl	vListInitialise
ARM GAS  /tmp/ccRhC8mT.s 			page 78


 377              	.LVL31:
3451:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 378              		.loc 1 3451 3 view .LVU115
 379 0036 0948     		ldr	r0, .L29+20
 380 0038 FFF7FEFF 		bl	vListInitialise
 381              	.LVL32:
3457:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	pxOverflowDelayedTaskList = &xDelayedTaskList2;
 382              		.loc 1 3457 2 view .LVU116
3457:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	pxOverflowDelayedTaskList = &xDelayedTaskList2;
 383              		.loc 1 3457 20 is_stmt 0 view .LVU117
 384 003c 084B     		ldr	r3, .L29+24
 385 003e 1D60     		str	r5, [r3]
3458:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
 386              		.loc 1 3458 2 is_stmt 1 view .LVU118
3458:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
 387              		.loc 1 3458 28 is_stmt 0 view .LVU119
 388 0040 084B     		ldr	r3, .L29+28
 389 0042 1C60     		str	r4, [r3]
3459:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
 390              		.loc 1 3459 1 view .LVU120
 391 0044 38BD     		pop	{r3, r4, r5, pc}
 392              	.L30:
 393 0046 00BF     		.align	2
 394              	.L29:
 395 0048 00000000 		.word	pxReadyTasksLists
 396 004c 00000000 		.word	xDelayedTaskList1
 397 0050 00000000 		.word	xDelayedTaskList2
 398 0054 00000000 		.word	xPendingReadyList
 399 0058 00000000 		.word	xTasksWaitingTermination
 400 005c 00000000 		.word	xSuspendedTaskList
 401 0060 00000000 		.word	pxDelayedTaskList
 402 0064 00000000 		.word	pxOverflowDelayedTaskList
 403              		.cfi_endproc
 404              	.LFE37:
 406              		.section	.text.prvAddNewTaskToReadyList,"ax",%progbits
 407              		.align	1
 408              		.syntax unified
 409              		.thumb
 410              		.thumb_func
 412              	prvAddNewTaskToReadyList:
 413              	.LVL33:
 414              	.LFB8:
1022:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* Ensure interrupts don't access the task lists while the lists are being
 415              		.loc 1 1022 1 is_stmt 1 view -0
 416              		.cfi_startproc
 417              		@ args = 0, pretend = 0, frame = 0
 418              		@ frame_needed = 0, uses_anonymous_args = 0
1022:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* Ensure interrupts don't access the task lists while the lists are being
 419              		.loc 1 1022 1 is_stmt 0 view .LVU122
 420 0000 10B5     		push	{r4, lr}
 421              	.LCFI2:
 422              		.cfi_def_cfa_offset 8
 423              		.cfi_offset 4, -8
 424              		.cfi_offset 14, -4
 425 0002 0446     		mov	r4, r0
1025:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 426              		.loc 1 1025 2 is_stmt 1 view .LVU123
ARM GAS  /tmp/ccRhC8mT.s 			page 79


 427 0004 FFF7FEFF 		bl	vPortEnterCritical
 428              	.LVL34:
1027:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( pxCurrentTCB == NULL )
 429              		.loc 1 1027 3 view .LVU124
1027:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( pxCurrentTCB == NULL )
 430              		.loc 1 1027 25 is_stmt 0 view .LVU125
 431 0008 214A     		ldr	r2, .L38
 432 000a 1368     		ldr	r3, [r2]
 433 000c 0133     		adds	r3, r3, #1
 434 000e 1360     		str	r3, [r2]
1028:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 435              		.loc 1 1028 3 is_stmt 1 view .LVU126
1028:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 436              		.loc 1 1028 20 is_stmt 0 view .LVU127
 437 0010 204B     		ldr	r3, .L38+4
 438 0012 1B68     		ldr	r3, [r3]
1028:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 439              		.loc 1 1028 5 view .LVU128
 440 0014 5BB1     		cbz	r3, .L36
1051:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 441              		.loc 1 1051 4 is_stmt 1 view .LVU129
1051:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 442              		.loc 1 1051 26 is_stmt 0 view .LVU130
 443 0016 204B     		ldr	r3, .L38+8
 444 0018 1B68     		ldr	r3, [r3]
1051:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 445              		.loc 1 1051 6 view .LVU131
 446 001a 6BB9     		cbnz	r3, .L33
1053:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 447              		.loc 1 1053 5 is_stmt 1 view .LVU132
1053:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 448              		.loc 1 1053 21 is_stmt 0 view .LVU133
 449 001c 1D4B     		ldr	r3, .L38+4
 450 001e 1B68     		ldr	r3, [r3]
 451 0020 DA6A     		ldr	r2, [r3, #44]
1053:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 452              		.loc 1 1053 45 view .LVU134
 453 0022 E36A     		ldr	r3, [r4, #44]
1053:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 454              		.loc 1 1053 7 view .LVU135
 455 0024 9A42     		cmp	r2, r3
 456 0026 07D8     		bhi	.L33
1055:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 457              		.loc 1 1055 6 is_stmt 1 view .LVU136
1055:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 458              		.loc 1 1055 19 is_stmt 0 view .LVU137
 459 0028 1A4B     		ldr	r3, .L38+4
 460 002a 1C60     		str	r4, [r3]
 461 002c 04E0     		b	.L33
 462              	.L36:
1032:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 463              		.loc 1 1032 4 is_stmt 1 view .LVU138
1032:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 464              		.loc 1 1032 17 is_stmt 0 view .LVU139
 465 002e 194B     		ldr	r3, .L38+4
 466 0030 1C60     		str	r4, [r3]
1034:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
ARM GAS  /tmp/ccRhC8mT.s 			page 80


 467              		.loc 1 1034 4 is_stmt 1 view .LVU140
1034:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 468              		.loc 1 1034 31 is_stmt 0 view .LVU141
 469 0032 1368     		ldr	r3, [r2]
1034:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 470              		.loc 1 1034 6 view .LVU142
 471 0034 012B     		cmp	r3, #1
 472 0036 28D0     		beq	.L37
 473              	.L33:
1064:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 474              		.loc 1 1064 29 is_stmt 1 view .LVU143
1068:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 475              		.loc 1 1068 3 view .LVU144
1068:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 476              		.loc 1 1068 15 is_stmt 0 view .LVU145
 477 0038 184A     		ldr	r2, .L38+12
 478 003a 1368     		ldr	r3, [r2]
 479 003c 0133     		adds	r3, r3, #1
 480 003e 1360     		str	r3, [r2]
1076:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 481              		.loc 1 1076 31 is_stmt 1 view .LVU146
1078:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 482              		.loc 1 1078 3 view .LVU147
1078:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 483              		.loc 1 1078 3 view .LVU148
 484 0040 E06A     		ldr	r0, [r4, #44]
 485 0042 0123     		movs	r3, #1
 486 0044 8340     		lsls	r3, r3, r0
 487 0046 164A     		ldr	r2, .L38+16
 488 0048 1168     		ldr	r1, [r2]
 489 004a 0B43     		orrs	r3, r3, r1
 490 004c 1360     		str	r3, [r2]
1078:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 491              		.loc 1 1078 3 view .LVU149
 492 004e 00EB8000 		add	r0, r0, r0, lsl #2
 493 0052 211D     		adds	r1, r4, #4
 494 0054 134B     		ldr	r3, .L38+20
 495 0056 03EB8000 		add	r0, r3, r0, lsl #2
 496 005a FFF7FEFF 		bl	vListInsertEnd
 497              	.LVL35:
1078:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 498              		.loc 1 1078 36 discriminator 1 view .LVU150
1080:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 499              		.loc 1 1080 3 view .LVU151
1082:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 500              		.loc 1 1082 2 view .LVU152
 501 005e FFF7FEFF 		bl	vPortExitCritical
 502              	.LVL36:
1084:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 503              		.loc 1 1084 2 view .LVU153
1084:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 504              		.loc 1 1084 24 is_stmt 0 view .LVU154
 505 0062 0D4B     		ldr	r3, .L38+8
 506 0064 1B68     		ldr	r3, [r3]
1084:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 507              		.loc 1 1084 4 view .LVU155
 508 0066 7BB1     		cbz	r3, .L31
ARM GAS  /tmp/ccRhC8mT.s 			page 81


1088:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 509              		.loc 1 1088 3 is_stmt 1 view .LVU156
1088:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 510              		.loc 1 1088 19 is_stmt 0 view .LVU157
 511 0068 0A4B     		ldr	r3, .L38+4
 512 006a 1B68     		ldr	r3, [r3]
 513 006c DA6A     		ldr	r2, [r3, #44]
1088:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 514              		.loc 1 1088 42 view .LVU158
 515 006e E36A     		ldr	r3, [r4, #44]
1088:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 516              		.loc 1 1088 5 view .LVU159
 517 0070 9A42     		cmp	r2, r3
 518 0072 09D2     		bcs	.L31
1090:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 519              		.loc 1 1090 4 is_stmt 1 view .LVU160
 520 0074 4FF0E023 		mov	r3, #-536813568
 521 0078 4FF08052 		mov	r2, #268435456
 522 007c C3F8042D 		str	r2, [r3, #3332]
1090:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 523              		.loc 1 1090 4 view .LVU161
 524              		.syntax unified
 525              	@ 1090 "Middlewares/Third_Party/FreeRTOS/Source/tasks.c" 1
 526 0080 BFF34F8F 		dsb
 527              	@ 0 "" 2
1090:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 528              		.loc 1 1090 4 view .LVU162
 529              	@ 1090 "Middlewares/Third_Party/FreeRTOS/Source/tasks.c" 1
 530 0084 BFF36F8F 		isb
 531              	@ 0 "" 2
1090:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 532              		.loc 1 1090 35 view .LVU163
1099:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 533              		.loc 1 1099 27 view .LVU164
 534              		.thumb
 535              		.syntax unified
 536              	.L31:
1101:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
 537              		.loc 1 1101 1 is_stmt 0 view .LVU165
 538 0088 10BD     		pop	{r4, pc}
 539              	.LVL37:
 540              	.L37:
1039:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 541              		.loc 1 1039 5 is_stmt 1 view .LVU166
 542 008a FFF7FEFF 		bl	prvInitialiseTaskLists
 543              	.LVL38:
 544 008e D3E7     		b	.L33
 545              	.L39:
 546              		.align	2
 547              	.L38:
 548 0090 00000000 		.word	uxCurrentNumberOfTasks
 549 0094 00000000 		.word	pxCurrentTCB
 550 0098 00000000 		.word	xSchedulerRunning
 551 009c 00000000 		.word	uxTaskNumber
 552 00a0 00000000 		.word	uxTopReadyPriority
 553 00a4 00000000 		.word	pxReadyTasksLists
 554              		.cfi_endproc
ARM GAS  /tmp/ccRhC8mT.s 			page 82


 555              	.LFE8:
 557              		.section	.text.prvDeleteTCB,"ax",%progbits
 558              		.align	1
 559              		.syntax unified
 560              		.thumb
 561              		.thumb_func
 563              	prvDeleteTCB:
 564              	.LVL39:
 565              	.LFB39:
3671:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* This call is required specifically for the TriCore port.  It must be
 566              		.loc 1 3671 2 view -0
 567              		.cfi_startproc
 568              		@ args = 0, pretend = 0, frame = 0
 569              		@ frame_needed = 0, uses_anonymous_args = 0
3671:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* This call is required specifically for the TriCore port.  It must be
 570              		.loc 1 3671 2 is_stmt 0 view .LVU168
 571 0000 10B5     		push	{r4, lr}
 572              	.LCFI3:
 573              		.cfi_def_cfa_offset 8
 574              		.cfi_offset 4, -8
 575              		.cfi_offset 14, -4
 576 0002 0446     		mov	r4, r0
3675:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 577              		.loc 1 3675 3 is_stmt 1 view .LVU169
3697:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 578              		.loc 1 3697 4 view .LVU170
3697:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 579              		.loc 1 3697 13 is_stmt 0 view .LVU171
 580 0004 90F85130 		ldrb	r3, [r0, #81]	@ zero_extendqisi2
3697:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 581              		.loc 1 3697 6 view .LVU172
 582 0008 63B1     		cbz	r3, .L46
3704:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 583              		.loc 1 3704 9 is_stmt 1 view .LVU173
3704:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 584              		.loc 1 3704 11 is_stmt 0 view .LVU174
 585 000a 012B     		cmp	r3, #1
 586 000c 11D0     		beq	.L47
3714:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
 587              		.loc 1 3714 5 is_stmt 1 view .LVU175
 588 000e 022B     		cmp	r3, #2
 589 0010 0ED0     		beq	.L40
3714:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
 590              		.loc 1 3714 5 discriminator 1 view .LVU176
 591              	.LBB106:
 592              	.LBI106:
 191:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** {
 593              		.loc 2 191 30 view .LVU177
 594              	.LBB107:
 193:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
 595              		.loc 2 193 1 view .LVU178
 596              		.loc 2 195 2 view .LVU179
 597              		.syntax unified
 598              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h" 1
 599 0012 4FF05003 			mov r3, #80												
 600 0016 83F31188 		msr basepri, r3											
 601 001a BFF36F8F 		isb														
ARM GAS  /tmp/ccRhC8mT.s 			page 83


 602 001e BFF34F8F 		dsb														
 603              	
 604              	@ 0 "" 2
 605              		.thumb
 606              		.syntax unified
 607              	.L44:
 608              	.LBE107:
 609              	.LBE106:
3714:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
 610              		.loc 1 3714 5 discriminator 3 view .LVU180
3714:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
 611              		.loc 1 3714 5 discriminator 3 view .LVU181
 612 0022 FEE7     		b	.L44
 613              	.L46:
3701:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				vPortFree( pxTCB );
 614              		.loc 1 3701 5 view .LVU182
 615 0024 006B     		ldr	r0, [r0, #48]
 616              	.LVL40:
3701:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				vPortFree( pxTCB );
 617              		.loc 1 3701 5 is_stmt 0 view .LVU183
 618 0026 FFF7FEFF 		bl	vPortFree
 619              	.LVL41:
3702:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 620              		.loc 1 3702 5 is_stmt 1 view .LVU184
 621 002a 2046     		mov	r0, r4
 622 002c FFF7FEFF 		bl	vPortFree
 623              	.LVL42:
 624              	.L40:
3719:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 625              		.loc 1 3719 2 is_stmt 0 view .LVU185
 626 0030 10BD     		pop	{r4, pc}
 627              	.LVL43:
 628              	.L47:
3708:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 629              		.loc 1 3708 5 is_stmt 1 view .LVU186
 630 0032 FFF7FEFF 		bl	vPortFree
 631              	.LVL44:
3708:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 632              		.loc 1 3708 5 is_stmt 0 view .LVU187
 633 0036 FBE7     		b	.L40
 634              		.cfi_endproc
 635              	.LFE39:
 637              		.section	.text.prvCheckTasksWaitingTermination,"ax",%progbits
 638              		.align	1
 639              		.syntax unified
 640              		.thumb
 641              		.thumb_func
 643              	prvCheckTasksWaitingTermination:
 644              	.LFB38:
3463:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 645              		.loc 1 3463 1 is_stmt 1 view -0
 646              		.cfi_startproc
 647              		@ args = 0, pretend = 0, frame = 0
 648              		@ frame_needed = 0, uses_anonymous_args = 0
 649              	.LBB108:
3469:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 650              		.loc 1 3469 3 view .LVU189
ARM GAS  /tmp/ccRhC8mT.s 			page 84


3473:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 651              		.loc 1 3473 3 view .LVU190
3473:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 652              		.loc 1 3473 39 view .LVU191
 653 0000 0F4B     		ldr	r3, .L55
 654 0002 1B68     		ldr	r3, [r3]
 655 0004 D3B1     		cbz	r3, .L54
 656              	.LBE108:
3463:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 657              		.loc 1 3463 1 is_stmt 0 view .LVU192
 658 0006 10B5     		push	{r4, lr}
 659              	.LCFI4:
 660              		.cfi_def_cfa_offset 8
 661              		.cfi_offset 4, -8
 662              		.cfi_offset 14, -4
 663              	.L50:
 664              	.LBB109:
3475:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 665              		.loc 1 3475 4 is_stmt 1 view .LVU193
 666 0008 FFF7FEFF 		bl	vPortEnterCritical
 667              	.LVL45:
3477:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				( void ) uxListRemove( &( pxTCB->xStateListItem ) );
 668              		.loc 1 3477 5 view .LVU194
3477:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				( void ) uxListRemove( &( pxTCB->xStateListItem ) );
 669              		.loc 1 3477 25 is_stmt 0 view .LVU195
 670 000c 0D4B     		ldr	r3, .L55+4
 671 000e DB68     		ldr	r3, [r3, #12]
3477:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				( void ) uxListRemove( &( pxTCB->xStateListItem ) );
 672              		.loc 1 3477 11 view .LVU196
 673 0010 DC68     		ldr	r4, [r3, #12]
 674              	.LVL46:
3478:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				--uxCurrentNumberOfTasks;
 675              		.loc 1 3478 5 is_stmt 1 view .LVU197
3478:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				--uxCurrentNumberOfTasks;
 676              		.loc 1 3478 14 is_stmt 0 view .LVU198
 677 0012 201D     		adds	r0, r4, #4
 678 0014 FFF7FEFF 		bl	uxListRemove
 679              	.LVL47:
3479:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				--uxDeletedTasksWaitingCleanUp;
 680              		.loc 1 3479 5 is_stmt 1 view .LVU199
 681 0018 0B4A     		ldr	r2, .L55+8
 682 001a 1368     		ldr	r3, [r2]
 683 001c 013B     		subs	r3, r3, #1
 684 001e 1360     		str	r3, [r2]
3480:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 685              		.loc 1 3480 5 view .LVU200
 686 0020 074A     		ldr	r2, .L55
 687 0022 1368     		ldr	r3, [r2]
 688 0024 013B     		subs	r3, r3, #1
 689 0026 1360     		str	r3, [r2]
3482:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 690              		.loc 1 3482 4 view .LVU201
 691 0028 FFF7FEFF 		bl	vPortExitCritical
 692              	.LVL48:
3484:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 693              		.loc 1 3484 4 view .LVU202
 694 002c 2046     		mov	r0, r4
ARM GAS  /tmp/ccRhC8mT.s 			page 85


 695 002e FFF7FEFF 		bl	prvDeleteTCB
 696              	.LVL49:
3473:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 697              		.loc 1 3473 39 view .LVU203
 698 0032 034B     		ldr	r3, .L55
 699 0034 1B68     		ldr	r3, [r3]
 700 0036 002B     		cmp	r3, #0
 701 0038 E6D1     		bne	.L50
 702              	.LBE109:
3488:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
 703              		.loc 1 3488 1 is_stmt 0 view .LVU204
 704 003a 10BD     		pop	{r4, pc}
 705              	.LVL50:
 706              	.L54:
 707              	.LCFI5:
 708              		.cfi_def_cfa_offset 0
 709              		.cfi_restore 4
 710              		.cfi_restore 14
3488:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
 711              		.loc 1 3488 1 view .LVU205
 712 003c 7047     		bx	lr
 713              	.L56:
 714 003e 00BF     		.align	2
 715              	.L55:
 716 0040 00000000 		.word	uxDeletedTasksWaitingCleanUp
 717 0044 00000000 		.word	xTasksWaitingTermination
 718 0048 00000000 		.word	uxCurrentNumberOfTasks
 719              		.cfi_endproc
 720              	.LFE38:
 722              		.section	.text.prvIdleTask,"ax",%progbits
 723              		.align	1
 724              		.syntax unified
 725              		.thumb
 726              		.thumb_func
 728              	prvIdleTask:
 729              	.LFB36:
3219:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* Stop warnings. */
 730              		.loc 1 3219 1 is_stmt 1 view -0
 731              		.cfi_startproc
 732              		@ Volatile: function does not return.
 733              		@ args = 0, pretend = 0, frame = 0
 734              		@ frame_needed = 0, uses_anonymous_args = 0
 735              	.LVL51:
3219:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* Stop warnings. */
 736              		.loc 1 3219 1 is_stmt 0 view .LVU207
 737 0000 08B5     		push	{r3, lr}
 738              	.LCFI6:
 739              		.cfi_def_cfa_offset 8
 740              		.cfi_offset 3, -8
 741              		.cfi_offset 14, -4
 742              	.LVL52:
 743              	.L58:
3221:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 744              		.loc 1 3221 2 is_stmt 1 view .LVU208
3229:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 745              		.loc 1 3229 35 view .LVU209
3231:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
ARM GAS  /tmp/ccRhC8mT.s 			page 86


 746              		.loc 1 3231 2 view .LVU210
3235:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 747              		.loc 1 3235 3 view .LVU211
 748 0002 FFF7FEFF 		bl	prvCheckTasksWaitingTermination
 749              	.LVL53:
3258:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 750              		.loc 1 3258 4 view .LVU212
3258:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 751              		.loc 1 3258 8 is_stmt 0 view .LVU213
 752 0006 074B     		ldr	r3, .L61
 753 0008 1B68     		ldr	r3, [r3]
3258:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 754              		.loc 1 3258 6 view .LVU214
 755 000a 012B     		cmp	r3, #1
 756 000c F9D9     		bls	.L58
3260:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 757              		.loc 1 3260 5 is_stmt 1 view .LVU215
 758 000e 4FF0E023 		mov	r3, #-536813568
 759 0012 4FF08052 		mov	r2, #268435456
 760 0016 C3F8042D 		str	r2, [r3, #3332]
3260:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 761              		.loc 1 3260 5 view .LVU216
 762              		.syntax unified
 763              	@ 3260 "Middlewares/Third_Party/FreeRTOS/Source/tasks.c" 1
 764 001a BFF34F8F 		dsb
 765              	@ 0 "" 2
3260:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 766              		.loc 1 3260 5 view .LVU217
 767              	@ 3260 "Middlewares/Third_Party/FreeRTOS/Source/tasks.c" 1
 768 001e BFF36F8F 		isb
 769              	@ 0 "" 2
3260:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 770              		.loc 1 3260 16 view .LVU218
 771              		.thumb
 772              		.syntax unified
 773 0022 EEE7     		b	.L58
 774              	.L62:
 775              		.align	2
 776              	.L61:
 777 0024 00000000 		.word	pxReadyTasksLists
 778              		.cfi_endproc
 779              	.LFE36:
 781              		.section	.text.prvAddCurrentTaskToDelayedList,"ax",%progbits
 782              		.align	1
 783              		.syntax unified
 784              		.thumb
 785              		.thumb_func
 787              	prvAddCurrentTaskToDelayedList:
 788              	.LVL54:
 789              	.LFB54:
3746:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
3747:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3748:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( ( INCLUDE_xTaskGetCurrentTaskHandle == 1 ) || ( configUSE_MUTEXES == 1 ) )
3749:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3750:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TaskHandle_t xTaskGetCurrentTaskHandle( void )
3751:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
3752:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TaskHandle_t xReturn;
ARM GAS  /tmp/ccRhC8mT.s 			page 87


3753:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3754:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* A critical section is not required as this is not called from
3755:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		an interrupt and the current TCB will always be the same for any
3756:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		individual execution thread. */
3757:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		xReturn = pxCurrentTCB;
3758:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3759:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		return xReturn;
3760:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
3761:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3762:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* ( ( INCLUDE_xTaskGetCurrentTaskHandle == 1 ) || ( configUSE_MUTEXES == 1 ) ) */
3763:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
3764:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3765:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( ( INCLUDE_xTaskGetSchedulerState == 1 ) || ( configUSE_TIMERS == 1 ) )
3766:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3767:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xTaskGetSchedulerState( void )
3768:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
3769:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xReturn;
3770:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3771:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( xSchedulerRunning == pdFALSE )
3772:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3773:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			xReturn = taskSCHEDULER_NOT_STARTED;
3774:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3775:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
3776:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3777:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
3778:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
3779:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				xReturn = taskSCHEDULER_RUNNING;
3780:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
3781:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
3782:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
3783:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				xReturn = taskSCHEDULER_SUSPENDED;
3784:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
3785:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3786:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3787:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		return xReturn;
3788:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
3789:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3790:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* ( ( INCLUDE_xTaskGetSchedulerState == 1 ) || ( configUSE_TIMERS == 1 ) ) */
3791:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
3792:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3793:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( configUSE_MUTEXES == 1 )
3794:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3795:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xTaskPriorityInherit( TaskHandle_t const pxMutexHolder )
3796:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
3797:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t * const pxMutexHolderTCB = ( TCB_t * ) pxMutexHolder;
3798:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xReturn = pdFALSE;
3799:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3800:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* If the mutex was given back by an interrupt while the queue was
3801:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		locked then the mutex holder might now be NULL.  _RB_ Is this still
3802:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		needed as interrupts can no longer use mutexes? */
3803:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( pxMutexHolder != NULL )
3804:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3805:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* If the holder of the mutex has a priority below the priority of
3806:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			the task attempting to obtain the mutex then it will temporarily
3807:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			inherit the priority of the task attempting to obtain the mutex. */
3808:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( pxMutexHolderTCB->uxPriority < pxCurrentTCB->uxPriority )
3809:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
ARM GAS  /tmp/ccRhC8mT.s 			page 88


3810:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* Adjust the mutex holder state to account for its new
3811:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				priority.  Only reset the event list item value if the value is
3812:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				not being used for anything else. */
3813:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				if( ( listGET_LIST_ITEM_VALUE( &( pxMutexHolderTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_VA
3814:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
3815:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					listSET_LIST_ITEM_VALUE( &( pxMutexHolderTCB->xEventListItem ), ( TickType_t ) configMAX_PRIOR
3816:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
3817:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				else
3818:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
3819:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					mtCOVERAGE_TEST_MARKER();
3820:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
3821:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3822:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* If the task being modified is in the ready state it will need
3823:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				to be moved into a new list. */
3824:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ pxMutexHolderTCB->uxPriority ] ), &( pxMutex
3825:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
3826:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					if( uxListRemove( &( pxMutexHolderTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
3827:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
3828:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						taskRESET_READY_PRIORITY( pxMutexHolderTCB->uxPriority );
3829:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
3830:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					else
3831:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
3832:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						mtCOVERAGE_TEST_MARKER();
3833:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
3834:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3835:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* Inherit the priority before being moved into the new list. */
3836:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
3837:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					prvAddTaskToReadyList( pxMutexHolderTCB );
3838:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
3839:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				else
3840:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
3841:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* Just inherit the priority. */
3842:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
3843:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
3844:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3845:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				traceTASK_PRIORITY_INHERIT( pxMutexHolderTCB, pxCurrentTCB->uxPriority );
3846:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3847:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* Inheritance occurred. */
3848:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				xReturn = pdTRUE;
3849:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
3850:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
3851:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
3852:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				if( pxMutexHolderTCB->uxBasePriority < pxCurrentTCB->uxPriority )
3853:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
3854:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* The base priority of the mutex holder is lower than the
3855:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					priority of the task attempting to take the mutex, but the
3856:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					current priority of the mutex holder is not lower than the
3857:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					priority of the task attempting to take the mutex.
3858:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					Therefore the mutex holder must have already inherited a
3859:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					priority, but inheritance would have occurred if that had
3860:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					not been the case. */
3861:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					xReturn = pdTRUE;
3862:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
3863:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				else
3864:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
3865:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					mtCOVERAGE_TEST_MARKER();
3866:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
ARM GAS  /tmp/ccRhC8mT.s 			page 89


3867:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
3868:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3869:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
3870:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3871:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
3872:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3873:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3874:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		return xReturn;
3875:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
3876:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3877:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* configUSE_MUTEXES */
3878:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
3879:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3880:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( configUSE_MUTEXES == 1 )
3881:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3882:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xTaskPriorityDisinherit( TaskHandle_t const pxMutexHolder )
3883:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
3884:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t * const pxTCB = ( TCB_t * ) pxMutexHolder;
3885:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xReturn = pdFALSE;
3886:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3887:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( pxMutexHolder != NULL )
3888:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3889:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* A task can only have an inherited priority if it holds the mutex.
3890:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			If the mutex is held by a task then it cannot be given from an
3891:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			interrupt, and if a mutex is given by the holding task then it must
3892:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			be the running state task. */
3893:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			configASSERT( pxTCB == pxCurrentTCB );
3894:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			configASSERT( pxTCB->uxMutexesHeld );
3895:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			( pxTCB->uxMutexesHeld )--;
3896:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3897:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Has the holder of the mutex inherited the priority of another
3898:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			task? */
3899:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( pxTCB->uxPriority != pxTCB->uxBasePriority )
3900:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
3901:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* Only disinherit if no other mutexes are held. */
3902:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				if( pxTCB->uxMutexesHeld == ( UBaseType_t ) 0 )
3903:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
3904:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* A task can only have an inherited priority if it holds
3905:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					the mutex.  If the mutex is held by a task then it cannot be
3906:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					given from an interrupt, and if a mutex is given by the
3907:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					holding task then it must be the running state task.  Remove
3908:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					the holding task from the ready list. */
3909:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					if( uxListRemove( &( pxTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
3910:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
3911:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						taskRESET_READY_PRIORITY( pxTCB->uxPriority );
3912:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
3913:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					else
3914:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
3915:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						mtCOVERAGE_TEST_MARKER();
3916:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
3917:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3918:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* Disinherit the priority before adding the task into the
3919:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					new	ready list. */
3920:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					traceTASK_PRIORITY_DISINHERIT( pxTCB, pxTCB->uxBasePriority );
3921:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					pxTCB->uxPriority = pxTCB->uxBasePriority;
3922:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3923:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* Reset the event list item value.  It cannot be in use for
ARM GAS  /tmp/ccRhC8mT.s 			page 90


3924:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					any other purpose if this task is running, and it must be
3925:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					running to give back the mutex. */
3926:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					listSET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( T
3927:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					prvAddTaskToReadyList( pxTCB );
3928:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3929:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* Return true to indicate that a context switch is required.
3930:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					This is only actually required in the corner case whereby
3931:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					multiple mutexes were held and the mutexes were given back
3932:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					in an order different to that in which they were taken.
3933:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					If a context switch did not occur when the first mutex was
3934:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					returned, even if a task was waiting on it, then a context
3935:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					switch should occur when the last mutex is returned whether
3936:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					a task is waiting on it or not. */
3937:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					xReturn = pdTRUE;
3938:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
3939:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				else
3940:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
3941:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					mtCOVERAGE_TEST_MARKER();
3942:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
3943:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
3944:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
3945:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
3946:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
3947:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
3948:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3949:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
3950:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3951:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
3952:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3953:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3954:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		return xReturn;
3955:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
3956:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3957:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* configUSE_MUTEXES */
3958:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
3959:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3960:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( configUSE_MUTEXES == 1 )
3961:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3962:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	void vTaskPriorityDisinheritAfterTimeout( TaskHandle_t const pxMutexHolder, UBaseType_t uxHighestP
3963:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
3964:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t * const pxTCB = ( TCB_t * ) pxMutexHolder;
3965:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	UBaseType_t uxPriorityUsedOnEntry, uxPriorityToUse;
3966:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	const UBaseType_t uxOnlyOneMutexHeld = ( UBaseType_t ) 1;
3967:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3968:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( pxMutexHolder != NULL )
3969:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3970:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* If pxMutexHolder is not NULL then the holder must hold at least
3971:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			one mutex. */
3972:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			configASSERT( pxTCB->uxMutexesHeld );
3973:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3974:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Determine the priority to which the priority of the task that
3975:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			holds the mutex should be set.  This will be the greater of the
3976:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			holding task's base priority and the priority of the highest
3977:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			priority task that is waiting to obtain the mutex. */
3978:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( pxTCB->uxBasePriority < uxHighestPriorityWaitingTask )
3979:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
3980:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				uxPriorityToUse = uxHighestPriorityWaitingTask;
ARM GAS  /tmp/ccRhC8mT.s 			page 91


3981:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
3982:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
3983:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
3984:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				uxPriorityToUse = pxTCB->uxBasePriority;
3985:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
3986:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3987:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Does the priority need to change? */
3988:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( pxTCB->uxPriority != uxPriorityToUse )
3989:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
3990:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* Only disinherit if no other mutexes are held.  This is a
3991:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				simplification in the priority inheritance implementation.  If
3992:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				the task that holds the mutex is also holding other mutexes then
3993:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				the other mutexes may have caused the priority inheritance. */
3994:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				if( pxTCB->uxMutexesHeld == uxOnlyOneMutexHeld )
3995:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
3996:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* If a task has timed out because it already holds the
3997:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					mutex it was trying to obtain then it cannot of inherited
3998:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					its own priority. */
3999:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					configASSERT( pxTCB != pxCurrentTCB );
4000:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4001:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* Disinherit the priority, remembering the previous
4002:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					priority to facilitate determining the subject task's
4003:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					state. */
4004:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					traceTASK_PRIORITY_DISINHERIT( pxTCB, pxTCB->uxBasePriority );
4005:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					uxPriorityUsedOnEntry = pxTCB->uxPriority;
4006:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					pxTCB->uxPriority = uxPriorityToUse;
4007:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4008:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* Only reset the event list item value if the value is not
4009:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					being used for anything else. */
4010:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					if( ( listGET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_VALUE_IN_USE
4011:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
4012:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						listSET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( 
4013:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
4014:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					else
4015:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
4016:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						mtCOVERAGE_TEST_MARKER();
4017:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
4018:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4019:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* If the running task is not the task that holds the mutex
4020:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					then the task that holds the mutex could be in either the
4021:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					Ready, Blocked or Suspended states.  Only remove the task
4022:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					from its current state list if it is in the Ready state as
4023:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					the task's priority is going to change and there is one
4024:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					Ready list per priority. */
4025:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ uxPriorityUsedOnEntry ] ), &( pxTCB->xState
4026:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
4027:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						if( uxListRemove( &( pxTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
4028:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						{
4029:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							taskRESET_READY_PRIORITY( pxTCB->uxPriority );
4030:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						}
4031:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						else
4032:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						{
4033:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							mtCOVERAGE_TEST_MARKER();
4034:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						}
4035:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4036:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						prvAddTaskToReadyList( pxTCB );
4037:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
ARM GAS  /tmp/ccRhC8mT.s 			page 92


4038:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					else
4039:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
4040:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						mtCOVERAGE_TEST_MARKER();
4041:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
4042:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
4043:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				else
4044:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
4045:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					mtCOVERAGE_TEST_MARKER();
4046:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
4047:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
4048:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
4049:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
4050:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
4051:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
4052:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
4053:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
4054:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
4055:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
4056:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
4057:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
4058:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4059:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* configUSE_MUTEXES */
4060:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
4061:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4062:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( portCRITICAL_NESTING_IN_TCB == 1 )
4063:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4064:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	void vTaskEnterCritical( void )
4065:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
4066:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		portDISABLE_INTERRUPTS();
4067:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4068:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( xSchedulerRunning != pdFALSE )
4069:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
4070:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			( pxCurrentTCB->uxCriticalNesting )++;
4071:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4072:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* This is not the interrupt safe version of the enter critical
4073:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			function so	assert() if it is being called from an interrupt
4074:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			context.  Only API functions that end in "FromISR" can be used in an
4075:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			interrupt.  Only assert if the critical nesting count is 1 to
4076:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			protect against recursive calls if the assert function also uses a
4077:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			critical section. */
4078:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( pxCurrentTCB->uxCriticalNesting == 1 )
4079:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
4080:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				portASSERT_IF_IN_ISR();
4081:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
4082:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
4083:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
4084:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
4085:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
4086:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
4087:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
4088:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4089:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* portCRITICAL_NESTING_IN_TCB */
4090:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
4091:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4092:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( portCRITICAL_NESTING_IN_TCB == 1 )
4093:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4094:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	void vTaskExitCritical( void )
ARM GAS  /tmp/ccRhC8mT.s 			page 93


4095:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
4096:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( xSchedulerRunning != pdFALSE )
4097:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
4098:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( pxCurrentTCB->uxCriticalNesting > 0U )
4099:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
4100:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				( pxCurrentTCB->uxCriticalNesting )--;
4101:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4102:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				if( pxCurrentTCB->uxCriticalNesting == 0U )
4103:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
4104:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					portENABLE_INTERRUPTS();
4105:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
4106:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				else
4107:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
4108:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					mtCOVERAGE_TEST_MARKER();
4109:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
4110:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
4111:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
4112:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
4113:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
4114:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
4115:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
4116:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
4117:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
4118:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
4119:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
4120:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
4121:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4122:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* portCRITICAL_NESTING_IN_TCB */
4123:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
4124:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4125:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( ( configUSE_TRACE_FACILITY == 1 ) && ( configUSE_STATS_FORMATTING_FUNCTIONS > 0 ) )
4126:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4127:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	static char *prvWriteNameToBuffer( char *pcBuffer, const char *pcTaskName )
4128:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
4129:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	size_t x;
4130:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4131:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Start by copying the entire string. */
4132:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		strcpy( pcBuffer, pcTaskName );
4133:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4134:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Pad the end of the string with spaces to ensure columns line up when
4135:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		printed out. */
4136:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		for( x = strlen( pcBuffer ); x < ( size_t ) ( configMAX_TASK_NAME_LEN - 1 ); x++ )
4137:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
4138:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pcBuffer[ x ] = ' ';
4139:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
4140:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4141:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Terminate. */
4142:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pcBuffer[ x ] = 0x00;
4143:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4144:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Return the new end of string. */
4145:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		return &( pcBuffer[ x ] );
4146:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
4147:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4148:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* ( configUSE_TRACE_FACILITY == 1 ) && ( configUSE_STATS_FORMATTING_FUNCTIONS > 0 ) */
4149:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
4150:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4151:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( ( configUSE_TRACE_FACILITY == 1 ) && ( configUSE_STATS_FORMATTING_FUNCTIONS > 0 ) && ( config
ARM GAS  /tmp/ccRhC8mT.s 			page 94


4152:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4153:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	void vTaskList( char * pcWriteBuffer )
4154:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
4155:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TaskStatus_t *pxTaskStatusArray;
4156:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	volatile UBaseType_t uxArraySize, x;
4157:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	char cStatus;
4158:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4159:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/*
4160:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 * PLEASE NOTE:
4161:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 *
4162:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 * This function is provided for convenience only, and is used by many
4163:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 * of the demo applications.  Do not consider it to be part of the
4164:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 * scheduler.
4165:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 *
4166:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 * vTaskList() calls uxTaskGetSystemState(), then formats part of the
4167:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 * uxTaskGetSystemState() output into a human readable table that
4168:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 * displays task names, states and stack usage.
4169:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 *
4170:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 * vTaskList() has a dependency on the sprintf() C library function that
4171:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 * might bloat the code size, use a lot of stack, and provide different
4172:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 * results on different platforms.  An alternative, tiny, third party,
4173:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 * and limited functionality implementation of sprintf() is provided in
4174:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 * many of the FreeRTOS/Demo sub-directories in a file called
4175:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 * printf-stdarg.c (note printf-stdarg.c does not provide a full
4176:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 * snprintf() implementation!).
4177:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 *
4178:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 * It is recommended that production systems call uxTaskGetSystemState()
4179:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 * directly to get access to raw stats data, rather than indirectly
4180:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 * through a call to vTaskList().
4181:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 */
4182:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4183:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4184:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Make sure the write buffer does not contain a string. */
4185:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		*pcWriteBuffer = 0x00;
4186:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4187:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Take a snapshot of the number of tasks in case it changes while this
4188:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		function is executing. */
4189:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		uxArraySize = uxCurrentNumberOfTasks;
4190:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4191:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Allocate an array index for each task.  NOTE!  if
4192:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		configSUPPORT_DYNAMIC_ALLOCATION is set to 0 then pvPortMalloc() will
4193:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		equate to NULL. */
4194:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxTaskStatusArray = pvPortMalloc( uxCurrentNumberOfTasks * sizeof( TaskStatus_t ) );
4195:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4196:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( pxTaskStatusArray != NULL )
4197:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
4198:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Generate the (binary) data. */
4199:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			uxArraySize = uxTaskGetSystemState( pxTaskStatusArray, uxArraySize, NULL );
4200:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4201:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Create a human readable table from the binary data. */
4202:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			for( x = 0; x < uxArraySize; x++ )
4203:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
4204:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				switch( pxTaskStatusArray[ x ].eCurrentState )
4205:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
4206:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					case eRunning:		cStatus = tskRUNNING_CHAR;
4207:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 										break;
4208:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
ARM GAS  /tmp/ccRhC8mT.s 			page 95


4209:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					case eReady:		cStatus = tskREADY_CHAR;
4210:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 										break;
4211:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4212:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					case eBlocked:		cStatus = tskBLOCKED_CHAR;
4213:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 										break;
4214:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4215:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					case eSuspended:	cStatus = tskSUSPENDED_CHAR;
4216:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 										break;
4217:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4218:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					case eDeleted:		cStatus = tskDELETED_CHAR;
4219:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 										break;
4220:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4221:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					default:			/* Should not get here, but it is included
4222:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 										to prevent static checking errors. */
4223:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 										cStatus = 0x00;
4224:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 										break;
4225:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
4226:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4227:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* Write the task name to the string, padding with spaces so it
4228:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				can be printed in tabular form more easily. */
4229:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				pcWriteBuffer = prvWriteNameToBuffer( pcWriteBuffer, pxTaskStatusArray[ x ].pcTaskName );
4230:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4231:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* Write the rest of the string. */
4232:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				sprintf( pcWriteBuffer, "\t%c\t%u\t%u\t%u\r\n", cStatus, ( unsigned int ) pxTaskStatusArray[ x 
4233:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				pcWriteBuffer += strlen( pcWriteBuffer );
4234:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
4235:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4236:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Free the array again.  NOTE!  If configSUPPORT_DYNAMIC_ALLOCATION
4237:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			is 0 then vPortFree() will be #defined to nothing. */
4238:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			vPortFree( pxTaskStatusArray );
4239:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
4240:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
4241:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
4242:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
4243:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
4244:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
4245:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4246:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* ( ( configUSE_TRACE_FACILITY == 1 ) && ( configUSE_STATS_FORMATTING_FUNCTIONS > 0 ) && ( 
4247:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*----------------------------------------------------------*/
4248:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4249:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( ( configGENERATE_RUN_TIME_STATS == 1 ) && ( configUSE_STATS_FORMATTING_FUNCTIONS > 0 ) && ( c
4250:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4251:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	void vTaskGetRunTimeStats( char *pcWriteBuffer )
4252:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
4253:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TaskStatus_t *pxTaskStatusArray;
4254:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	volatile UBaseType_t uxArraySize, x;
4255:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	uint32_t ulTotalTime, ulStatsAsPercentage;
4256:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4257:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#if( configUSE_TRACE_FACILITY != 1 )
4258:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
4259:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			#error configUSE_TRACE_FACILITY must also be set to 1 in FreeRTOSConfig.h to use vTaskGetRunTime
4260:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
4261:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#endif
4262:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4263:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/*
4264:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 * PLEASE NOTE:
4265:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 *
ARM GAS  /tmp/ccRhC8mT.s 			page 96


4266:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 * This function is provided for convenience only, and is used by many
4267:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 * of the demo applications.  Do not consider it to be part of the
4268:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 * scheduler.
4269:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 *
4270:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 * vTaskGetRunTimeStats() calls uxTaskGetSystemState(), then formats part
4271:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 * of the uxTaskGetSystemState() output into a human readable table that
4272:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 * displays the amount of time each task has spent in the Running state
4273:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 * in both absolute and percentage terms.
4274:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 *
4275:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 * vTaskGetRunTimeStats() has a dependency on the sprintf() C library
4276:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 * function that might bloat the code size, use a lot of stack, and
4277:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 * provide different results on different platforms.  An alternative,
4278:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 * tiny, third party, and limited functionality implementation of
4279:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 * sprintf() is provided in many of the FreeRTOS/Demo sub-directories in
4280:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 * a file called printf-stdarg.c (note printf-stdarg.c does not provide
4281:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 * a full snprintf() implementation!).
4282:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 *
4283:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 * It is recommended that production systems call uxTaskGetSystemState()
4284:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 * directly to get access to raw stats data, rather than indirectly
4285:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 * through a call to vTaskGetRunTimeStats().
4286:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 */
4287:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4288:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Make sure the write buffer does not contain a string. */
4289:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		*pcWriteBuffer = 0x00;
4290:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4291:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Take a snapshot of the number of tasks in case it changes while this
4292:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		function is executing. */
4293:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		uxArraySize = uxCurrentNumberOfTasks;
4294:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4295:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Allocate an array index for each task.  NOTE!  If
4296:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		configSUPPORT_DYNAMIC_ALLOCATION is set to 0 then pvPortMalloc() will
4297:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		equate to NULL. */
4298:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxTaskStatusArray = pvPortMalloc( uxCurrentNumberOfTasks * sizeof( TaskStatus_t ) );
4299:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4300:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( pxTaskStatusArray != NULL )
4301:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
4302:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Generate the (binary) data. */
4303:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			uxArraySize = uxTaskGetSystemState( pxTaskStatusArray, uxArraySize, &ulTotalTime );
4304:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4305:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* For percentage calculations. */
4306:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			ulTotalTime /= 100UL;
4307:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4308:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Avoid divide by zero errors. */
4309:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( ulTotalTime > 0 )
4310:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
4311:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* Create a human readable table from the binary data. */
4312:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				for( x = 0; x < uxArraySize; x++ )
4313:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
4314:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* What percentage of the total run time has the task used?
4315:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					This will always be rounded down to the nearest integer.
4316:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					ulTotalRunTimeDiv100 has already been divided by 100. */
4317:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					ulStatsAsPercentage = pxTaskStatusArray[ x ].ulRunTimeCounter / ulTotalTime;
4318:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4319:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* Write the task name to the string, padding with
4320:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					spaces so it can be printed in tabular form more
4321:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					easily. */
4322:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					pcWriteBuffer = prvWriteNameToBuffer( pcWriteBuffer, pxTaskStatusArray[ x ].pcTaskName );
ARM GAS  /tmp/ccRhC8mT.s 			page 97


4323:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4324:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					if( ulStatsAsPercentage > 0UL )
4325:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
4326:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						#ifdef portLU_PRINTF_SPECIFIER_REQUIRED
4327:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						{
4328:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							sprintf( pcWriteBuffer, "\t%lu\t\t%lu%%\r\n", pxTaskStatusArray[ x ].ulRunTimeCounter, ulSta
4329:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						}
4330:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						#else
4331:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						{
4332:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							/* sizeof( int ) == sizeof( long ) so a smaller
4333:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							printf() library can be used. */
4334:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							sprintf( pcWriteBuffer, "\t%u\t\t%u%%\r\n", ( unsigned int ) pxTaskStatusArray[ x ].ulRunTim
4335:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						}
4336:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						#endif
4337:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
4338:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					else
4339:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
4340:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						/* If the percentage is zero here then the task has
4341:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						consumed less than 1% of the total run time. */
4342:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						#ifdef portLU_PRINTF_SPECIFIER_REQUIRED
4343:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						{
4344:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							sprintf( pcWriteBuffer, "\t%lu\t\t<1%%\r\n", pxTaskStatusArray[ x ].ulRunTimeCounter );
4345:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						}
4346:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						#else
4347:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						{
4348:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							/* sizeof( int ) == sizeof( long ) so a smaller
4349:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							printf() library can be used. */
4350:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							sprintf( pcWriteBuffer, "\t%u\t\t<1%%\r\n", ( unsigned int ) pxTaskStatusArray[ x ].ulRunTim
4351:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						}
4352:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						#endif
4353:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
4354:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4355:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					pcWriteBuffer += strlen( pcWriteBuffer );
4356:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
4357:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
4358:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
4359:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
4360:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
4361:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
4362:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4363:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Free the array again.  NOTE!  If configSUPPORT_DYNAMIC_ALLOCATION
4364:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			is 0 then vPortFree() will be #defined to nothing. */
4365:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			vPortFree( pxTaskStatusArray );
4366:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
4367:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
4368:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
4369:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
4370:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
4371:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
4372:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4373:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* ( ( configGENERATE_RUN_TIME_STATS == 1 ) && ( configUSE_STATS_FORMATTING_FUNCTIONS > 0 ) 
4374:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
4375:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4376:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** TickType_t uxTaskResetEventItemValue( void )
4377:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** {
4378:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** TickType_t uxReturn;
4379:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
ARM GAS  /tmp/ccRhC8mT.s 			page 98


4380:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	uxReturn = listGET_LIST_ITEM_VALUE( &( pxCurrentTCB->xEventListItem ) );
4381:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4382:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* Reset the event list item to its normal value - so it can be used with
4383:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	queues and semaphores. */
4384:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	listSET_LIST_ITEM_VALUE( &( pxCurrentTCB->xEventListItem ), ( ( TickType_t ) configMAX_PRIORITIES 
4385:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4386:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	return uxReturn;
4387:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
4388:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
4389:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4390:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( configUSE_MUTEXES == 1 )
4391:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4392:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	void *pvTaskIncrementMutexHeldCount( void )
4393:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
4394:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* If xSemaphoreCreateMutex() is called before any tasks have been created
4395:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		then pxCurrentTCB will be NULL. */
4396:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( pxCurrentTCB != NULL )
4397:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
4398:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			( pxCurrentTCB->uxMutexesHeld )++;
4399:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
4400:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4401:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		return pxCurrentTCB;
4402:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
4403:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4404:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* configUSE_MUTEXES */
4405:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
4406:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4407:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if( configUSE_TASK_NOTIFICATIONS == 1 )
4408:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4409:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	uint32_t ulTaskNotifyTake( BaseType_t xClearCountOnExit, TickType_t xTicksToWait )
4410:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
4411:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	uint32_t ulReturn;
4412:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4413:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		taskENTER_CRITICAL();
4414:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
4415:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Only block if the notification count is not already non-zero. */
4416:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( pxCurrentTCB->ulNotifiedValue == 0UL )
4417:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
4418:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* Mark this task as waiting for a notification. */
4419:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				pxCurrentTCB->ucNotifyState = taskWAITING_NOTIFICATION;
4420:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4421:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				if( xTicksToWait > ( TickType_t ) 0 )
4422:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
4423:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					prvAddCurrentTaskToDelayedList( xTicksToWait, pdTRUE );
4424:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					traceTASK_NOTIFY_TAKE_BLOCK();
4425:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4426:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* All ports are written to allow a yield in a critical
4427:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					section (some will yield immediately, others wait until the
4428:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					critical section exits) - but it is not something that
4429:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					application code should ever do. */
4430:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					portYIELD_WITHIN_API();
4431:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
4432:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				else
4433:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
4434:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					mtCOVERAGE_TEST_MARKER();
4435:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
4436:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
ARM GAS  /tmp/ccRhC8mT.s 			page 99


4437:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
4438:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
4439:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
4440:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
4441:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
4442:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		taskEXIT_CRITICAL();
4443:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4444:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		taskENTER_CRITICAL();
4445:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
4446:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			traceTASK_NOTIFY_TAKE();
4447:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			ulReturn = pxCurrentTCB->ulNotifiedValue;
4448:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4449:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( ulReturn != 0UL )
4450:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
4451:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				if( xClearCountOnExit != pdFALSE )
4452:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
4453:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					pxCurrentTCB->ulNotifiedValue = 0UL;
4454:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
4455:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				else
4456:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
4457:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					pxCurrentTCB->ulNotifiedValue = ulReturn - ( uint32_t ) 1;
4458:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
4459:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
4460:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
4461:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
4462:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
4463:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
4464:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4465:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxCurrentTCB->ucNotifyState = taskNOT_WAITING_NOTIFICATION;
4466:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
4467:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		taskEXIT_CRITICAL();
4468:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4469:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		return ulReturn;
4470:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
4471:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4472:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* configUSE_TASK_NOTIFICATIONS */
4473:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
4474:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4475:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if( configUSE_TASK_NOTIFICATIONS == 1 )
4476:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4477:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xTaskNotifyWait( uint32_t ulBitsToClearOnEntry, uint32_t ulBitsToClearOnExit, uint32_t 
4478:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
4479:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xReturn;
4480:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4481:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		taskENTER_CRITICAL();
4482:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
4483:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Only block if a notification is not already pending. */
4484:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( pxCurrentTCB->ucNotifyState != taskNOTIFICATION_RECEIVED )
4485:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
4486:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* Clear bits in the task's notification value as bits may get
4487:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				set	by the notifying task or interrupt.  This can be used to
4488:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				clear the value to zero. */
4489:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				pxCurrentTCB->ulNotifiedValue &= ~ulBitsToClearOnEntry;
4490:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4491:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* Mark this task as waiting for a notification. */
4492:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				pxCurrentTCB->ucNotifyState = taskWAITING_NOTIFICATION;
4493:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
ARM GAS  /tmp/ccRhC8mT.s 			page 100


4494:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				if( xTicksToWait > ( TickType_t ) 0 )
4495:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
4496:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					prvAddCurrentTaskToDelayedList( xTicksToWait, pdTRUE );
4497:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					traceTASK_NOTIFY_WAIT_BLOCK();
4498:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4499:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* All ports are written to allow a yield in a critical
4500:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					section (some will yield immediately, others wait until the
4501:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					critical section exits) - but it is not something that
4502:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					application code should ever do. */
4503:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					portYIELD_WITHIN_API();
4504:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
4505:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				else
4506:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
4507:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					mtCOVERAGE_TEST_MARKER();
4508:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
4509:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
4510:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
4511:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
4512:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
4513:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
4514:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
4515:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		taskEXIT_CRITICAL();
4516:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4517:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		taskENTER_CRITICAL();
4518:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
4519:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			traceTASK_NOTIFY_WAIT();
4520:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4521:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( pulNotificationValue != NULL )
4522:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
4523:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* Output the current notification value, which may or may not
4524:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				have changed. */
4525:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				*pulNotificationValue = pxCurrentTCB->ulNotifiedValue;
4526:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
4527:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4528:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* If ucNotifyValue is set then either the task never entered the
4529:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			blocked state (because a notification was already pending) or the
4530:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			task unblocked because of a notification.  Otherwise the task
4531:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			unblocked because of a timeout. */
4532:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( pxCurrentTCB->ucNotifyState != taskNOTIFICATION_RECEIVED )
4533:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
4534:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* A notification was not received. */
4535:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				xReturn = pdFALSE;
4536:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
4537:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
4538:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
4539:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* A notification was already pending or a notification was
4540:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				received while the task was waiting. */
4541:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				pxCurrentTCB->ulNotifiedValue &= ~ulBitsToClearOnExit;
4542:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				xReturn = pdTRUE;
4543:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
4544:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4545:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxCurrentTCB->ucNotifyState = taskNOT_WAITING_NOTIFICATION;
4546:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
4547:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		taskEXIT_CRITICAL();
4548:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4549:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		return xReturn;
4550:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
ARM GAS  /tmp/ccRhC8mT.s 			page 101


4551:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4552:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* configUSE_TASK_NOTIFICATIONS */
4553:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
4554:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4555:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if( configUSE_TASK_NOTIFICATIONS == 1 )
4556:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4557:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xTaskGenericNotify( TaskHandle_t xTaskToNotify, uint32_t ulValue, eNotifyAction eAction
4558:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
4559:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t * pxTCB;
4560:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xReturn = pdPASS;
4561:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	uint8_t ucOriginalNotifyState;
4562:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4563:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		configASSERT( xTaskToNotify );
4564:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxTCB = ( TCB_t * ) xTaskToNotify;
4565:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4566:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		taskENTER_CRITICAL();
4567:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
4568:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( pulPreviousNotificationValue != NULL )
4569:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
4570:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				*pulPreviousNotificationValue = pxTCB->ulNotifiedValue;
4571:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
4572:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4573:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			ucOriginalNotifyState = pxTCB->ucNotifyState;
4574:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4575:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxTCB->ucNotifyState = taskNOTIFICATION_RECEIVED;
4576:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4577:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			switch( eAction )
4578:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
4579:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				case eSetBits	:
4580:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					pxTCB->ulNotifiedValue |= ulValue;
4581:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					break;
4582:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4583:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				case eIncrement	:
4584:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					( pxTCB->ulNotifiedValue )++;
4585:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					break;
4586:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4587:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				case eSetValueWithOverwrite	:
4588:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					pxTCB->ulNotifiedValue = ulValue;
4589:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					break;
4590:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4591:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				case eSetValueWithoutOverwrite :
4592:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					if( ucOriginalNotifyState != taskNOTIFICATION_RECEIVED )
4593:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
4594:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						pxTCB->ulNotifiedValue = ulValue;
4595:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
4596:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					else
4597:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
4598:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						/* The value could not be written to the task. */
4599:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						xReturn = pdFAIL;
4600:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
4601:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					break;
4602:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4603:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				case eNoAction:
4604:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* The task is being notified without its notify value being
4605:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					updated. */
4606:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					break;
4607:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
ARM GAS  /tmp/ccRhC8mT.s 			page 102


4608:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4609:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			traceTASK_NOTIFY();
4610:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4611:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* If the task is in the blocked state specifically to wait for a
4612:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			notification then unblock it now. */
4613:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( ucOriginalNotifyState == taskWAITING_NOTIFICATION )
4614:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
4615:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				( void ) uxListRemove( &( pxTCB->xStateListItem ) );
4616:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				prvAddTaskToReadyList( pxTCB );
4617:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4618:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* The task should not have been on an event list. */
4619:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				configASSERT( listLIST_ITEM_CONTAINER( &( pxTCB->xEventListItem ) ) == NULL );
4620:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4621:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				#if( configUSE_TICKLESS_IDLE != 0 )
4622:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
4623:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* If a task is blocked waiting for a notification then
4624:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					xNextTaskUnblockTime might be set to the blocked task's time
4625:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					out time.  If the task is unblocked for a reason other than
4626:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					a timeout xNextTaskUnblockTime is normally left unchanged,
4627:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					because it will automatically get reset to a new value when
4628:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					the tick count equals xNextTaskUnblockTime.  However if
4629:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					tickless idling is used it might be more important to enter
4630:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					sleep mode at the earliest possible time - so reset
4631:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					xNextTaskUnblockTime here to ensure it is updated at the
4632:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					earliest possible time. */
4633:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					prvResetNextTaskUnblockTime();
4634:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
4635:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				#endif
4636:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4637:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				if( pxTCB->uxPriority > pxCurrentTCB->uxPriority )
4638:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
4639:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* The notified task has a priority above the currently
4640:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					executing task so a yield is required. */
4641:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					taskYIELD_IF_USING_PREEMPTION();
4642:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
4643:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				else
4644:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
4645:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					mtCOVERAGE_TEST_MARKER();
4646:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
4647:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
4648:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
4649:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
4650:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
4651:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
4652:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
4653:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		taskEXIT_CRITICAL();
4654:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4655:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		return xReturn;
4656:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
4657:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4658:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* configUSE_TASK_NOTIFICATIONS */
4659:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
4660:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4661:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if( configUSE_TASK_NOTIFICATIONS == 1 )
4662:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4663:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xTaskGenericNotifyFromISR( TaskHandle_t xTaskToNotify, uint32_t ulValue, eNotifyAction 
4664:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
ARM GAS  /tmp/ccRhC8mT.s 			page 103


4665:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t * pxTCB;
4666:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	uint8_t ucOriginalNotifyState;
4667:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xReturn = pdPASS;
4668:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	UBaseType_t uxSavedInterruptStatus;
4669:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4670:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		configASSERT( xTaskToNotify );
4671:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4672:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* RTOS ports that support interrupt nesting have the concept of a
4673:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		maximum	system call (or maximum API call) interrupt priority.
4674:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		Interrupts that are	above the maximum system call priority are keep
4675:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		permanently enabled, even when the RTOS kernel is in a critical section,
4676:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		but cannot make any calls to FreeRTOS API functions.  If configASSERT()
4677:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		is defined in FreeRTOSConfig.h then
4678:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		portASSERT_IF_INTERRUPT_PRIORITY_INVALID() will result in an assertion
4679:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		failure if a FreeRTOS API function is called from an interrupt that has
4680:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		been assigned a priority above the configured maximum system call
4681:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		priority.  Only FreeRTOS functions that end in FromISR can be called
4682:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		from interrupts	that have been assigned a priority at or (logically)
4683:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		below the maximum system call interrupt priority.  FreeRTOS maintains a
4684:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		separate interrupt safe API to ensure interrupt entry is as fast and as
4685:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		simple as possible.  More information (albeit Cortex-M specific) is
4686:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		provided on the following link:
4687:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		http://www.freertos.org/RTOS-Cortex-M3-M4.html */
4688:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
4689:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4690:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxTCB = ( TCB_t * ) xTaskToNotify;
4691:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4692:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		uxSavedInterruptStatus = portSET_INTERRUPT_MASK_FROM_ISR();
4693:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
4694:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( pulPreviousNotificationValue != NULL )
4695:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
4696:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				*pulPreviousNotificationValue = pxTCB->ulNotifiedValue;
4697:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
4698:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4699:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			ucOriginalNotifyState = pxTCB->ucNotifyState;
4700:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxTCB->ucNotifyState = taskNOTIFICATION_RECEIVED;
4701:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4702:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			switch( eAction )
4703:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
4704:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				case eSetBits	:
4705:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					pxTCB->ulNotifiedValue |= ulValue;
4706:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					break;
4707:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4708:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				case eIncrement	:
4709:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					( pxTCB->ulNotifiedValue )++;
4710:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					break;
4711:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4712:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				case eSetValueWithOverwrite	:
4713:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					pxTCB->ulNotifiedValue = ulValue;
4714:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					break;
4715:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4716:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				case eSetValueWithoutOverwrite :
4717:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					if( ucOriginalNotifyState != taskNOTIFICATION_RECEIVED )
4718:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
4719:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						pxTCB->ulNotifiedValue = ulValue;
4720:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
4721:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					else
ARM GAS  /tmp/ccRhC8mT.s 			page 104


4722:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
4723:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						/* The value could not be written to the task. */
4724:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						xReturn = pdFAIL;
4725:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
4726:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					break;
4727:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4728:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				case eNoAction :
4729:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* The task is being notified without its notify value being
4730:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					updated. */
4731:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					break;
4732:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
4733:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4734:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			traceTASK_NOTIFY_FROM_ISR();
4735:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4736:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* If the task is in the blocked state specifically to wait for a
4737:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			notification then unblock it now. */
4738:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( ucOriginalNotifyState == taskWAITING_NOTIFICATION )
4739:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
4740:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* The task should not have been on an event list. */
4741:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				configASSERT( listLIST_ITEM_CONTAINER( &( pxTCB->xEventListItem ) ) == NULL );
4742:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4743:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
4744:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
4745:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
4746:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					prvAddTaskToReadyList( pxTCB );
4747:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
4748:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				else
4749:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
4750:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* The delayed and ready lists cannot be accessed, so hold
4751:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					this task pending until the scheduler is resumed. */
4752:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					vListInsertEnd( &( xPendingReadyList ), &( pxTCB->xEventListItem ) );
4753:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
4754:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4755:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				if( pxTCB->uxPriority > pxCurrentTCB->uxPriority )
4756:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
4757:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* The notified task has a priority above the currently
4758:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					executing task so a yield is required. */
4759:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					if( pxHigherPriorityTaskWoken != NULL )
4760:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
4761:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						*pxHigherPriorityTaskWoken = pdTRUE;
4762:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
4763:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					else
4764:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
4765:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						/* Mark that a yield is pending in case the user is not
4766:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						using the "xHigherPriorityTaskWoken" parameter to an ISR
4767:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						safe FreeRTOS function. */
4768:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						xYieldPending = pdTRUE;
4769:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
4770:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
4771:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				else
4772:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
4773:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					mtCOVERAGE_TEST_MARKER();
4774:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
4775:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
4776:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
4777:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		portCLEAR_INTERRUPT_MASK_FROM_ISR( uxSavedInterruptStatus );
4778:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
ARM GAS  /tmp/ccRhC8mT.s 			page 105


4779:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		return xReturn;
4780:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
4781:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4782:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* configUSE_TASK_NOTIFICATIONS */
4783:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
4784:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4785:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if( configUSE_TASK_NOTIFICATIONS == 1 )
4786:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4787:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	void vTaskNotifyGiveFromISR( TaskHandle_t xTaskToNotify, BaseType_t *pxHigherPriorityTaskWoken )
4788:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
4789:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t * pxTCB;
4790:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	uint8_t ucOriginalNotifyState;
4791:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	UBaseType_t uxSavedInterruptStatus;
4792:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4793:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		configASSERT( xTaskToNotify );
4794:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4795:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* RTOS ports that support interrupt nesting have the concept of a
4796:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		maximum	system call (or maximum API call) interrupt priority.
4797:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		Interrupts that are	above the maximum system call priority are keep
4798:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		permanently enabled, even when the RTOS kernel is in a critical section,
4799:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		but cannot make any calls to FreeRTOS API functions.  If configASSERT()
4800:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		is defined in FreeRTOSConfig.h then
4801:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		portASSERT_IF_INTERRUPT_PRIORITY_INVALID() will result in an assertion
4802:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		failure if a FreeRTOS API function is called from an interrupt that has
4803:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		been assigned a priority above the configured maximum system call
4804:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		priority.  Only FreeRTOS functions that end in FromISR can be called
4805:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		from interrupts	that have been assigned a priority at or (logically)
4806:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		below the maximum system call interrupt priority.  FreeRTOS maintains a
4807:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		separate interrupt safe API to ensure interrupt entry is as fast and as
4808:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		simple as possible.  More information (albeit Cortex-M specific) is
4809:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		provided on the following link:
4810:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		http://www.freertos.org/RTOS-Cortex-M3-M4.html */
4811:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
4812:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4813:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxTCB = ( TCB_t * ) xTaskToNotify;
4814:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4815:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		uxSavedInterruptStatus = portSET_INTERRUPT_MASK_FROM_ISR();
4816:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
4817:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			ucOriginalNotifyState = pxTCB->ucNotifyState;
4818:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxTCB->ucNotifyState = taskNOTIFICATION_RECEIVED;
4819:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4820:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* 'Giving' is equivalent to incrementing a count in a counting
4821:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			semaphore. */
4822:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			( pxTCB->ulNotifiedValue )++;
4823:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4824:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			traceTASK_NOTIFY_GIVE_FROM_ISR();
4825:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4826:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* If the task is in the blocked state specifically to wait for a
4827:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			notification then unblock it now. */
4828:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( ucOriginalNotifyState == taskWAITING_NOTIFICATION )
4829:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
4830:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* The task should not have been on an event list. */
4831:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				configASSERT( listLIST_ITEM_CONTAINER( &( pxTCB->xEventListItem ) ) == NULL );
4832:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4833:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
4834:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
4835:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
ARM GAS  /tmp/ccRhC8mT.s 			page 106


4836:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					prvAddTaskToReadyList( pxTCB );
4837:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
4838:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				else
4839:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
4840:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* The delayed and ready lists cannot be accessed, so hold
4841:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					this task pending until the scheduler is resumed. */
4842:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					vListInsertEnd( &( xPendingReadyList ), &( pxTCB->xEventListItem ) );
4843:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
4844:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4845:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				if( pxTCB->uxPriority > pxCurrentTCB->uxPriority )
4846:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
4847:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* The notified task has a priority above the currently
4848:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					executing task so a yield is required. */
4849:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					if( pxHigherPriorityTaskWoken != NULL )
4850:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
4851:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						*pxHigherPriorityTaskWoken = pdTRUE;
4852:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
4853:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					else
4854:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
4855:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						/* Mark that a yield is pending in case the user is not
4856:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						using the "xHigherPriorityTaskWoken" parameter in an ISR
4857:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						safe FreeRTOS function. */
4858:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						xYieldPending = pdTRUE;
4859:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
4860:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
4861:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				else
4862:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
4863:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					mtCOVERAGE_TEST_MARKER();
4864:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
4865:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
4866:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
4867:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		portCLEAR_INTERRUPT_MASK_FROM_ISR( uxSavedInterruptStatus );
4868:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
4869:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4870:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* configUSE_TASK_NOTIFICATIONS */
4871:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4872:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
4873:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4874:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if( configUSE_TASK_NOTIFICATIONS == 1 )
4875:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4876:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xTaskNotifyStateClear( TaskHandle_t xTask )
4877:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
4878:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t *pxTCB;
4879:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xReturn;
4880:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4881:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* If null is passed in here then it is the calling task that is having
4882:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		its notification state cleared. */
4883:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxTCB = prvGetTCBFromHandle( xTask );
4884:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4885:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		taskENTER_CRITICAL();
4886:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
4887:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( pxTCB->ucNotifyState == taskNOTIFICATION_RECEIVED )
4888:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
4889:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				pxTCB->ucNotifyState = taskNOT_WAITING_NOTIFICATION;
4890:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				xReturn = pdPASS;
4891:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
4892:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
ARM GAS  /tmp/ccRhC8mT.s 			page 107


4893:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
4894:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				xReturn = pdFAIL;
4895:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
4896:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
4897:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		taskEXIT_CRITICAL();
4898:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4899:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		return xReturn;
4900:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
4901:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4902:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* configUSE_TASK_NOTIFICATIONS */
4903:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
4904:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4905:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4906:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** static void prvAddCurrentTaskToDelayedList( TickType_t xTicksToWait, const BaseType_t xCanBlockInde
4907:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** {
 790              		.loc 1 4907 1 view -0
 791              		.cfi_startproc
 792              		@ args = 0, pretend = 0, frame = 0
 793              		@ frame_needed = 0, uses_anonymous_args = 0
 794              		.loc 1 4907 1 is_stmt 0 view .LVU220
 795 0000 70B5     		push	{r4, r5, r6, lr}
 796              	.LCFI7:
 797              		.cfi_def_cfa_offset 16
 798              		.cfi_offset 4, -16
 799              		.cfi_offset 5, -12
 800              		.cfi_offset 6, -8
 801              		.cfi_offset 14, -4
 802 0002 0446     		mov	r4, r0
 803 0004 0D46     		mov	r5, r1
4908:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** TickType_t xTimeToWake;
 804              		.loc 1 4908 1 is_stmt 1 view .LVU221
4909:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** const TickType_t xConstTickCount = xTickCount;
 805              		.loc 1 4909 1 view .LVU222
 806              		.loc 1 4909 18 is_stmt 0 view .LVU223
 807 0006 1D4B     		ldr	r3, .L70
 808 0008 1E68     		ldr	r6, [r3]
 809              	.LVL55:
4910:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4911:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#if( INCLUDE_xTaskAbortDelay == 1 )
4912:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
4913:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* About to enter a delayed list, so ensure the ucDelayAborted flag is
4914:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		reset to pdFALSE so it can be detected as having been set to pdTRUE
4915:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		when the task leaves the Blocked state. */
4916:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxCurrentTCB->ucDelayAborted = pdFALSE;
4917:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
4918:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#endif
4919:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4920:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* Remove the task from the ready list before adding it to the blocked list
4921:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	as the same list item is used for both lists. */
4922:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	if( uxListRemove( &( pxCurrentTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 810              		.loc 1 4922 2 is_stmt 1 view .LVU224
 811              		.loc 1 4922 35 is_stmt 0 view .LVU225
 812 000a 1D4B     		ldr	r3, .L70+4
 813 000c 1868     		ldr	r0, [r3]
 814              	.LVL56:
 815              		.loc 1 4922 6 view .LVU226
 816 000e 0430     		adds	r0, r0, #4
ARM GAS  /tmp/ccRhC8mT.s 			page 108


 817 0010 FFF7FEFF 		bl	uxListRemove
 818              	.LVL57:
 819              		.loc 1 4922 4 discriminator 1 view .LVU227
 820 0014 48B9     		cbnz	r0, .L64
4923:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
4924:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* The current task must be in a ready list, so there is no need to
4925:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		check, and the port reset macro can be called directly. */
4926:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		portRESET_READY_PRIORITY( pxCurrentTCB->uxPriority, uxTopReadyPriority );
 821              		.loc 1 4926 3 is_stmt 1 view .LVU228
 822 0016 1A4B     		ldr	r3, .L70+4
 823 0018 1B68     		ldr	r3, [r3]
 824 001a DB6A     		ldr	r3, [r3, #44]
 825 001c 0122     		movs	r2, #1
 826 001e 9A40     		lsls	r2, r2, r3
 827 0020 1849     		ldr	r1, .L70+8
 828 0022 0B68     		ldr	r3, [r1]
 829 0024 23EA0203 		bic	r3, r3, r2
 830 0028 0B60     		str	r3, [r1]
 831              	.L64:
4927:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
4928:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	else
4929:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
4930:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		mtCOVERAGE_TEST_MARKER();
 832              		.loc 1 4930 27 view .LVU229
4931:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
4932:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4933:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#if ( INCLUDE_vTaskSuspend == 1 )
4934:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
4935:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( ( xTicksToWait == portMAX_DELAY ) && ( xCanBlockIndefinitely != pdFALSE ) )
 833              		.loc 1 4935 3 view .LVU230
 834              		.loc 1 4935 5 is_stmt 0 view .LVU231
 835 002a B4F1FF3F 		cmp	r4, #-1
 836 002e 0DD0     		beq	.L69
 837              	.L65:
4936:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
4937:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Add the task to the suspended task list instead of a delayed task
4938:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			list to ensure it is not woken by a timing event.  It will block
4939:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			indefinitely. */
4940:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			vListInsertEnd( &xSuspendedTaskList, &( pxCurrentTCB->xStateListItem ) );
4941:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
4942:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
4943:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
4944:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Calculate the time at which the task should be woken if the event
4945:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			does not occur.  This may overflow but this doesn't matter, the
4946:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			kernel will manage it correctly. */
4947:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			xTimeToWake = xConstTickCount + xTicksToWait;
 838              		.loc 1 4947 4 is_stmt 1 view .LVU232
 839              		.loc 1 4947 16 is_stmt 0 view .LVU233
 840 0030 3444     		add	r4, r4, r6
 841              	.LVL58:
4948:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4949:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* The list item will be inserted in wake time order. */
4950:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			listSET_LIST_ITEM_VALUE( &( pxCurrentTCB->xStateListItem ), xTimeToWake );
 842              		.loc 1 4950 4 is_stmt 1 view .LVU234
 843 0032 134B     		ldr	r3, .L70+4
 844 0034 1B68     		ldr	r3, [r3]
 845 0036 5C60     		str	r4, [r3, #4]
ARM GAS  /tmp/ccRhC8mT.s 			page 109


4951:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4952:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( xTimeToWake < xConstTickCount )
 846              		.loc 1 4952 4 view .LVU235
 847              		.loc 1 4952 6 is_stmt 0 view .LVU236
 848 0038 A642     		cmp	r6, r4
 849 003a 10D9     		bls	.L67
4953:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
4954:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* Wake time has overflowed.  Place this item in the overflow
4955:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				list. */
4956:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				vListInsert( pxOverflowDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
 850              		.loc 1 4956 5 is_stmt 1 view .LVU237
 851 003c 124B     		ldr	r3, .L70+12
 852 003e 1868     		ldr	r0, [r3]
 853              		.loc 1 4956 60 is_stmt 0 view .LVU238
 854 0040 0F4B     		ldr	r3, .L70+4
 855 0042 1968     		ldr	r1, [r3]
 856              		.loc 1 4956 5 view .LVU239
 857 0044 0431     		adds	r1, r1, #4
 858 0046 FFF7FEFF 		bl	vListInsert
 859              	.LVL59:
 860              	.L63:
4957:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
4958:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
4959:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
4960:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* The wake time has not overflowed, so the current block list
4961:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				is used. */
4962:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				vListInsert( pxDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
4963:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4964:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* If the task entering the blocked state was placed at the
4965:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				head of the list of blocked tasks then xNextTaskUnblockTime
4966:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				needs to be updated too. */
4967:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				if( xTimeToWake < xNextTaskUnblockTime )
4968:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
4969:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					xNextTaskUnblockTime = xTimeToWake;
4970:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
4971:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				else
4972:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
4973:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					mtCOVERAGE_TEST_MARKER();
4974:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
4975:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
4976:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
4977:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
4978:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#else /* INCLUDE_vTaskSuspend */
4979:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
4980:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Calculate the time at which the task should be woken if the event
4981:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		does not occur.  This may overflow but this doesn't matter, the kernel
4982:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		will manage it correctly. */
4983:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		xTimeToWake = xConstTickCount + xTicksToWait;
4984:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4985:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* The list item will be inserted in wake time order. */
4986:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		listSET_LIST_ITEM_VALUE( &( pxCurrentTCB->xStateListItem ), xTimeToWake );
4987:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4988:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( xTimeToWake < xConstTickCount )
4989:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
4990:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Wake time has overflowed.  Place this item in the overflow list. */
4991:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			vListInsert( pxOverflowDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
4992:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
ARM GAS  /tmp/ccRhC8mT.s 			page 110


4993:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
4994:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
4995:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* The wake time has not overflowed, so the current block list is used. */
4996:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			vListInsert( pxDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
4997:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4998:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* If the task entering the blocked state was placed at the head of the
4999:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			list of blocked tasks then xNextTaskUnblockTime needs to be updated
5000:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			too. */
5001:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( xTimeToWake < xNextTaskUnblockTime )
5002:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
5003:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				xNextTaskUnblockTime = xTimeToWake;
5004:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
5005:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
5006:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
5007:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
5008:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
5009:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
5010:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
5011:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Avoid compiler warning when INCLUDE_vTaskSuspend is not 1. */
5012:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		( void ) xCanBlockIndefinitely;
5013:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
5014:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#endif /* INCLUDE_vTaskSuspend */
5015:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
 861              		.loc 1 5015 1 view .LVU240
 862 004a 70BD     		pop	{r4, r5, r6, pc}
 863              	.LVL60:
 864              	.L69:
4935:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 865              		.loc 1 4935 41 discriminator 1 view .LVU241
 866 004c 002D     		cmp	r5, #0
 867 004e EFD0     		beq	.L65
4940:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 868              		.loc 1 4940 4 is_stmt 1 view .LVU242
4940:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 869              		.loc 1 4940 56 is_stmt 0 view .LVU243
 870 0050 0B4B     		ldr	r3, .L70+4
 871 0052 1968     		ldr	r1, [r3]
4940:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 872              		.loc 1 4940 4 view .LVU244
 873 0054 0431     		adds	r1, r1, #4
 874 0056 0D48     		ldr	r0, .L70+16
 875 0058 FFF7FEFF 		bl	vListInsertEnd
 876              	.LVL61:
 877 005c F5E7     		b	.L63
 878              	.LVL62:
 879              	.L67:
4962:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 880              		.loc 1 4962 5 is_stmt 1 view .LVU245
 881 005e 0C4B     		ldr	r3, .L70+20
 882 0060 1868     		ldr	r0, [r3]
4962:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 883              		.loc 1 4962 52 is_stmt 0 view .LVU246
 884 0062 074B     		ldr	r3, .L70+4
 885 0064 1968     		ldr	r1, [r3]
4962:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 886              		.loc 1 4962 5 view .LVU247
 887 0066 0431     		adds	r1, r1, #4
ARM GAS  /tmp/ccRhC8mT.s 			page 111


 888 0068 FFF7FEFF 		bl	vListInsert
 889              	.LVL63:
4967:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 890              		.loc 1 4967 5 is_stmt 1 view .LVU248
4967:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 891              		.loc 1 4967 21 is_stmt 0 view .LVU249
 892 006c 094B     		ldr	r3, .L70+24
 893 006e 1B68     		ldr	r3, [r3]
4967:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 894              		.loc 1 4967 7 view .LVU250
 895 0070 A342     		cmp	r3, r4
 896 0072 EAD9     		bls	.L63
4969:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 897              		.loc 1 4969 6 is_stmt 1 view .LVU251
4969:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 898              		.loc 1 4969 27 is_stmt 0 view .LVU252
 899 0074 074B     		ldr	r3, .L70+24
 900 0076 1C60     		str	r4, [r3]
4973:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 901              		.loc 1 4973 30 is_stmt 1 view .LVU253
 902              		.loc 1 5015 1 is_stmt 0 view .LVU254
 903 0078 E7E7     		b	.L63
 904              	.L71:
 905 007a 00BF     		.align	2
 906              	.L70:
 907 007c 00000000 		.word	xTickCount
 908 0080 00000000 		.word	pxCurrentTCB
 909 0084 00000000 		.word	uxTopReadyPriority
 910 0088 00000000 		.word	pxOverflowDelayedTaskList
 911 008c 00000000 		.word	xSuspendedTaskList
 912 0090 00000000 		.word	pxDelayedTaskList
 913 0094 00000000 		.word	xNextTaskUnblockTime
 914              		.cfi_endproc
 915              	.LFE54:
 917              		.section	.text.xTaskCreateStatic,"ax",%progbits
 918              		.align	1
 919              		.global	xTaskCreateStatic
 920              		.syntax unified
 921              		.thumb
 922              		.thumb_func
 924              	xTaskCreateStatic:
 925              	.LVL64:
 926              	.LFB5:
 582:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t *pxNewTCB;
 927              		.loc 1 582 2 is_stmt 1 view -0
 928              		.cfi_startproc
 929              		@ args = 12, pretend = 0, frame = 8
 930              		@ frame_needed = 0, uses_anonymous_args = 0
 582:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t *pxNewTCB;
 931              		.loc 1 582 2 is_stmt 0 view .LVU256
 932 0000 30B5     		push	{r4, r5, lr}
 933              	.LCFI8:
 934              		.cfi_def_cfa_offset 12
 935              		.cfi_offset 4, -12
 936              		.cfi_offset 5, -8
 937              		.cfi_offset 14, -4
 938 0002 87B0     		sub	sp, sp, #28
ARM GAS  /tmp/ccRhC8mT.s 			page 112


 939              	.LCFI9:
 940              		.cfi_def_cfa_offset 40
 941 0004 0B9C     		ldr	r4, [sp, #44]
 583:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TaskHandle_t xReturn;
 942              		.loc 1 583 2 is_stmt 1 view .LVU257
 584:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 943              		.loc 1 584 2 view .LVU258
 586:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		configASSERT( pxTaskBuffer != NULL );
 944              		.loc 1 586 3 view .LVU259
 945 0006 7CB1     		cbz	r4, .L80
 586:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		configASSERT( pxTaskBuffer != NULL );
 946              		.loc 1 586 41 discriminator 2 view .LVU260
 587:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 947              		.loc 1 587 3 view .LVU261
 948 0008 0C9D     		ldr	r5, [sp, #48]
 949 000a B5B1     		cbz	r5, .L81
 587:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 950              		.loc 1 587 39 discriminator 2 view .LVU262
 951              	.LBB110:
 594:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			configASSERT( xSize == sizeof( TCB_t ) );
 952              		.loc 1 594 4 view .LVU263
 594:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			configASSERT( xSize == sizeof( TCB_t ) );
 953              		.loc 1 594 20 is_stmt 0 view .LVU264
 954 000c 5425     		movs	r5, #84
 955 000e 0495     		str	r5, [sp, #16]
 595:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 956              		.loc 1 595 4 is_stmt 1 view .LVU265
 957 0010 049D     		ldr	r5, [sp, #16]
 958 0012 542D     		cmp	r5, #84
 959 0014 1AD0     		beq	.L77
 595:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 960              		.loc 1 595 4 discriminator 1 view .LVU266
 961              	.LBB111:
 962              	.LBI111:
 191:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** {
 963              		.loc 2 191 30 view .LVU267
 964              	.LBB112:
 193:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
 965              		.loc 2 193 1 view .LVU268
 966              		.loc 2 195 2 view .LVU269
 967              		.syntax unified
 968              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h" 1
 969 0016 4FF05003 			mov r3, #80												
 970 001a 83F31188 		msr basepri, r3											
 971 001e BFF36F8F 		isb														
 972 0022 BFF34F8F 		dsb														
 973              	
 974              	@ 0 "" 2
 975              	.LVL65:
 976              		.thumb
 977              		.syntax unified
 978              	.L78:
 979              		.loc 2 195 2 is_stmt 0 view .LVU270
 980              	.LBE112:
 981              	.LBE111:
 595:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 982              		.loc 1 595 4 is_stmt 1 discriminator 3 view .LVU271
ARM GAS  /tmp/ccRhC8mT.s 			page 113


 595:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 983              		.loc 1 595 4 discriminator 3 view .LVU272
 984 0026 FEE7     		b	.L78
 985              	.LVL66:
 986              	.L80:
 595:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 987              		.loc 1 595 4 is_stmt 0 discriminator 3 view .LVU273
 988              	.LBE110:
 586:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		configASSERT( pxTaskBuffer != NULL );
 989              		.loc 1 586 3 is_stmt 1 discriminator 1 view .LVU274
 990              	.LBB113:
 991              	.LBI113:
 191:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** {
 992              		.loc 2 191 30 view .LVU275
 993              	.LBB114:
 193:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
 994              		.loc 2 193 1 view .LVU276
 995              		.loc 2 195 2 view .LVU277
 996              		.syntax unified
 997              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h" 1
 998 0028 4FF05003 			mov r3, #80												
 999 002c 83F31188 		msr basepri, r3											
 1000 0030 BFF36F8F 		isb														
 1001 0034 BFF34F8F 		dsb														
 1002              	
 1003              	@ 0 "" 2
 1004              	.LVL67:
 1005              		.thumb
 1006              		.syntax unified
 1007              	.L74:
 1008              		.loc 2 195 2 is_stmt 0 view .LVU278
 1009              	.LBE114:
 1010              	.LBE113:
 586:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		configASSERT( pxTaskBuffer != NULL );
 1011              		.loc 1 586 3 is_stmt 1 discriminator 3 view .LVU279
 586:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		configASSERT( pxTaskBuffer != NULL );
 1012              		.loc 1 586 3 discriminator 3 view .LVU280
 1013 0038 FEE7     		b	.L74
 1014              	.LVL68:
 1015              	.L81:
 587:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1016              		.loc 1 587 3 discriminator 1 view .LVU281
 1017              	.LBB115:
 1018              	.LBI115:
 191:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** {
 1019              		.loc 2 191 30 view .LVU282
 1020              	.LBB116:
 193:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
 1021              		.loc 2 193 1 view .LVU283
 1022              		.loc 2 195 2 view .LVU284
 1023              		.syntax unified
 1024              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h" 1
 1025 003a 4FF05003 			mov r3, #80												
 1026 003e 83F31188 		msr basepri, r3											
 1027 0042 BFF36F8F 		isb														
 1028 0046 BFF34F8F 		dsb														
 1029              	
ARM GAS  /tmp/ccRhC8mT.s 			page 114


 1030              	@ 0 "" 2
 1031              	.LVL69:
 1032              		.thumb
 1033              		.syntax unified
 1034              	.L76:
 1035              		.loc 2 195 2 is_stmt 0 view .LVU285
 1036              	.LBE116:
 1037              	.LBE115:
 587:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1038              		.loc 1 587 3 is_stmt 1 discriminator 3 view .LVU286
 587:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1039              		.loc 1 587 3 discriminator 3 view .LVU287
 1040 004a FEE7     		b	.L76
 1041              	.LVL70:
 1042              	.L77:
 1043              	.LBB117:
 595:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 1044              		.loc 1 595 44 discriminator 2 view .LVU288
 1045              	.LBE117:
 600:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 1046              		.loc 1 600 3 view .LVU289
 604:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxNewTCB->pxStack = ( StackType_t * ) puxStackBuffer;
 1047              		.loc 1 604 4 view .LVU290
 605:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1048              		.loc 1 605 4 view .LVU291
 605:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1049              		.loc 1 605 22 is_stmt 0 view .LVU292
 1050 004c 0C9D     		ldr	r5, [sp, #48]
 1051 004e 2C63     		str	r4, [r5, #48]
 611:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 1052              		.loc 1 611 5 is_stmt 1 view .LVU293
 611:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 1053              		.loc 1 611 37 is_stmt 0 view .LVU294
 1054 0050 0224     		movs	r4, #2
 1055 0052 85F85140 		strb	r4, [r5, #81]
 615:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			prvAddNewTaskToReadyList( pxNewTCB );
 1056              		.loc 1 615 4 is_stmt 1 view .LVU295
 1057 0056 0024     		movs	r4, #0
 1058 0058 0394     		str	r4, [sp, #12]
 1059 005a 0295     		str	r5, [sp, #8]
 1060 005c 05AC     		add	r4, sp, #20
 1061 005e 0194     		str	r4, [sp, #4]
 1062 0060 0A9C     		ldr	r4, [sp, #40]
 1063 0062 0094     		str	r4, [sp]
 1064 0064 FFF7FEFF 		bl	prvInitialiseNewTask
 1065              	.LVL71:
 616:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 1066              		.loc 1 616 4 view .LVU296
 1067 0068 0C98     		ldr	r0, [sp, #48]
 1068 006a FFF7FEFF 		bl	prvAddNewTaskToReadyList
 1069              	.LVL72:
 623:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 1070              		.loc 1 623 3 view .LVU297
 624:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1071              		.loc 1 624 2 is_stmt 0 view .LVU298
 1072 006e 0598     		ldr	r0, [sp, #20]
 1073 0070 07B0     		add	sp, sp, #28
ARM GAS  /tmp/ccRhC8mT.s 			page 115


 1074              	.LCFI10:
 1075              		.cfi_def_cfa_offset 12
 1076              		@ sp needed
 1077 0072 30BD     		pop	{r4, r5, pc}
 624:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1078              		.loc 1 624 2 view .LVU299
 1079              		.cfi_endproc
 1080              	.LFE5:
 1082              		.section	.text.xTaskCreate,"ax",%progbits
 1083              		.align	1
 1084              		.global	xTaskCreate
 1085              		.syntax unified
 1086              		.thumb
 1087              		.thumb_func
 1089              	xTaskCreate:
 1090              	.LVL73:
 1091              	.LFB6:
 732:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t *pxNewTCB;
 1092              		.loc 1 732 2 is_stmt 1 view -0
 1093              		.cfi_startproc
 1094              		@ args = 8, pretend = 0, frame = 0
 1095              		@ frame_needed = 0, uses_anonymous_args = 0
 732:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t *pxNewTCB;
 1096              		.loc 1 732 2 is_stmt 0 view .LVU301
 1097 0000 2DE9F043 		push	{r4, r5, r6, r7, r8, r9, lr}
 1098              	.LCFI11:
 1099              		.cfi_def_cfa_offset 28
 1100              		.cfi_offset 4, -28
 1101              		.cfi_offset 5, -24
 1102              		.cfi_offset 6, -20
 1103              		.cfi_offset 7, -16
 1104              		.cfi_offset 8, -12
 1105              		.cfi_offset 9, -8
 1106              		.cfi_offset 14, -4
 1107 0004 85B0     		sub	sp, sp, #20
 1108              	.LCFI12:
 1109              		.cfi_def_cfa_offset 48
 1110 0006 0746     		mov	r7, r0
 1111 0008 8846     		mov	r8, r1
 1112 000a 1446     		mov	r4, r2
 1113 000c 1E46     		mov	r6, r3
 733:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xReturn;
 1114              		.loc 1 733 2 is_stmt 1 view .LVU302
 734:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1115              		.loc 1 734 2 view .LVU303
 1116              	.LBB118:
 763:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1117              		.loc 1 763 3 view .LVU304
 766:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1118              		.loc 1 766 4 view .LVU305
 766:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1119              		.loc 1 766 32 is_stmt 0 view .LVU306
 1120 000e 9000     		lsls	r0, r2, #2
 1121              	.LVL74:
 766:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1122              		.loc 1 766 32 view .LVU307
 1123 0010 FFF7FEFF 		bl	pvPortMalloc
ARM GAS  /tmp/ccRhC8mT.s 			page 116


 1124              	.LVL75:
 768:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 1125              		.loc 1 768 4 is_stmt 1 view .LVU308
 768:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 1126              		.loc 1 768 6 is_stmt 0 view .LVU309
 1127 0014 08B3     		cbz	r0, .L85
 1128 0016 8146     		mov	r9, r0
 771:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1129              		.loc 1 771 5 is_stmt 1 view .LVU310
 771:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1130              		.loc 1 771 28 is_stmt 0 view .LVU311
 1131 0018 5420     		movs	r0, #84
 1132              	.LVL76:
 771:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1133              		.loc 1 771 28 view .LVU312
 1134 001a FFF7FEFF 		bl	pvPortMalloc
 1135              	.LVL77:
 773:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 1136              		.loc 1 773 5 is_stmt 1 view .LVU313
 773:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 1137              		.loc 1 773 7 is_stmt 0 view .LVU314
 1138 001e 0546     		mov	r5, r0
 1139 0020 A8B1     		cbz	r0, .L84
 776:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 1140              		.loc 1 776 6 is_stmt 1 view .LVU315
 776:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 1141              		.loc 1 776 24 is_stmt 0 view .LVU316
 1142 0022 C0F83090 		str	r9, [r0, #48]
 776:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 1143              		.loc 1 776 24 view .LVU317
 1144              	.LBE118:
 792:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 1145              		.loc 1 792 3 is_stmt 1 view .LVU318
 798:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 1146              		.loc 1 798 5 view .LVU319
 798:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 1147              		.loc 1 798 37 is_stmt 0 view .LVU320
 1148 0026 0023     		movs	r3, #0
 1149 0028 80F85130 		strb	r3, [r0, #81]
 802:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			prvAddNewTaskToReadyList( pxNewTCB );
 1150              		.loc 1 802 4 is_stmt 1 view .LVU321
 1151 002c 0393     		str	r3, [sp, #12]
 1152 002e 0290     		str	r0, [sp, #8]
 1153 0030 0D9B     		ldr	r3, [sp, #52]
 1154 0032 0193     		str	r3, [sp, #4]
 1155 0034 0C9B     		ldr	r3, [sp, #48]
 1156 0036 0093     		str	r3, [sp]
 1157 0038 3346     		mov	r3, r6
 1158 003a 2246     		mov	r2, r4
 1159 003c 4146     		mov	r1, r8
 1160 003e 3846     		mov	r0, r7
 1161              	.LVL78:
 802:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			prvAddNewTaskToReadyList( pxNewTCB );
 1162              		.loc 1 802 4 is_stmt 0 view .LVU322
 1163 0040 FFF7FEFF 		bl	prvInitialiseNewTask
 1164              	.LVL79:
 803:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			xReturn = pdPASS;
ARM GAS  /tmp/ccRhC8mT.s 			page 117


 1165              		.loc 1 803 4 is_stmt 1 view .LVU323
 1166 0044 2846     		mov	r0, r5
 1167 0046 FFF7FEFF 		bl	prvAddNewTaskToReadyList
 1168              	.LVL80:
 804:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 1169              		.loc 1 804 4 view .LVU324
 804:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 1170              		.loc 1 804 12 is_stmt 0 view .LVU325
 1171 004a 0120     		movs	r0, #1
 1172 004c 07E0     		b	.L82
 1173              	.LVL81:
 1174              	.L84:
 1175              	.LBB119:
 782:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 1176              		.loc 1 782 6 is_stmt 1 view .LVU326
 1177 004e 4846     		mov	r0, r9
 1178              	.LVL82:
 782:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 1179              		.loc 1 782 6 is_stmt 0 view .LVU327
 1180 0050 FFF7FEFF 		bl	vPortFree
 1181              	.LVL83:
 782:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 1182              		.loc 1 782 6 view .LVU328
 1183              	.LBE119:
 792:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 1184              		.loc 1 792 3 is_stmt 1 view .LVU329
 808:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 1185              		.loc 1 808 12 is_stmt 0 view .LVU330
 1186 0054 4FF0FF30 		mov	r0, #-1
 1187 0058 01E0     		b	.L82
 1188              	.LVL84:
 1189              	.L85:
 808:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 1190              		.loc 1 808 12 view .LVU331
 1191 005a 4FF0FF30 		mov	r0, #-1
 1192              	.LVL85:
 811:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 1193              		.loc 1 811 3 is_stmt 1 view .LVU332
 1194              	.L82:
 812:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1195              		.loc 1 812 2 is_stmt 0 view .LVU333
 1196 005e 05B0     		add	sp, sp, #20
 1197              	.LCFI13:
 1198              		.cfi_def_cfa_offset 28
 1199              		@ sp needed
 1200 0060 BDE8F083 		pop	{r4, r5, r6, r7, r8, r9, pc}
 812:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1201              		.loc 1 812 2 view .LVU334
 1202              		.cfi_endproc
 1203              	.LFE6:
 1205              		.section	.text.vTaskDelete,"ax",%progbits
 1206              		.align	1
 1207              		.global	vTaskDelete
 1208              		.syntax unified
 1209              		.thumb
 1210              		.thumb_func
 1212              	vTaskDelete:
ARM GAS  /tmp/ccRhC8mT.s 			page 118


 1213              	.LVL86:
 1214              	.LFB9:
1107:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t *pxTCB;
 1215              		.loc 1 1107 2 is_stmt 1 view -0
 1216              		.cfi_startproc
 1217              		@ args = 0, pretend = 0, frame = 0
 1218              		@ frame_needed = 0, uses_anonymous_args = 0
1107:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t *pxTCB;
 1219              		.loc 1 1107 2 is_stmt 0 view .LVU336
 1220 0000 38B5     		push	{r3, r4, r5, lr}
 1221              	.LCFI14:
 1222              		.cfi_def_cfa_offset 16
 1223              		.cfi_offset 3, -16
 1224              		.cfi_offset 4, -12
 1225              		.cfi_offset 5, -8
 1226              		.cfi_offset 14, -4
 1227 0002 0446     		mov	r4, r0
1108:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1228              		.loc 1 1108 2 is_stmt 1 view .LVU337
1110:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 1229              		.loc 1 1110 3 view .LVU338
 1230 0004 FFF7FEFF 		bl	vPortEnterCritical
 1231              	.LVL87:
1114:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1232              		.loc 1 1114 4 view .LVU339
1114:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1233              		.loc 1 1114 12 is_stmt 0 view .LVU340
 1234 0008 002C     		cmp	r4, #0
 1235 000a 34D0     		beq	.L97
 1236              	.LVL88:
 1237              	.L88:
1117:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 1238              		.loc 1 1117 4 is_stmt 1 view .LVU341
1117:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 1239              		.loc 1 1117 8 is_stmt 0 view .LVU342
 1240 000c 251D     		adds	r5, r4, #4
 1241 000e 2846     		mov	r0, r5
 1242 0010 FFF7FEFF 		bl	uxListRemove
 1243              	.LVL89:
1117:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 1244              		.loc 1 1117 6 discriminator 1 view .LVU343
 1245 0014 70B9     		cbnz	r0, .L89
1119:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 1246              		.loc 1 1119 5 is_stmt 1 view .LVU344
 1247 0016 E26A     		ldr	r2, [r4, #44]
 1248 0018 02EB8203 		add	r3, r2, r2, lsl #2
 1249 001c 9B00     		lsls	r3, r3, #2
 1250 001e 2749     		ldr	r1, .L100
 1251 0020 CB58     		ldr	r3, [r1, r3]
 1252 0022 3BB9     		cbnz	r3, .L89
1119:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 1253              		.loc 1 1119 5 discriminator 1 view .LVU345
 1254 0024 0123     		movs	r3, #1
 1255 0026 03FA02F2 		lsl	r2, r3, r2
 1256 002a 2549     		ldr	r1, .L100+4
 1257 002c 0B68     		ldr	r3, [r1]
 1258 002e 23EA0203 		bic	r3, r3, r2
ARM GAS  /tmp/ccRhC8mT.s 			page 119


 1259 0032 0B60     		str	r3, [r1]
 1260              	.L89:
1123:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 1261              		.loc 1 1123 29 view .LVU346
1127:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 1262              		.loc 1 1127 4 view .LVU347
1127:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 1263              		.loc 1 1127 8 is_stmt 0 view .LVU348
 1264 0034 A36A     		ldr	r3, [r4, #40]
1127:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 1265              		.loc 1 1127 6 view .LVU349
 1266 0036 1BB1     		cbz	r3, .L90
1129:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 1267              		.loc 1 1129 5 is_stmt 1 view .LVU350
1129:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 1268              		.loc 1 1129 14 is_stmt 0 view .LVU351
 1269 0038 04F11800 		add	r0, r4, #24
 1270 003c FFF7FEFF 		bl	uxListRemove
 1271              	.LVL90:
 1272              	.L90:
1133:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 1273              		.loc 1 1133 29 is_stmt 1 view .LVU352
1140:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1274              		.loc 1 1140 4 view .LVU353
1140:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1275              		.loc 1 1140 16 is_stmt 0 view .LVU354
 1276 0040 204A     		ldr	r2, .L100+8
 1277 0042 1368     		ldr	r3, [r2]
 1278 0044 0133     		adds	r3, r3, #1
 1279 0046 1360     		str	r3, [r2]
1142:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 1280              		.loc 1 1142 4 is_stmt 1 view .LVU355
1142:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 1281              		.loc 1 1142 14 is_stmt 0 view .LVU356
 1282 0048 1F4B     		ldr	r3, .L100+12
 1283 004a 1B68     		ldr	r3, [r3]
1142:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 1284              		.loc 1 1142 6 view .LVU357
 1285 004c A342     		cmp	r3, r4
 1286 004e 15D0     		beq	.L98
1165:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				prvDeleteTCB( pxTCB );
 1287              		.loc 1 1165 5 is_stmt 1 view .LVU358
 1288 0050 1E4A     		ldr	r2, .L100+16
 1289 0052 1368     		ldr	r3, [r2]
 1290 0054 013B     		subs	r3, r3, #1
 1291 0056 1360     		str	r3, [r2]
1166:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1292              		.loc 1 1166 5 view .LVU359
 1293 0058 2046     		mov	r0, r4
 1294 005a FFF7FEFF 		bl	prvDeleteTCB
 1295              	.LVL91:
1170:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 1296              		.loc 1 1170 5 view .LVU360
 1297 005e FFF7FEFF 		bl	prvResetNextTaskUnblockTime
 1298              	.LVL92:
 1299              	.L92:
1173:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
ARM GAS  /tmp/ccRhC8mT.s 			page 120


 1300              		.loc 1 1173 29 view .LVU361
1175:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1301              		.loc 1 1175 3 view .LVU362
 1302 0062 FFF7FEFF 		bl	vPortExitCritical
 1303              	.LVL93:
1179:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 1304              		.loc 1 1179 3 view .LVU363
1179:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 1305              		.loc 1 1179 25 is_stmt 0 view .LVU364
 1306 0066 1A4B     		ldr	r3, .L100+20
 1307 0068 1B68     		ldr	r3, [r3]
1179:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 1308              		.loc 1 1179 5 view .LVU365
 1309 006a 1BB1     		cbz	r3, .L87
1181:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 1310              		.loc 1 1181 4 is_stmt 1 view .LVU366
1181:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 1311              		.loc 1 1181 14 is_stmt 0 view .LVU367
 1312 006c 164B     		ldr	r3, .L100+12
 1313 006e 1B68     		ldr	r3, [r3]
1181:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 1314              		.loc 1 1181 6 view .LVU368
 1315 0070 A342     		cmp	r3, r4
 1316 0072 0CD0     		beq	.L99
 1317              	.L87:
1191:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1318              		.loc 1 1191 2 view .LVU369
 1319 0074 38BD     		pop	{r3, r4, r5, pc}
 1320              	.LVL94:
 1321              	.L97:
1114:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1322              		.loc 1 1114 12 discriminator 1 view .LVU370
 1323 0076 144B     		ldr	r3, .L100+12
 1324 0078 1C68     		ldr	r4, [r3]
 1325              	.LVL95:
1114:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1326              		.loc 1 1114 12 discriminator 1 view .LVU371
 1327 007a C7E7     		b	.L88
 1328              	.LVL96:
 1329              	.L98:
1149:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1330              		.loc 1 1149 5 is_stmt 1 view .LVU372
 1331 007c 2946     		mov	r1, r5
 1332 007e 1548     		ldr	r0, .L100+24
 1333 0080 FFF7FEFF 		bl	vListInsertEnd
 1334              	.LVL97:
1154:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1335              		.loc 1 1154 5 view .LVU373
 1336 0084 144A     		ldr	r2, .L100+28
 1337 0086 1368     		ldr	r3, [r2]
 1338 0088 0133     		adds	r3, r3, #1
 1339 008a 1360     		str	r3, [r2]
1161:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 1340              		.loc 1 1161 54 view .LVU374
 1341 008c E9E7     		b	.L92
 1342              	.L99:
1183:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				portYIELD_WITHIN_API();
ARM GAS  /tmp/ccRhC8mT.s 			page 121


 1343              		.loc 1 1183 5 view .LVU375
 1344 008e 134B     		ldr	r3, .L100+32
 1345 0090 1B68     		ldr	r3, [r3]
 1346 0092 43B1     		cbz	r3, .L94
1183:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				portYIELD_WITHIN_API();
 1347              		.loc 1 1183 5 discriminator 1 view .LVU376
 1348              	.LBB120:
 1349              	.LBI120:
 191:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** {
 1350              		.loc 2 191 30 view .LVU377
 1351              	.LBB121:
 193:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
 1352              		.loc 2 193 1 view .LVU378
 1353              		.loc 2 195 2 view .LVU379
 1354              		.syntax unified
 1355              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h" 1
 1356 0094 4FF05003 			mov r3, #80												
 1357 0098 83F31188 		msr basepri, r3											
 1358 009c BFF36F8F 		isb														
 1359 00a0 BFF34F8F 		dsb														
 1360              	
 1361              	@ 0 "" 2
 1362              		.thumb
 1363              		.syntax unified
 1364              	.L95:
 1365              	.LBE121:
 1366              	.LBE120:
1183:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				portYIELD_WITHIN_API();
 1367              		.loc 1 1183 5 discriminator 3 view .LVU380
1183:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				portYIELD_WITHIN_API();
 1368              		.loc 1 1183 5 discriminator 3 view .LVU381
 1369 00a4 FEE7     		b	.L95
 1370              	.L94:
1183:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				portYIELD_WITHIN_API();
 1371              		.loc 1 1183 46 discriminator 2 view .LVU382
1184:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 1372              		.loc 1 1184 5 view .LVU383
 1373 00a6 4FF0E023 		mov	r3, #-536813568
 1374 00aa 4FF08052 		mov	r2, #268435456
 1375 00ae C3F8042D 		str	r2, [r3, #3332]
1184:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 1376              		.loc 1 1184 5 view .LVU384
 1377              		.syntax unified
 1378              	@ 1184 "Middlewares/Third_Party/FreeRTOS/Source/tasks.c" 1
 1379 00b2 BFF34F8F 		dsb
 1380              	@ 0 "" 2
1184:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 1381              		.loc 1 1184 5 view .LVU385
 1382              	@ 1184 "Middlewares/Third_Party/FreeRTOS/Source/tasks.c" 1
 1383 00b6 BFF36F8F 		isb
 1384              	@ 0 "" 2
1184:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 1385              		.loc 1 1184 27 view .LVU386
1188:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 1386              		.loc 1 1188 29 view .LVU387
1191:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1387              		.loc 1 1191 2 is_stmt 0 view .LVU388
ARM GAS  /tmp/ccRhC8mT.s 			page 122


 1388              		.thumb
 1389              		.syntax unified
 1390 00ba DBE7     		b	.L87
 1391              	.L101:
 1392              		.align	2
 1393              	.L100:
 1394 00bc 00000000 		.word	pxReadyTasksLists
 1395 00c0 00000000 		.word	uxTopReadyPriority
 1396 00c4 00000000 		.word	uxTaskNumber
 1397 00c8 00000000 		.word	pxCurrentTCB
 1398 00cc 00000000 		.word	uxCurrentNumberOfTasks
 1399 00d0 00000000 		.word	xSchedulerRunning
 1400 00d4 00000000 		.word	xTasksWaitingTermination
 1401 00d8 00000000 		.word	uxDeletedTasksWaitingCleanUp
 1402 00dc 00000000 		.word	uxSchedulerSuspended
 1403              		.cfi_endproc
 1404              	.LFE9:
 1406              		.section	.text.uxTaskPriorityGet,"ax",%progbits
 1407              		.align	1
 1408              		.global	uxTaskPriorityGet
 1409              		.syntax unified
 1410              		.thumb
 1411              		.thumb_func
 1413              	uxTaskPriorityGet:
 1414              	.LVL98:
 1415              	.LFB11:
1399:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t *pxTCB;
 1416              		.loc 1 1399 2 is_stmt 1 view -0
 1417              		.cfi_startproc
 1418              		@ args = 0, pretend = 0, frame = 0
 1419              		@ frame_needed = 0, uses_anonymous_args = 0
1399:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t *pxTCB;
 1420              		.loc 1 1399 2 is_stmt 0 view .LVU390
 1421 0000 10B5     		push	{r4, lr}
 1422              	.LCFI15:
 1423              		.cfi_def_cfa_offset 8
 1424              		.cfi_offset 4, -8
 1425              		.cfi_offset 14, -4
 1426 0002 0446     		mov	r4, r0
1400:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	UBaseType_t uxReturn;
 1427              		.loc 1 1400 2 is_stmt 1 view .LVU391
1401:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1428              		.loc 1 1401 2 view .LVU392
1403:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 1429              		.loc 1 1403 3 view .LVU393
 1430 0004 FFF7FEFF 		bl	vPortEnterCritical
 1431              	.LVL99:
1407:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			uxReturn = pxTCB->uxPriority;
 1432              		.loc 1 1407 4 view .LVU394
1407:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			uxReturn = pxTCB->uxPriority;
 1433              		.loc 1 1407 12 is_stmt 0 view .LVU395
 1434 0008 24B1     		cbz	r4, .L105
 1435              	.LVL100:
 1436              	.L103:
1408:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 1437              		.loc 1 1408 4 is_stmt 1 view .LVU396
1408:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
ARM GAS  /tmp/ccRhC8mT.s 			page 123


 1438              		.loc 1 1408 13 is_stmt 0 view .LVU397
 1439 000a E46A     		ldr	r4, [r4, #44]
 1440              	.LVL101:
1410:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1441              		.loc 1 1410 3 is_stmt 1 view .LVU398
 1442 000c FFF7FEFF 		bl	vPortExitCritical
 1443              	.LVL102:
1412:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 1444              		.loc 1 1412 3 view .LVU399
1413:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1445              		.loc 1 1413 2 is_stmt 0 view .LVU400
 1446 0010 2046     		mov	r0, r4
 1447 0012 10BD     		pop	{r4, pc}
 1448              	.LVL103:
 1449              	.L105:
1407:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			uxReturn = pxTCB->uxPriority;
 1450              		.loc 1 1407 12 discriminator 1 view .LVU401
 1451 0014 014B     		ldr	r3, .L106
 1452 0016 1C68     		ldr	r4, [r3]
 1453              	.LVL104:
1407:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			uxReturn = pxTCB->uxPriority;
 1454              		.loc 1 1407 12 discriminator 1 view .LVU402
 1455 0018 F7E7     		b	.L103
 1456              	.L107:
 1457 001a 00BF     		.align	2
 1458              	.L106:
 1459 001c 00000000 		.word	pxCurrentTCB
 1460              		.cfi_endproc
 1461              	.LFE11:
 1463              		.section	.text.uxTaskPriorityGetFromISR,"ax",%progbits
 1464              		.align	1
 1465              		.global	uxTaskPriorityGetFromISR
 1466              		.syntax unified
 1467              		.thumb
 1468              		.thumb_func
 1470              	uxTaskPriorityGetFromISR:
 1471              	.LVL105:
 1472              	.LFB12:
1421:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t *pxTCB;
 1473              		.loc 1 1421 2 is_stmt 1 view -0
 1474              		.cfi_startproc
 1475              		@ args = 0, pretend = 0, frame = 0
 1476              		@ frame_needed = 0, uses_anonymous_args = 0
1421:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t *pxTCB;
 1477              		.loc 1 1421 2 is_stmt 0 view .LVU404
 1478 0000 10B5     		push	{r4, lr}
 1479              	.LCFI16:
 1480              		.cfi_def_cfa_offset 8
 1481              		.cfi_offset 4, -8
 1482              		.cfi_offset 14, -4
 1483 0002 0446     		mov	r4, r0
1422:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	UBaseType_t uxReturn, uxSavedInterruptState;
 1484              		.loc 1 1422 2 is_stmt 1 view .LVU405
1423:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1485              		.loc 1 1423 2 view .LVU406
1441:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1486              		.loc 1 1441 3 view .LVU407
ARM GAS  /tmp/ccRhC8mT.s 			page 124


 1487 0004 FFF7FEFF 		bl	vPortValidateInterruptPriority
 1488              	.LVL106:
1443:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 1489              		.loc 1 1443 3 view .LVU408
 1490              	.LBB122:
 1491              	.LBI122:
 196:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	(
 197:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 		"	mov %0, %1												\n" \
 198:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 		"	msr basepri, %0											\n" \
 199:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 		"	isb														\n" \
 200:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 		"	dsb														\n" \
 201:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 		:"=r" (ulNewBASEPRI) : "i" ( configMAX_SYSCALL_INTERRUPT_PRIORITY ) : "memory"
 202:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	);
 203:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** }
 204:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
 205:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** /*-----------------------------------------------------------*/
 206:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
 207:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** portFORCE_INLINE static uint32_t ulPortRaiseBASEPRI( void )
 1492              		.loc 2 207 34 view .LVU409
 1493              	.LBB123:
 208:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** {
 209:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** uint32_t ulOriginalBASEPRI, ulNewBASEPRI;
 1494              		.loc 2 209 1 view .LVU410
 210:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
 211:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	__asm volatile
 1495              		.loc 2 211 2 view .LVU411
 1496              		.syntax unified
 1497              	@ 211 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h" 1
 1498 0008 EFF31183 			mrs r3, basepri											
 1499 000c 4FF05002 		mov r2, #80												
 1500 0010 82F31188 		msr basepri, r2											
 1501 0014 BFF36F8F 		isb														
 1502 0018 BFF34F8F 		dsb														
 1503              	
 1504              	@ 0 "" 2
 1505              	.LVL107:
 212:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	(
 213:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 		"	mrs %0, basepri											\n" \
 214:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 		"	mov %1, %2												\n" \
 215:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 		"	msr basepri, %1											\n" \
 216:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 		"	isb														\n" \
 217:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 		"	dsb														\n" \
 218:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 		:"=r" (ulOriginalBASEPRI), "=r" (ulNewBASEPRI) : "i" ( configMAX_SYSCALL_INTERRUPT_PRIORITY ) : "
 219:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	);
 220:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
 221:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	/* This return will not be reached but is necessary to prevent compiler
 222:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	warnings. */
 223:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	return ulOriginalBASEPRI;
 1506              		.loc 2 223 2 view .LVU412
 1507              		.loc 2 223 2 is_stmt 0 view .LVU413
 1508              		.thumb
 1509              		.syntax unified
 1510              	.LBE123:
 1511              	.LBE122:
1447:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			uxReturn = pxTCB->uxPriority;
 1512              		.loc 1 1447 4 is_stmt 1 view .LVU414
1447:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			uxReturn = pxTCB->uxPriority;
ARM GAS  /tmp/ccRhC8mT.s 			page 125


 1513              		.loc 1 1447 12 is_stmt 0 view .LVU415
 1514 001c 1CB1     		cbz	r4, .L111
 1515              	.LVL108:
 1516              	.L109:
1448:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 1517              		.loc 1 1448 4 is_stmt 1 view .LVU416
1448:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 1518              		.loc 1 1448 13 is_stmt 0 view .LVU417
 1519 001e E06A     		ldr	r0, [r4, #44]
 1520              	.LVL109:
1450:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1521              		.loc 1 1450 3 is_stmt 1 view .LVU418
 1522              	.LBB124:
 1523              	.LBI124:
 224:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** }
 225:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** /*-----------------------------------------------------------*/
 226:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
 227:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** portFORCE_INLINE static void vPortSetBASEPRI( uint32_t ulNewMaskValue )
 1524              		.loc 2 227 30 view .LVU419
 1525              	.LBB125:
 228:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** {
 229:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	__asm volatile
 1526              		.loc 2 229 2 view .LVU420
 1527              		.syntax unified
 1528              	@ 229 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h" 1
 1529 0020 83F31188 			msr basepri, r3	
 1530              	@ 0 "" 2
 1531              		.thumb
 1532              		.syntax unified
 1533              	.LBE125:
 1534              	.LBE124:
1452:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 1535              		.loc 1 1452 3 view .LVU421
1453:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1536              		.loc 1 1453 2 is_stmt 0 view .LVU422
 1537 0024 10BD     		pop	{r4, pc}
 1538              	.LVL110:
 1539              	.L111:
1447:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			uxReturn = pxTCB->uxPriority;
 1540              		.loc 1 1447 12 discriminator 1 view .LVU423
 1541 0026 014A     		ldr	r2, .L112
 1542 0028 1468     		ldr	r4, [r2]
 1543              	.LVL111:
1447:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			uxReturn = pxTCB->uxPriority;
 1544              		.loc 1 1447 12 discriminator 1 view .LVU424
 1545 002a F8E7     		b	.L109
 1546              	.L113:
 1547              		.align	2
 1548              	.L112:
 1549 002c 00000000 		.word	pxCurrentTCB
 1550              		.cfi_endproc
 1551              	.LFE12:
 1553              		.section	.text.vTaskPrioritySet,"ax",%progbits
 1554              		.align	1
 1555              		.global	vTaskPrioritySet
 1556              		.syntax unified
 1557              		.thumb
ARM GAS  /tmp/ccRhC8mT.s 			page 126


 1558              		.thumb_func
 1560              	vTaskPrioritySet:
 1561              	.LVL112:
 1562              	.LFB13:
1461:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t *pxTCB;
 1563              		.loc 1 1461 2 is_stmt 1 view -0
 1564              		.cfi_startproc
 1565              		@ args = 0, pretend = 0, frame = 0
 1566              		@ frame_needed = 0, uses_anonymous_args = 0
1461:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t *pxTCB;
 1567              		.loc 1 1461 2 is_stmt 0 view .LVU426
 1568 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 1569              	.LCFI17:
 1570              		.cfi_def_cfa_offset 24
 1571              		.cfi_offset 3, -24
 1572              		.cfi_offset 4, -20
 1573              		.cfi_offset 5, -16
 1574              		.cfi_offset 6, -12
 1575              		.cfi_offset 7, -8
 1576              		.cfi_offset 14, -4
1462:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	UBaseType_t uxCurrentBasePriority, uxPriorityUsedOnEntry;
 1577              		.loc 1 1462 2 is_stmt 1 view .LVU427
1463:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xYieldRequired = pdFALSE;
 1578              		.loc 1 1463 2 view .LVU428
1464:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1579              		.loc 1 1464 2 view .LVU429
 1580              	.LVL113:
1466:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1581              		.loc 1 1466 3 view .LVU430
 1582 0002 0629     		cmp	r1, #6
 1583 0004 08D9     		bls	.L115
1466:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1584              		.loc 1 1466 3 discriminator 1 view .LVU431
 1585              	.LBB126:
 1586              	.LBI126:
 191:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** {
 1587              		.loc 2 191 30 view .LVU432
 1588              	.LBB127:
 193:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
 1589              		.loc 2 193 1 view .LVU433
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	(
 1590              		.loc 2 195 2 view .LVU434
 1591              		.syntax unified
 1592              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h" 1
 1593 0006 4FF05003 			mov r3, #80												
 1594 000a 83F31188 		msr basepri, r3											
 1595 000e BFF36F8F 		isb														
 1596 0012 BFF34F8F 		dsb														
 1597              	
 1598              	@ 0 "" 2
 1599              		.thumb
 1600              		.syntax unified
 1601              	.L116:
 1602              	.LBE127:
 1603              	.LBE126:
1466:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1604              		.loc 1 1466 3 discriminator 3 view .LVU435
ARM GAS  /tmp/ccRhC8mT.s 			page 127


1466:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1605              		.loc 1 1466 3 discriminator 3 view .LVU436
 1606 0016 FEE7     		b	.L116
 1607              	.L115:
 1608 0018 0546     		mov	r5, r0
 1609 001a 0C46     		mov	r4, r1
1466:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1610              		.loc 1 1466 59 discriminator 2 view .LVU437
1469:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 1611              		.loc 1 1469 3 view .LVU438
 1612              	.LVL114:
1475:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 1613              		.loc 1 1475 28 view .LVU439
1478:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 1614              		.loc 1 1478 3 view .LVU440
 1615 001c FFF7FEFF 		bl	vPortEnterCritical
 1616              	.LVL115:
1482:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1617              		.loc 1 1482 4 view .LVU441
1482:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1618              		.loc 1 1482 12 is_stmt 0 view .LVU442
 1619 0020 75B1     		cbz	r5, .L129
 1620              	.LVL116:
 1621              	.L117:
1484:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1622              		.loc 1 1484 50 is_stmt 1 view .LVU443
1488:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 1623              		.loc 1 1488 5 view .LVU444
1488:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 1624              		.loc 1 1488 27 is_stmt 0 view .LVU445
 1625 0022 6B6C     		ldr	r3, [r5, #68]
 1626              	.LVL117:
1496:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 1627              		.loc 1 1496 4 is_stmt 1 view .LVU446
1496:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 1628              		.loc 1 1496 6 is_stmt 0 view .LVU447
 1629 0024 9C42     		cmp	r4, r3
 1630 0026 30D0     		beq	.L118
1500:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 1631              		.loc 1 1500 5 is_stmt 1 view .LVU448
1500:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 1632              		.loc 1 1500 7 is_stmt 0 view .LVU449
 1633 0028 0DD9     		bls	.L119
1502:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 1634              		.loc 1 1502 6 is_stmt 1 view .LVU450
1502:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 1635              		.loc 1 1502 16 is_stmt 0 view .LVU451
 1636 002a 2B4A     		ldr	r2, .L132
 1637 002c 1268     		ldr	r2, [r2]
1502:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 1638              		.loc 1 1502 8 view .LVU452
 1639 002e AA42     		cmp	r2, r5
 1640 0030 2ED0     		beq	.L125
1507:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						{
 1641              		.loc 1 1507 7 is_stmt 1 view .LVU453
1507:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						{
 1642              		.loc 1 1507 40 is_stmt 0 view .LVU454
ARM GAS  /tmp/ccRhC8mT.s 			page 128


 1643 0032 294A     		ldr	r2, .L132
 1644 0034 1268     		ldr	r2, [r2]
 1645 0036 D26A     		ldr	r2, [r2, #44]
1507:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						{
 1646              		.loc 1 1507 9 view .LVU455
 1647 0038 A242     		cmp	r2, r4
 1648 003a 2BD9     		bls	.L126
1464:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1649              		.loc 1 1464 13 view .LVU456
 1650 003c 0027     		movs	r7, #0
 1651 003e 07E0     		b	.L120
 1652              	.LVL118:
 1653              	.L129:
1482:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1654              		.loc 1 1482 12 discriminator 1 view .LVU457
 1655 0040 254B     		ldr	r3, .L132
 1656 0042 1D68     		ldr	r5, [r3]
 1657              	.LVL119:
1482:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1658              		.loc 1 1482 12 discriminator 1 view .LVU458
 1659 0044 EDE7     		b	.L117
 1660              	.LVL120:
 1661              	.L119:
1523:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 1662              		.loc 1 1523 10 is_stmt 1 view .LVU459
1523:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 1663              		.loc 1 1523 20 is_stmt 0 view .LVU460
 1664 0046 244A     		ldr	r2, .L132
 1665 0048 1268     		ldr	r2, [r2]
1523:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 1666              		.loc 1 1523 12 view .LVU461
 1667 004a AA42     		cmp	r2, r5
 1668 004c 24D0     		beq	.L127
1464:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1669              		.loc 1 1464 13 view .LVU462
 1670 004e 0027     		movs	r7, #0
 1671              	.L120:
 1672              	.LVL121:
1535:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1673              		.loc 1 1535 5 is_stmt 1 view .LVU463
1540:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1674              		.loc 1 1540 5 view .LVU464
1540:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1675              		.loc 1 1540 27 is_stmt 0 view .LVU465
 1676 0050 EE6A     		ldr	r6, [r5, #44]
 1677              	.LVL122:
1546:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 1678              		.loc 1 1546 6 is_stmt 1 view .LVU466
1546:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 1679              		.loc 1 1546 8 is_stmt 0 view .LVU467
 1680 0052 B342     		cmp	r3, r6
 1681 0054 22D0     		beq	.L130
 1682              	.L121:
1552:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 1683              		.loc 1 1552 31 is_stmt 1 view .LVU468
1556:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 1684              		.loc 1 1556 6 view .LVU469
ARM GAS  /tmp/ccRhC8mT.s 			page 129


1556:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 1685              		.loc 1 1556 28 is_stmt 0 view .LVU470
 1686 0056 6C64     		str	r4, [r5, #68]
1566:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 1687              		.loc 1 1566 5 is_stmt 1 view .LVU471
1566:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 1688              		.loc 1 1566 11 is_stmt 0 view .LVU472
 1689 0058 AB69     		ldr	r3, [r5, #24]
 1690              	.LVL123:
1566:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 1691              		.loc 1 1566 7 view .LVU473
 1692 005a 002B     		cmp	r3, #0
 1693 005c 02DB     		blt	.L122
1568:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 1694              		.loc 1 1568 6 is_stmt 1 view .LVU474
 1695 005e C4F10704 		rsb	r4, r4, #7
 1696              	.LVL124:
1568:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 1697              		.loc 1 1568 6 is_stmt 0 view .LVU475
 1698 0062 AC61     		str	r4, [r5, #24]
 1699              	.L122:
1572:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 1700              		.loc 1 1572 30 is_stmt 1 view .LVU476
1579:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 1701              		.loc 1 1579 5 view .LVU477
1579:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 1702              		.loc 1 1579 9 is_stmt 0 view .LVU478
 1703 0064 6969     		ldr	r1, [r5, #20]
 1704 0066 06EB8602 		add	r2, r6, r6, lsl #2
 1705 006a 1C4B     		ldr	r3, .L132+4
 1706 006c 03EB8203 		add	r3, r3, r2, lsl #2
1579:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 1707              		.loc 1 1579 112 view .LVU479
 1708 0070 9942     		cmp	r1, r3
 1709 0072 15D0     		beq	.L131
 1710              	.LVL125:
 1711              	.L123:
1599:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 1712              		.loc 1 1599 30 is_stmt 1 view .LVU480
1602:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 1713              		.loc 1 1602 5 view .LVU481
1602:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 1714              		.loc 1 1602 7 is_stmt 0 view .LVU482
 1715 0074 4FB1     		cbz	r7, .L118
1604:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 1716              		.loc 1 1604 6 is_stmt 1 view .LVU483
 1717 0076 4FF0E023 		mov	r3, #-536813568
 1718 007a 4FF08052 		mov	r2, #268435456
 1719 007e C3F8042D 		str	r2, [r3, #3332]
1604:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 1720              		.loc 1 1604 6 view .LVU484
 1721              		.syntax unified
 1722              	@ 1604 "Middlewares/Third_Party/FreeRTOS/Source/tasks.c" 1
 1723 0082 BFF34F8F 		dsb
 1724              	@ 0 "" 2
1604:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 1725              		.loc 1 1604 6 view .LVU485
ARM GAS  /tmp/ccRhC8mT.s 			page 130


 1726              	@ 1604 "Middlewares/Third_Party/FreeRTOS/Source/tasks.c" 1
 1727 0086 BFF36F8F 		isb
 1728              	@ 0 "" 2
1604:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 1729              		.loc 1 1604 37 view .LVU486
 1730              	.LVL126:
 1731              		.thumb
 1732              		.syntax unified
 1733              	.L118:
1608:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 1734              		.loc 1 1608 30 view .LVU487
1613:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 1735              		.loc 1 1613 5 view .LVU488
1616:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 1736              		.loc 1 1616 3 view .LVU489
 1737 008a FFF7FEFF 		bl	vPortExitCritical
 1738              	.LVL127:
1617:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1739              		.loc 1 1617 2 is_stmt 0 view .LVU490
 1740 008e F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 1741              	.LVL128:
 1742              	.L125:
1464:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1743              		.loc 1 1464 13 view .LVU491
 1744 0090 0027     		movs	r7, #0
 1745 0092 DDE7     		b	.L120
 1746              	.L126:
1509:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						}
 1747              		.loc 1 1509 23 view .LVU492
 1748 0094 0127     		movs	r7, #1
 1749 0096 DBE7     		b	.L120
 1750              	.L127:
1528:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 1751              		.loc 1 1528 21 view .LVU493
 1752 0098 0127     		movs	r7, #1
 1753 009a D9E7     		b	.L120
 1754              	.LVL129:
 1755              	.L130:
1548:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 1756              		.loc 1 1548 7 is_stmt 1 view .LVU494
1548:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 1757              		.loc 1 1548 25 is_stmt 0 view .LVU495
 1758 009c EC62     		str	r4, [r5, #44]
 1759 009e DAE7     		b	.L121
 1760              	.LVL130:
 1761              	.L131:
1584:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 1762              		.loc 1 1584 6 is_stmt 1 view .LVU496
1584:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 1763              		.loc 1 1584 10 is_stmt 0 view .LVU497
 1764 00a0 2C1D     		adds	r4, r5, #4
 1765 00a2 2046     		mov	r0, r4
 1766 00a4 FFF7FEFF 		bl	uxListRemove
 1767              	.LVL131:
1584:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 1768              		.loc 1 1584 8 discriminator 1 view .LVU498
 1769 00a8 30B9     		cbnz	r0, .L124
ARM GAS  /tmp/ccRhC8mT.s 			page 131


1589:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 1770              		.loc 1 1589 7 is_stmt 1 view .LVU499
 1771 00aa 0122     		movs	r2, #1
 1772 00ac B240     		lsls	r2, r2, r6
 1773 00ae 0C49     		ldr	r1, .L132+8
 1774 00b0 0B68     		ldr	r3, [r1]
 1775 00b2 23EA0203 		bic	r3, r3, r2
 1776 00b6 0B60     		str	r3, [r1]
 1777              	.L124:
1593:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 1778              		.loc 1 1593 31 view .LVU500
1595:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 1779              		.loc 1 1595 6 view .LVU501
1595:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 1780              		.loc 1 1595 6 view .LVU502
 1781 00b8 E86A     		ldr	r0, [r5, #44]
 1782 00ba 0123     		movs	r3, #1
 1783 00bc 8340     		lsls	r3, r3, r0
 1784 00be 084A     		ldr	r2, .L132+8
 1785 00c0 1168     		ldr	r1, [r2]
 1786 00c2 0B43     		orrs	r3, r3, r1
 1787 00c4 1360     		str	r3, [r2]
1595:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 1788              		.loc 1 1595 6 view .LVU503
 1789 00c6 00EB8000 		add	r0, r0, r0, lsl #2
 1790 00ca 2146     		mov	r1, r4
 1791 00cc 034B     		ldr	r3, .L132+4
 1792 00ce 03EB8000 		add	r0, r3, r0, lsl #2
 1793 00d2 FFF7FEFF 		bl	vListInsertEnd
 1794              	.LVL132:
1595:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 1795              		.loc 1 1595 36 discriminator 1 view .LVU504
 1796 00d6 CDE7     		b	.L123
 1797              	.L133:
 1798              		.align	2
 1799              	.L132:
 1800 00d8 00000000 		.word	pxCurrentTCB
 1801 00dc 00000000 		.word	pxReadyTasksLists
 1802 00e0 00000000 		.word	uxTopReadyPriority
 1803              		.cfi_endproc
 1804              	.LFE13:
 1806              		.section	.text.vTaskResume,"ax",%progbits
 1807              		.align	1
 1808              		.global	vTaskResume
 1809              		.syntax unified
 1810              		.thumb
 1811              		.thumb_func
 1813              	vTaskResume:
 1814              	.LVL133:
 1815              	.LFB16:
1772:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t * const pxTCB = ( TCB_t * ) xTaskToResume;
 1816              		.loc 1 1772 2 view -0
 1817              		.cfi_startproc
 1818              		@ args = 0, pretend = 0, frame = 0
 1819              		@ frame_needed = 0, uses_anonymous_args = 0
1772:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t * const pxTCB = ( TCB_t * ) xTaskToResume;
 1820              		.loc 1 1772 2 is_stmt 0 view .LVU506
ARM GAS  /tmp/ccRhC8mT.s 			page 132


 1821 0000 38B5     		push	{r3, r4, r5, lr}
 1822              	.LCFI18:
 1823              		.cfi_def_cfa_offset 16
 1824              		.cfi_offset 3, -16
 1825              		.cfi_offset 4, -12
 1826              		.cfi_offset 5, -8
 1827              		.cfi_offset 14, -4
1773:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1828              		.loc 1 1773 2 is_stmt 1 view .LVU507
 1829              	.LVL134:
1776:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1830              		.loc 1 1776 3 view .LVU508
 1831 0002 68B1     		cbz	r0, .L140
 1832 0004 0446     		mov	r4, r0
1776:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1833              		.loc 1 1776 32 discriminator 2 view .LVU509
1780:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 1834              		.loc 1 1780 3 view .LVU510
1780:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 1835              		.loc 1 1780 36 is_stmt 0 discriminator 1 view .LVU511
 1836 0006 1D4B     		ldr	r3, .L142
 1837 0008 1B68     		ldr	r3, [r3]
1780:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 1838              		.loc 1 1780 25 discriminator 1 view .LVU512
 1839 000a 8342     		cmp	r3, r0
 1840 000c 07D0     		beq	.L134
1782:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 1841              		.loc 1 1782 4 is_stmt 1 view .LVU513
 1842 000e FFF7FEFF 		bl	vPortEnterCritical
 1843              	.LVL135:
1784:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 1844              		.loc 1 1784 5 view .LVU514
1784:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 1845              		.loc 1 1784 9 is_stmt 0 view .LVU515
 1846 0012 2046     		mov	r0, r4
 1847 0014 FFF7FEFF 		bl	prvTaskIsTaskSuspended
 1848              	.LVL136:
1784:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 1849              		.loc 1 1784 7 discriminator 1 view .LVU516
 1850 0018 58B9     		cbnz	r0, .L141
 1851              	.L138:
1808:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 1852              		.loc 1 1808 30 is_stmt 1 view .LVU517
1811:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 1853              		.loc 1 1811 4 view .LVU518
 1854 001a FFF7FEFF 		bl	vPortExitCritical
 1855              	.LVL137:
1815:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 1856              		.loc 1 1815 28 view .LVU519
 1857              	.L134:
1817:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1858              		.loc 1 1817 2 is_stmt 0 view .LVU520
 1859 001e 38BD     		pop	{r3, r4, r5, pc}
 1860              	.LVL138:
 1861              	.L140:
1776:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1862              		.loc 1 1776 3 is_stmt 1 discriminator 1 view .LVU521
ARM GAS  /tmp/ccRhC8mT.s 			page 133


 1863              	.LBB128:
 1864              	.LBI128:
 191:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** {
 1865              		.loc 2 191 30 view .LVU522
 1866              	.LBB129:
 193:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
 1867              		.loc 2 193 1 view .LVU523
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	(
 1868              		.loc 2 195 2 view .LVU524
 1869              		.syntax unified
 1870              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h" 1
 1871 0020 4FF05003 			mov r3, #80												
 1872 0024 83F31188 		msr basepri, r3											
 1873 0028 BFF36F8F 		isb														
 1874 002c BFF34F8F 		dsb														
 1875              	
 1876              	@ 0 "" 2
 1877              		.thumb
 1878              		.syntax unified
 1879              	.L136:
 1880              	.LBE129:
 1881              	.LBE128:
1776:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1882              		.loc 1 1776 3 discriminator 3 view .LVU525
1776:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1883              		.loc 1 1776 3 discriminator 3 view .LVU526
 1884 0030 FEE7     		b	.L136
 1885              	.LVL139:
 1886              	.L141:
1786:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1887              		.loc 1 1786 31 view .LVU527
1790:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					prvAddTaskToReadyList( pxTCB );
 1888              		.loc 1 1790 6 view .LVU528
1790:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					prvAddTaskToReadyList( pxTCB );
 1889              		.loc 1 1790 15 is_stmt 0 view .LVU529
 1890 0032 251D     		adds	r5, r4, #4
 1891 0034 2846     		mov	r0, r5
 1892 0036 FFF7FEFF 		bl	uxListRemove
 1893              	.LVL140:
1791:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1894              		.loc 1 1791 6 is_stmt 1 view .LVU530
1791:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1895              		.loc 1 1791 6 view .LVU531
 1896 003a E06A     		ldr	r0, [r4, #44]
 1897 003c 0123     		movs	r3, #1
 1898 003e 8340     		lsls	r3, r3, r0
 1899 0040 0F4A     		ldr	r2, .L142+4
 1900 0042 1168     		ldr	r1, [r2]
 1901 0044 0B43     		orrs	r3, r3, r1
 1902 0046 1360     		str	r3, [r2]
1791:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1903              		.loc 1 1791 6 view .LVU532
 1904 0048 00EB8000 		add	r0, r0, r0, lsl #2
 1905 004c 2946     		mov	r1, r5
 1906 004e 0D4B     		ldr	r3, .L142+8
 1907 0050 03EB8000 		add	r0, r3, r0, lsl #2
 1908 0054 FFF7FEFF 		bl	vListInsertEnd
ARM GAS  /tmp/ccRhC8mT.s 			page 134


 1909              	.LVL141:
1791:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1910              		.loc 1 1791 36 discriminator 1 view .LVU533
1794:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 1911              		.loc 1 1794 6 view .LVU534
1794:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 1912              		.loc 1 1794 15 is_stmt 0 view .LVU535
 1913 0058 E26A     		ldr	r2, [r4, #44]
1794:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 1914              		.loc 1 1794 43 view .LVU536
 1915 005a 084B     		ldr	r3, .L142
 1916 005c 1B68     		ldr	r3, [r3]
 1917 005e DB6A     		ldr	r3, [r3, #44]
1794:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 1918              		.loc 1 1794 8 view .LVU537
 1919 0060 9A42     		cmp	r2, r3
 1920 0062 DAD3     		bcc	.L138
1799:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 1921              		.loc 1 1799 7 is_stmt 1 view .LVU538
 1922 0064 4FF0E023 		mov	r3, #-536813568
 1923 0068 4FF08052 		mov	r2, #268435456
 1924 006c C3F8042D 		str	r2, [r3, #3332]
1799:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 1925              		.loc 1 1799 7 view .LVU539
 1926              		.syntax unified
 1927              	@ 1799 "Middlewares/Third_Party/FreeRTOS/Source/tasks.c" 1
 1928 0070 BFF34F8F 		dsb
 1929              	@ 0 "" 2
1799:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 1930              		.loc 1 1799 7 view .LVU540
 1931              	@ 1799 "Middlewares/Third_Party/FreeRTOS/Source/tasks.c" 1
 1932 0074 BFF36F8F 		isb
 1933              	@ 0 "" 2
1799:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 1934              		.loc 1 1799 38 view .LVU541
 1935              		.thumb
 1936              		.syntax unified
 1937 0078 CFE7     		b	.L138
 1938              	.L143:
 1939 007a 00BF     		.align	2
 1940              	.L142:
 1941 007c 00000000 		.word	pxCurrentTCB
 1942 0080 00000000 		.word	uxTopReadyPriority
 1943 0084 00000000 		.word	pxReadyTasksLists
 1944              		.cfi_endproc
 1945              	.LFE16:
 1947              		.section	.text.xTaskResumeFromISR,"ax",%progbits
 1948              		.align	1
 1949              		.global	xTaskResumeFromISR
 1950              		.syntax unified
 1951              		.thumb
 1952              		.thumb_func
 1954              	xTaskResumeFromISR:
 1955              	.LVL142:
 1956              	.LFB17:
1826:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xYieldRequired = pdFALSE;
 1957              		.loc 1 1826 2 view -0
ARM GAS  /tmp/ccRhC8mT.s 			page 135


 1958              		.cfi_startproc
 1959              		@ args = 0, pretend = 0, frame = 0
 1960              		@ frame_needed = 0, uses_anonymous_args = 0
1826:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xYieldRequired = pdFALSE;
 1961              		.loc 1 1826 2 is_stmt 0 view .LVU543
 1962 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 1963              	.LCFI19:
 1964              		.cfi_def_cfa_offset 24
 1965              		.cfi_offset 3, -24
 1966              		.cfi_offset 4, -20
 1967              		.cfi_offset 5, -16
 1968              		.cfi_offset 6, -12
 1969              		.cfi_offset 7, -8
 1970              		.cfi_offset 14, -4
1827:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t * const pxTCB = ( TCB_t * ) xTaskToResume;
 1971              		.loc 1 1827 2 is_stmt 1 view .LVU544
 1972              	.LVL143:
1828:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	UBaseType_t uxSavedInterruptStatus;
 1973              		.loc 1 1828 2 view .LVU545
1829:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1974              		.loc 1 1829 2 view .LVU546
1831:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1975              		.loc 1 1831 3 view .LVU547
 1976 0002 90B3     		cbz	r0, .L152
 1977 0004 0546     		mov	r5, r0
1831:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1978              		.loc 1 1831 32 discriminator 2 view .LVU548
1849:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1979              		.loc 1 1849 3 view .LVU549
 1980 0006 FFF7FEFF 		bl	vPortValidateInterruptPriority
 1981              	.LVL144:
1851:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 1982              		.loc 1 1851 3 view .LVU550
 1983              	.LBB130:
 1984              	.LBI130:
 207:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** {
 1985              		.loc 2 207 34 view .LVU551
 1986              	.LBB131:
 209:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
 1987              		.loc 2 209 1 view .LVU552
 211:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	(
 1988              		.loc 2 211 2 view .LVU553
 1989              		.syntax unified
 1990              	@ 211 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h" 1
 1991 000a EFF31184 			mrs r4, basepri											
 1992 000e 4FF05003 		mov r3, #80												
 1993 0012 83F31188 		msr basepri, r3											
 1994 0016 BFF36F8F 		isb														
 1995 001a BFF34F8F 		dsb														
 1996              	
 1997              	@ 0 "" 2
 1998              	.LVL145:
 223:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** }
 1999              		.loc 2 223 2 view .LVU554
 223:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** }
 2000              		.loc 2 223 2 is_stmt 0 view .LVU555
 2001              		.thumb
ARM GAS  /tmp/ccRhC8mT.s 			page 136


 2002              		.syntax unified
 2003              	.LBE131:
 2004              	.LBE130:
1853:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 2005              		.loc 1 1853 4 is_stmt 1 view .LVU556
1853:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 2006              		.loc 1 1853 8 is_stmt 0 view .LVU557
 2007 001e 2846     		mov	r0, r5
 2008 0020 FFF7FEFF 		bl	prvTaskIsTaskSuspended
 2009              	.LVL146:
1853:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 2010              		.loc 1 1853 6 discriminator 1 view .LVU558
 2011 0024 0646     		mov	r6, r0
 2012 0026 E0B1     		cbz	r0, .L147
1855:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2013              		.loc 1 1855 39 is_stmt 1 view .LVU559
1858:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 2014              		.loc 1 1858 5 view .LVU560
1858:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 2015              		.loc 1 1858 30 is_stmt 0 view .LVU561
 2016 0028 194B     		ldr	r3, .L153
 2017 002a 1B68     		ldr	r3, [r3]
1858:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 2018              		.loc 1 1858 7 view .LVU562
 2019 002c 43BB     		cbnz	r3, .L148
1862:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 2020              		.loc 1 1862 6 is_stmt 1 view .LVU563
1862:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 2021              		.loc 1 1862 15 is_stmt 0 view .LVU564
 2022 002e EA6A     		ldr	r2, [r5, #44]
1862:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 2023              		.loc 1 1862 43 view .LVU565
 2024 0030 184B     		ldr	r3, .L153+4
 2025 0032 1B68     		ldr	r3, [r3]
 2026 0034 DB6A     		ldr	r3, [r3, #44]
1862:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 2027              		.loc 1 1862 8 view .LVU566
 2028 0036 9A42     		cmp	r2, r3
 2029 0038 20D2     		bcs	.L150
1827:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t * const pxTCB = ( TCB_t * ) xTaskToResume;
 2030              		.loc 1 1827 13 view .LVU567
 2031 003a 0026     		movs	r6, #0
 2032              	.L149:
 2033              	.LVL147:
1868:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 2034              		.loc 1 1868 31 is_stmt 1 view .LVU568
1871:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					prvAddTaskToReadyList( pxTCB );
 2035              		.loc 1 1871 6 view .LVU569
1871:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					prvAddTaskToReadyList( pxTCB );
 2036              		.loc 1 1871 15 is_stmt 0 view .LVU570
 2037 003c 2F1D     		adds	r7, r5, #4
 2038 003e 3846     		mov	r0, r7
 2039 0040 FFF7FEFF 		bl	uxListRemove
 2040              	.LVL148:
1872:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 2041              		.loc 1 1872 6 is_stmt 1 view .LVU571
1872:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
ARM GAS  /tmp/ccRhC8mT.s 			page 137


 2042              		.loc 1 1872 6 view .LVU572
 2043 0044 E86A     		ldr	r0, [r5, #44]
 2044 0046 0123     		movs	r3, #1
 2045 0048 8340     		lsls	r3, r3, r0
 2046 004a 134A     		ldr	r2, .L153+8
 2047 004c 1168     		ldr	r1, [r2]
 2048 004e 0B43     		orrs	r3, r3, r1
 2049 0050 1360     		str	r3, [r2]
1872:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 2050              		.loc 1 1872 6 view .LVU573
 2051 0052 00EB8000 		add	r0, r0, r0, lsl #2
 2052 0056 3946     		mov	r1, r7
 2053 0058 104B     		ldr	r3, .L153+12
 2054 005a 03EB8000 		add	r0, r3, r0, lsl #2
 2055 005e FFF7FEFF 		bl	vListInsertEnd
 2056              	.LVL149:
1872:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 2057              		.loc 1 1872 36 discriminator 1 view .LVU574
 2058              	.L147:
1884:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 2059              		.loc 1 1884 29 view .LVU575
1887:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2060              		.loc 1 1887 3 view .LVU576
 2061              	.LBB132:
 2062              	.LBI132:
 227:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** {
 2063              		.loc 2 227 30 view .LVU577
 2064              	.LBB133:
 2065              		.loc 2 229 2 view .LVU578
 2066              		.syntax unified
 2067              	@ 229 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h" 1
 2068 0062 84F31188 			msr basepri, r4	
 2069              	@ 0 "" 2
 2070              		.thumb
 2071              		.syntax unified
 2072              	.LBE133:
 2073              	.LBE132:
1889:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 2074              		.loc 1 1889 3 view .LVU579
1890:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2075              		.loc 1 1890 2 is_stmt 0 view .LVU580
 2076 0066 3046     		mov	r0, r6
 2077 0068 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 2078              	.LVL150:
 2079              	.L152:
1831:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2080              		.loc 1 1831 3 is_stmt 1 discriminator 1 view .LVU581
 2081              	.LBB134:
 2082              	.LBI134:
 191:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** {
 2083              		.loc 2 191 30 view .LVU582
 2084              	.LBB135:
 193:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
 2085              		.loc 2 193 1 view .LVU583
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	(
 2086              		.loc 2 195 2 view .LVU584
 2087              		.syntax unified
ARM GAS  /tmp/ccRhC8mT.s 			page 138


 2088              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h" 1
 2089 006a 4FF05003 			mov r3, #80												
 2090 006e 83F31188 		msr basepri, r3											
 2091 0072 BFF36F8F 		isb														
 2092 0076 BFF34F8F 		dsb														
 2093              	
 2094              	@ 0 "" 2
 2095              		.thumb
 2096              		.syntax unified
 2097              	.L146:
 2098              	.LBE135:
 2099              	.LBE134:
1831:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2100              		.loc 1 1831 3 discriminator 3 view .LVU585
1831:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2101              		.loc 1 1831 3 discriminator 3 view .LVU586
 2102 007a FEE7     		b	.L146
 2103              	.LVL151:
 2104              	.L150:
1864:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 2105              		.loc 1 1864 22 is_stmt 0 view .LVU587
 2106 007c 0126     		movs	r6, #1
 2107 007e DDE7     		b	.L149
 2108              	.L148:
1879:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 2109              		.loc 1 1879 6 is_stmt 1 view .LVU588
 2110 0080 05F11801 		add	r1, r5, #24
 2111 0084 0648     		ldr	r0, .L153+16
 2112 0086 FFF7FEFF 		bl	vListInsertEnd
 2113              	.LVL152:
1827:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t * const pxTCB = ( TCB_t * ) xTaskToResume;
 2114              		.loc 1 1827 13 is_stmt 0 view .LVU589
 2115 008a 0026     		movs	r6, #0
 2116 008c E9E7     		b	.L147
 2117              	.L154:
 2118 008e 00BF     		.align	2
 2119              	.L153:
 2120 0090 00000000 		.word	uxSchedulerSuspended
 2121 0094 00000000 		.word	pxCurrentTCB
 2122 0098 00000000 		.word	uxTopReadyPriority
 2123 009c 00000000 		.word	pxReadyTasksLists
 2124 00a0 00000000 		.word	xPendingReadyList
 2125              		.cfi_endproc
 2126              	.LFE17:
 2128              		.section	.rodata.vTaskStartScheduler.str1.4,"aMS",%progbits,1
 2129              		.align	2
 2130              	.LC0:
 2131 0000 49444C45 		.ascii	"IDLE\000"
 2131      00
 2132              		.section	.text.vTaskStartScheduler,"ax",%progbits
 2133              		.align	1
 2134              		.global	vTaskStartScheduler
 2135              		.syntax unified
 2136              		.thumb
 2137              		.thumb_func
 2139              	vTaskStartScheduler:
 2140              	.LFB18:
ARM GAS  /tmp/ccRhC8mT.s 			page 139


1896:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** BaseType_t xReturn;
 2141              		.loc 1 1896 1 is_stmt 1 view -0
 2142              		.cfi_startproc
 2143              		@ args = 0, pretend = 0, frame = 16
 2144              		@ frame_needed = 0, uses_anonymous_args = 0
 2145 0000 10B5     		push	{r4, lr}
 2146              	.LCFI20:
 2147              		.cfi_def_cfa_offset 8
 2148              		.cfi_offset 4, -8
 2149              		.cfi_offset 14, -4
 2150 0002 88B0     		sub	sp, sp, #32
 2151              	.LCFI21:
 2152              		.cfi_def_cfa_offset 40
1897:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2153              		.loc 1 1897 1 view .LVU591
 2154              	.LBB136:
1902:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		StackType_t *pxIdleTaskStackBuffer = NULL;
 2155              		.loc 1 1902 3 view .LVU592
1902:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		StackType_t *pxIdleTaskStackBuffer = NULL;
 2156              		.loc 1 1902 17 is_stmt 0 view .LVU593
 2157 0004 0024     		movs	r4, #0
 2158 0006 0594     		str	r4, [sp, #20]
1903:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		uint32_t ulIdleTaskStackSize;
 2159              		.loc 1 1903 3 is_stmt 1 view .LVU594
1903:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		uint32_t ulIdleTaskStackSize;
 2160              		.loc 1 1903 16 is_stmt 0 view .LVU595
 2161 0008 0694     		str	r4, [sp, #24]
1904:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2162              		.loc 1 1904 3 is_stmt 1 view .LVU596
1908:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		xIdleTaskHandle = xTaskCreateStatic(	prvIdleTask,
 2163              		.loc 1 1908 3 view .LVU597
 2164 000a 07AA     		add	r2, sp, #28
 2165 000c 06A9     		add	r1, sp, #24
 2166 000e 05A8     		add	r0, sp, #20
 2167 0010 FFF7FEFF 		bl	vApplicationGetIdleTaskMemory
 2168              	.LVL153:
1909:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 												configIDLE_TASK_NAME,
 2169              		.loc 1 1909 3 view .LVU598
1909:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 												configIDLE_TASK_NAME,
 2170              		.loc 1 1909 21 is_stmt 0 view .LVU599
 2171 0014 059B     		ldr	r3, [sp, #20]
 2172 0016 0293     		str	r3, [sp, #8]
 2173 0018 069B     		ldr	r3, [sp, #24]
 2174 001a 0193     		str	r3, [sp, #4]
 2175 001c 0094     		str	r4, [sp]
 2176 001e 2346     		mov	r3, r4
 2177 0020 079A     		ldr	r2, [sp, #28]
 2178 0022 0E49     		ldr	r1, .L159
 2179 0024 0E48     		ldr	r0, .L159+4
 2180 0026 FFF7FEFF 		bl	xTaskCreateStatic
 2181              	.LVL154:
1909:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 												configIDLE_TASK_NAME,
 2182              		.loc 1 1909 19 discriminator 1 view .LVU600
 2183 002a 0E4B     		ldr	r3, .L159+8
 2184 002c 1860     		str	r0, [r3]
1917:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 2185              		.loc 1 1917 3 is_stmt 1 view .LVU601
ARM GAS  /tmp/ccRhC8mT.s 			page 140


1917:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 2186              		.loc 1 1917 5 is_stmt 0 view .LVU602
 2187 002e 90B1     		cbz	r0, .L155
 2188              	.LVL155:
1917:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 2189              		.loc 1 1917 5 view .LVU603
 2190              	.LBE136:
1951:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 2191              		.loc 1 1951 2 is_stmt 1 view .LVU604
1967:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2192              		.loc 1 1967 3 view .LVU605
 2193              	.LBB137:
 2194              	.LBI137:
 191:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** {
 2195              		.loc 2 191 30 view .LVU606
 2196              	.LBB138:
 193:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
 2197              		.loc 2 193 1 view .LVU607
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	(
 2198              		.loc 2 195 2 view .LVU608
 2199              		.syntax unified
 2200              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h" 1
 2201 0030 4FF05003 			mov r3, #80												
 2202 0034 83F31188 		msr basepri, r3											
 2203 0038 BFF36F8F 		isb														
 2204 003c BFF34F8F 		dsb														
 2205              	
 2206              	@ 0 "" 2
 2207              		.thumb
 2208              		.syntax unified
 2209              	.LBE138:
 2210              	.LBE137:
1977:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		xSchedulerRunning = pdTRUE;
 2211              		.loc 1 1977 3 view .LVU609
1977:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		xSchedulerRunning = pdTRUE;
 2212              		.loc 1 1977 24 is_stmt 0 view .LVU610
 2213 0040 094B     		ldr	r3, .L159+12
 2214 0042 4FF0FF32 		mov	r2, #-1
 2215 0046 1A60     		str	r2, [r3]
1978:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		xTickCount = ( TickType_t ) 0U;
 2216              		.loc 1 1978 3 is_stmt 1 view .LVU611
1978:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		xTickCount = ( TickType_t ) 0U;
 2217              		.loc 1 1978 21 is_stmt 0 view .LVU612
 2218 0048 084B     		ldr	r3, .L159+16
 2219 004a 0122     		movs	r2, #1
 2220 004c 1A60     		str	r2, [r3]
1979:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2221              		.loc 1 1979 3 is_stmt 1 view .LVU613
1979:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2222              		.loc 1 1979 14 is_stmt 0 view .LVU614
 2223 004e 084B     		ldr	r3, .L159+20
 2224 0050 1C60     		str	r4, [r3]
1987:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2225              		.loc 1 1987 43 is_stmt 1 view .LVU615
1991:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 2226              		.loc 1 1991 3 view .LVU616
1991:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
ARM GAS  /tmp/ccRhC8mT.s 			page 141


 2227              		.loc 1 1991 7 is_stmt 0 view .LVU617
 2228 0052 FFF7FEFF 		bl	xPortStartScheduler
 2229              	.LVL156:
1995:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
 2230              		.loc 1 1995 3 is_stmt 1 view .LVU618
1999:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 2231              		.loc 1 1999 3 view .LVU619
 2232              	.L155:
2012:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
 2233              		.loc 1 2012 1 is_stmt 0 view .LVU620
 2234 0056 08B0     		add	sp, sp, #32
 2235              	.LCFI22:
 2236              		.cfi_def_cfa_offset 8
 2237              		@ sp needed
 2238 0058 10BD     		pop	{r4, pc}
 2239              	.L160:
 2240 005a 00BF     		.align	2
 2241              	.L159:
 2242 005c 00000000 		.word	.LC0
 2243 0060 00000000 		.word	prvIdleTask
 2244 0064 00000000 		.word	xIdleTaskHandle
 2245 0068 00000000 		.word	xNextTaskUnblockTime
 2246 006c 00000000 		.word	xSchedulerRunning
 2247 0070 00000000 		.word	xTickCount
 2248              		.cfi_endproc
 2249              	.LFE18:
 2251              		.section	.text.vTaskEndScheduler,"ax",%progbits
 2252              		.align	1
 2253              		.global	vTaskEndScheduler
 2254              		.syntax unified
 2255              		.thumb
 2256              		.thumb_func
 2258              	vTaskEndScheduler:
 2259              	.LFB19:
2016:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* Stop the scheduler interrupts and call the portable scheduler end
 2260              		.loc 1 2016 1 is_stmt 1 view -0
 2261              		.cfi_startproc
 2262              		@ args = 0, pretend = 0, frame = 0
 2263              		@ frame_needed = 0, uses_anonymous_args = 0
 2264 0000 08B5     		push	{r3, lr}
 2265              	.LCFI23:
 2266              		.cfi_def_cfa_offset 8
 2267              		.cfi_offset 3, -8
 2268              		.cfi_offset 14, -4
2020:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	xSchedulerRunning = pdFALSE;
 2269              		.loc 1 2020 2 view .LVU622
 2270              	.LBB139:
 2271              	.LBI139:
 191:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** {
 2272              		.loc 2 191 30 view .LVU623
 2273              	.LBB140:
 193:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
 2274              		.loc 2 193 1 view .LVU624
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	(
 2275              		.loc 2 195 2 view .LVU625
 2276              		.syntax unified
 2277              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h" 1
ARM GAS  /tmp/ccRhC8mT.s 			page 142


 2278 0002 4FF05003 			mov r3, #80												
 2279 0006 83F31188 		msr basepri, r3											
 2280 000a BFF36F8F 		isb														
 2281 000e BFF34F8F 		dsb														
 2282              	
 2283              	@ 0 "" 2
 2284              		.thumb
 2285              		.syntax unified
 2286              	.LBE140:
 2287              	.LBE139:
2021:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	vPortEndScheduler();
 2288              		.loc 1 2021 2 view .LVU626
2021:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	vPortEndScheduler();
 2289              		.loc 1 2021 20 is_stmt 0 view .LVU627
 2290 0012 034B     		ldr	r3, .L163
 2291 0014 0022     		movs	r2, #0
 2292 0016 1A60     		str	r2, [r3]
2022:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
 2293              		.loc 1 2022 2 is_stmt 1 view .LVU628
 2294 0018 FFF7FEFF 		bl	vPortEndScheduler
 2295              	.LVL157:
2023:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*----------------------------------------------------------*/
 2296              		.loc 1 2023 1 is_stmt 0 view .LVU629
 2297 001c 08BD     		pop	{r3, pc}
 2298              	.L164:
 2299 001e 00BF     		.align	2
 2300              	.L163:
 2301 0020 00000000 		.word	xSchedulerRunning
 2302              		.cfi_endproc
 2303              	.LFE19:
 2305              		.section	.text.vTaskSuspendAll,"ax",%progbits
 2306              		.align	1
 2307              		.global	vTaskSuspendAll
 2308              		.syntax unified
 2309              		.thumb
 2310              		.thumb_func
 2312              	vTaskSuspendAll:
 2313              	.LFB20:
2027:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* A critical section is not required as the variable is of type
 2314              		.loc 1 2027 1 is_stmt 1 view -0
 2315              		.cfi_startproc
 2316              		@ args = 0, pretend = 0, frame = 0
 2317              		@ frame_needed = 0, uses_anonymous_args = 0
 2318              		@ link register save eliminated.
2032:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
 2319              		.loc 1 2032 2 view .LVU631
 2320 0000 024A     		ldr	r2, .L166
 2321 0002 1368     		ldr	r3, [r2]
 2322 0004 0133     		adds	r3, r3, #1
 2323 0006 1360     		str	r3, [r2]
2033:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*----------------------------------------------------------*/
 2324              		.loc 1 2033 1 is_stmt 0 view .LVU632
 2325 0008 7047     		bx	lr
 2326              	.L167:
 2327 000a 00BF     		.align	2
 2328              	.L166:
 2329 000c 00000000 		.word	uxSchedulerSuspended
ARM GAS  /tmp/ccRhC8mT.s 			page 143


 2330              		.cfi_endproc
 2331              	.LFE20:
 2333              		.section	.text.xTaskGetTickCount,"ax",%progbits
 2334              		.align	1
 2335              		.global	xTaskGetTickCount
 2336              		.syntax unified
 2337              		.thumb
 2338              		.thumb_func
 2340              	xTaskGetTickCount:
 2341              	.LFB22:
2210:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** TickType_t xTicks;
 2342              		.loc 1 2210 1 is_stmt 1 view -0
 2343              		.cfi_startproc
 2344              		@ args = 0, pretend = 0, frame = 0
 2345              		@ frame_needed = 0, uses_anonymous_args = 0
 2346              		@ link register save eliminated.
2211:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2347              		.loc 1 2211 1 view .LVU634
2214:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 2348              		.loc 1 2214 32 view .LVU635
2216:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 2349              		.loc 1 2216 3 view .LVU636
2216:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 2350              		.loc 1 2216 10 is_stmt 0 view .LVU637
 2351 0000 014B     		ldr	r3, .L169
 2352 0002 1868     		ldr	r0, [r3]
 2353              	.LVL158:
2218:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2354              		.loc 1 2218 31 is_stmt 1 view .LVU638
2220:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
 2355              		.loc 1 2220 2 view .LVU639
2221:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
 2356              		.loc 1 2221 1 is_stmt 0 view .LVU640
 2357 0004 7047     		bx	lr
 2358              	.L170:
 2359 0006 00BF     		.align	2
 2360              	.L169:
 2361 0008 00000000 		.word	xTickCount
 2362              		.cfi_endproc
 2363              	.LFE22:
 2365              		.section	.text.xTaskGetTickCountFromISR,"ax",%progbits
 2366              		.align	1
 2367              		.global	xTaskGetTickCountFromISR
 2368              		.syntax unified
 2369              		.thumb
 2370              		.thumb_func
 2372              	xTaskGetTickCountFromISR:
 2373              	.LFB23:
2225:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** TickType_t xReturn;
 2374              		.loc 1 2225 1 is_stmt 1 view -0
 2375              		.cfi_startproc
 2376              		@ args = 0, pretend = 0, frame = 0
 2377              		@ frame_needed = 0, uses_anonymous_args = 0
 2378 0000 08B5     		push	{r3, lr}
 2379              	.LCFI24:
 2380              		.cfi_def_cfa_offset 8
 2381              		.cfi_offset 3, -8
ARM GAS  /tmp/ccRhC8mT.s 			page 144


 2382              		.cfi_offset 14, -4
2226:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** UBaseType_t uxSavedInterruptStatus;
 2383              		.loc 1 2226 1 view .LVU642
2227:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2384              		.loc 1 2227 1 view .LVU643
2243:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2385              		.loc 1 2243 2 view .LVU644
 2386 0002 FFF7FEFF 		bl	vPortValidateInterruptPriority
 2387              	.LVL159:
2245:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 2388              		.loc 1 2245 2 view .LVU645
2247:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 2389              		.loc 1 2247 3 view .LVU646
2247:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 2390              		.loc 1 2247 11 is_stmt 0 view .LVU647
 2391 0006 014B     		ldr	r3, .L173
 2392 0008 1868     		ldr	r0, [r3]
 2393              	.LVL160:
2249:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2394              		.loc 1 2249 2 is_stmt 1 view .LVU648
2251:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
 2395              		.loc 1 2251 2 view .LVU649
2252:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
 2396              		.loc 1 2252 1 is_stmt 0 view .LVU650
 2397 000a 08BD     		pop	{r3, pc}
 2398              	.L174:
 2399              		.align	2
 2400              	.L173:
 2401 000c 00000000 		.word	xTickCount
 2402              		.cfi_endproc
 2403              	.LFE23:
 2405              		.section	.text.uxTaskGetNumberOfTasks,"ax",%progbits
 2406              		.align	1
 2407              		.global	uxTaskGetNumberOfTasks
 2408              		.syntax unified
 2409              		.thumb
 2410              		.thumb_func
 2412              	uxTaskGetNumberOfTasks:
 2413              	.LFB24:
2256:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* A critical section is not required because the variables are of type
 2414              		.loc 1 2256 1 is_stmt 1 view -0
 2415              		.cfi_startproc
 2416              		@ args = 0, pretend = 0, frame = 0
 2417              		@ frame_needed = 0, uses_anonymous_args = 0
 2418              		@ link register save eliminated.
2259:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
 2419              		.loc 1 2259 2 view .LVU652
2259:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
 2420              		.loc 1 2259 9 is_stmt 0 view .LVU653
 2421 0000 014B     		ldr	r3, .L176
 2422 0002 1868     		ldr	r0, [r3]
2260:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
 2423              		.loc 1 2260 1 view .LVU654
 2424 0004 7047     		bx	lr
 2425              	.L177:
 2426 0006 00BF     		.align	2
 2427              	.L176:
ARM GAS  /tmp/ccRhC8mT.s 			page 145


 2428 0008 00000000 		.word	uxCurrentNumberOfTasks
 2429              		.cfi_endproc
 2430              	.LFE24:
 2432              		.section	.text.pcTaskGetName,"ax",%progbits
 2433              		.align	1
 2434              		.global	pcTaskGetName
 2435              		.syntax unified
 2436              		.thumb
 2437              		.thumb_func
 2439              	pcTaskGetName:
 2440              	.LVL161:
 2441              	.LFB25:
2264:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** TCB_t *pxTCB;
 2442              		.loc 1 2264 1 is_stmt 1 view -0
 2443              		.cfi_startproc
 2444              		@ args = 0, pretend = 0, frame = 0
 2445              		@ frame_needed = 0, uses_anonymous_args = 0
 2446              		@ link register save eliminated.
2265:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2447              		.loc 1 2265 1 view .LVU656
2269:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	configASSERT( pxTCB );
 2448              		.loc 1 2269 2 view .LVU657
2269:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	configASSERT( pxTCB );
 2449              		.loc 1 2269 10 is_stmt 0 view .LVU658
 2450 0000 0346     		mov	r3, r0
 2451 0002 10B1     		cbz	r0, .L181
 2452              	.LVL162:
 2453              	.L179:
2270:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	return &( pxTCB->pcTaskName[ 0 ] );
 2454              		.loc 1 2270 23 is_stmt 1 discriminator 2 view .LVU659
2271:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
 2455              		.loc 1 2271 2 view .LVU660
2272:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
 2456              		.loc 1 2272 1 is_stmt 0 view .LVU661
 2457 0004 03F13400 		add	r0, r3, #52
 2458 0008 7047     		bx	lr
 2459              	.LVL163:
 2460              	.L181:
2269:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	configASSERT( pxTCB );
 2461              		.loc 1 2269 10 discriminator 1 view .LVU662
 2462 000a 064B     		ldr	r3, .L182
 2463 000c 1B68     		ldr	r3, [r3]
 2464              	.LVL164:
2270:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	return &( pxTCB->pcTaskName[ 0 ] );
 2465              		.loc 1 2270 2 is_stmt 1 view .LVU663
 2466 000e 002B     		cmp	r3, #0
 2467 0010 F8D1     		bne	.L179
2270:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	return &( pxTCB->pcTaskName[ 0 ] );
 2468              		.loc 1 2270 2 discriminator 1 view .LVU664
 2469              	.LBB141:
 2470              	.LBI141:
 191:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** {
 2471              		.loc 2 191 30 view .LVU665
 2472              	.LBB142:
 193:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
 2473              		.loc 2 193 1 view .LVU666
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	(
ARM GAS  /tmp/ccRhC8mT.s 			page 146


 2474              		.loc 2 195 2 view .LVU667
 2475              		.syntax unified
 2476              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h" 1
 2477 0012 4FF05003 			mov r3, #80												
 2478 0016 83F31188 		msr basepri, r3											
 2479 001a BFF36F8F 		isb														
 2480 001e BFF34F8F 		dsb														
 2481              	
 2482              	@ 0 "" 2
 2483              	.LVL165:
 2484              		.thumb
 2485              		.syntax unified
 2486              	.L180:
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	(
 2487              		.loc 2 195 2 is_stmt 0 view .LVU668
 2488              	.LBE142:
 2489              	.LBE141:
2270:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	return &( pxTCB->pcTaskName[ 0 ] );
 2490              		.loc 1 2270 2 is_stmt 1 discriminator 3 view .LVU669
2270:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	return &( pxTCB->pcTaskName[ 0 ] );
 2491              		.loc 1 2270 2 discriminator 3 view .LVU670
 2492 0022 FEE7     		b	.L180
 2493              	.L183:
 2494              		.align	2
 2495              	.L182:
 2496 0024 00000000 		.word	pxCurrentTCB
 2497              		.cfi_endproc
 2498              	.LFE25:
 2500              		.section	.text.xTaskIncrementTick,"ax",%progbits
 2501              		.align	1
 2502              		.global	xTaskIncrementTick
 2503              		.syntax unified
 2504              		.thumb
 2505              		.thumb_func
 2507              	xTaskIncrementTick:
 2508              	.LFB26:
2584:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** TCB_t * pxTCB;
 2509              		.loc 1 2584 1 view -0
 2510              		.cfi_startproc
 2511              		@ args = 0, pretend = 0, frame = 0
 2512              		@ frame_needed = 0, uses_anonymous_args = 0
 2513 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 2514              	.LCFI25:
 2515              		.cfi_def_cfa_offset 24
 2516              		.cfi_offset 3, -24
 2517              		.cfi_offset 4, -20
 2518              		.cfi_offset 5, -16
 2519              		.cfi_offset 6, -12
 2520              		.cfi_offset 7, -8
 2521              		.cfi_offset 14, -4
2585:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** TickType_t xItemValue;
 2522              		.loc 1 2585 1 view .LVU672
2586:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** BaseType_t xSwitchRequired = pdFALSE;
 2523              		.loc 1 2586 1 view .LVU673
2587:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2524              		.loc 1 2587 1 view .LVU674
 2525              	.LVL166:
ARM GAS  /tmp/ccRhC8mT.s 			page 147


2592:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 2526              		.loc 1 2592 40 view .LVU675
2593:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 2527              		.loc 1 2593 2 view .LVU676
2593:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 2528              		.loc 1 2593 27 is_stmt 0 view .LVU677
 2529 0002 3A4B     		ldr	r3, .L205
 2530 0004 1B68     		ldr	r3, [r3]
2593:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 2531              		.loc 1 2593 4 view .LVU678
 2532 0006 002B     		cmp	r3, #0
 2533 0008 64D1     		bne	.L185
 2534              	.LBB143:
2597:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2535              		.loc 1 2597 3 is_stmt 1 view .LVU679
2597:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2536              		.loc 1 2597 49 is_stmt 0 view .LVU680
 2537 000a 394B     		ldr	r3, .L205+4
 2538 000c 1D68     		ldr	r5, [r3]
2597:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2539              		.loc 1 2597 20 view .LVU681
 2540 000e 0135     		adds	r5, r5, #1
 2541              	.LVL167:
2601:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2542              		.loc 1 2601 3 is_stmt 1 view .LVU682
2601:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2543              		.loc 1 2601 14 is_stmt 0 view .LVU683
 2544 0010 1D60     		str	r5, [r3]
2603:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 2545              		.loc 1 2603 3 is_stmt 1 view .LVU684
2603:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 2546              		.loc 1 2603 5 is_stmt 0 view .LVU685
 2547 0012 C5B9     		cbnz	r5, .L186
 2548              	.LBB144:
2605:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 2549              		.loc 1 2605 4 is_stmt 1 view .LVU686
2605:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 2550              		.loc 1 2605 4 view .LVU687
 2551 0014 374B     		ldr	r3, .L205+8
 2552 0016 1B68     		ldr	r3, [r3]
 2553 0018 1B68     		ldr	r3, [r3]
 2554 001a 43B1     		cbz	r3, .L187
2605:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 2555              		.loc 1 2605 4 discriminator 1 view .LVU688
 2556              	.LBB145:
 2557              	.LBI145:
 191:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** {
 2558              		.loc 2 191 30 view .LVU689
 2559              	.LBB146:
 193:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
 2560              		.loc 2 193 1 view .LVU690
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	(
 2561              		.loc 2 195 2 view .LVU691
 2562              		.syntax unified
 2563              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h" 1
 2564 001c 4FF05003 			mov r3, #80												
 2565 0020 83F31188 		msr basepri, r3											
ARM GAS  /tmp/ccRhC8mT.s 			page 148


 2566 0024 BFF36F8F 		isb														
 2567 0028 BFF34F8F 		dsb														
 2568              	
 2569              	@ 0 "" 2
 2570              		.thumb
 2571              		.syntax unified
 2572              	.L188:
 2573              	.LBE146:
 2574              	.LBE145:
2605:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 2575              		.loc 1 2605 4 discriminator 3 view .LVU692
2605:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 2576              		.loc 1 2605 4 discriminator 3 view .LVU693
 2577 002c FEE7     		b	.L188
 2578              	.L187:
2605:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 2579              		.loc 1 2605 4 discriminator 2 view .LVU694
2605:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 2580              		.loc 1 2605 4 discriminator 2 view .LVU695
 2581 002e 314A     		ldr	r2, .L205+8
 2582 0030 1168     		ldr	r1, [r2]
 2583              	.LVL168:
2605:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 2584              		.loc 1 2605 4 discriminator 2 view .LVU696
 2585 0032 314B     		ldr	r3, .L205+12
 2586 0034 1868     		ldr	r0, [r3]
 2587 0036 1060     		str	r0, [r2]
2605:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 2588              		.loc 1 2605 4 discriminator 2 view .LVU697
 2589 0038 1960     		str	r1, [r3]
2605:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 2590              		.loc 1 2605 4 discriminator 2 view .LVU698
 2591 003a 304A     		ldr	r2, .L205+16
 2592 003c 1368     		ldr	r3, [r2]
 2593 003e 0133     		adds	r3, r3, #1
 2594 0040 1360     		str	r3, [r2]
2605:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 2595              		.loc 1 2605 4 discriminator 2 view .LVU699
 2596 0042 FFF7FEFF 		bl	prvResetNextTaskUnblockTime
 2597              	.LVL169:
2605:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 2598              		.loc 1 2605 4 is_stmt 0 discriminator 2 view .LVU700
 2599              	.LBE144:
2605:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 2600              		.loc 1 2605 30 is_stmt 1 discriminator 1 view .LVU701
 2601              	.L186:
2609:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 2602              		.loc 1 2609 28 view .LVU702
2616:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 2603              		.loc 1 2616 3 view .LVU703
2616:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 2604              		.loc 1 2616 23 is_stmt 0 view .LVU704
 2605 0046 2E4B     		ldr	r3, .L205+20
 2606 0048 1B68     		ldr	r3, [r3]
2616:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 2607              		.loc 1 2616 5 view .LVU705
 2608 004a AB42     		cmp	r3, r5
ARM GAS  /tmp/ccRhC8mT.s 			page 149


 2609 004c 38D9     		bls	.L198
 2610              	.LBE143:
2587:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2611              		.loc 1 2587 12 view .LVU706
 2612 004e 0027     		movs	r7, #0
 2613              	.LVL170:
 2614              	.L190:
 2615              	.LBB147:
2699:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 2616              		.loc 1 2699 4 is_stmt 1 view .LVU707
2699:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 2617              		.loc 1 2699 8 is_stmt 0 view .LVU708
 2618 0050 2C4B     		ldr	r3, .L205+24
 2619 0052 1B68     		ldr	r3, [r3]
 2620 0054 DB6A     		ldr	r3, [r3, #44]
 2621 0056 03EB8303 		add	r3, r3, r3, lsl #2
 2622 005a 9A00     		lsls	r2, r3, #2
 2623 005c 2A4B     		ldr	r3, .L205+28
 2624 005e 9B58     		ldr	r3, [r3, r2]
2699:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 2625              		.loc 1 2699 6 view .LVU709
 2626 0060 012B     		cmp	r3, #1
 2627 0062 3CD9     		bls	.L196
2701:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 2628              		.loc 1 2701 21 view .LVU710
 2629 0064 0127     		movs	r7, #1
 2630              	.LVL171:
2701:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 2631              		.loc 1 2701 21 view .LVU711
 2632 0066 3AE0     		b	.L196
 2633              	.LVL172:
 2634              	.L199:
2682:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						}
 2635              		.loc 1 2682 24 view .LVU712
 2636 0068 0127     		movs	r7, #1
 2637              	.LVL173:
 2638              	.L189:
2618:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 2639              		.loc 1 2618 4 is_stmt 1 view .LVU713
2620:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 2640              		.loc 1 2620 5 view .LVU714
2620:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 2641              		.loc 1 2620 9 is_stmt 0 view .LVU715
 2642 006a 224B     		ldr	r3, .L205+8
 2643 006c 1B68     		ldr	r3, [r3]
 2644 006e 1B68     		ldr	r3, [r3]
2620:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 2645              		.loc 1 2620 48 view .LVU716
 2646 0070 43B3     		cbz	r3, .L203
2636:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					xItemValue = listGET_LIST_ITEM_VALUE( &( pxTCB->xStateListItem ) );
 2647              		.loc 1 2636 6 is_stmt 1 view .LVU717
2636:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					xItemValue = listGET_LIST_ITEM_VALUE( &( pxTCB->xStateListItem ) );
 2648              		.loc 1 2636 26 is_stmt 0 view .LVU718
 2649 0072 204B     		ldr	r3, .L205+8
 2650 0074 1B68     		ldr	r3, [r3]
 2651 0076 DB68     		ldr	r3, [r3, #12]
2636:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					xItemValue = listGET_LIST_ITEM_VALUE( &( pxTCB->xStateListItem ) );
ARM GAS  /tmp/ccRhC8mT.s 			page 150


 2652              		.loc 1 2636 12 view .LVU719
 2653 0078 DC68     		ldr	r4, [r3, #12]
 2654              	.LVL174:
2637:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2655              		.loc 1 2637 6 is_stmt 1 view .LVU720
2637:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2656              		.loc 1 2637 17 is_stmt 0 view .LVU721
 2657 007a 6368     		ldr	r3, [r4, #4]
 2658              	.LVL175:
2639:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 2659              		.loc 1 2639 6 is_stmt 1 view .LVU722
2639:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 2660              		.loc 1 2639 8 is_stmt 0 view .LVU723
 2661 007c 9D42     		cmp	r5, r3
 2662 007e 26D3     		bcc	.L204
2651:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 2663              		.loc 1 2651 31 is_stmt 1 view .LVU724
2655:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2664              		.loc 1 2655 6 view .LVU725
2655:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2665              		.loc 1 2655 15 is_stmt 0 view .LVU726
 2666 0080 261D     		adds	r6, r4, #4
 2667 0082 3046     		mov	r0, r6
 2668 0084 FFF7FEFF 		bl	uxListRemove
 2669              	.LVL176:
2659:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 2670              		.loc 1 2659 6 is_stmt 1 view .LVU727
2659:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 2671              		.loc 1 2659 10 is_stmt 0 view .LVU728
 2672 0088 A36A     		ldr	r3, [r4, #40]
2659:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 2673              		.loc 1 2659 8 view .LVU729
 2674 008a 1BB1     		cbz	r3, .L193
2661:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 2675              		.loc 1 2661 7 is_stmt 1 view .LVU730
2661:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 2676              		.loc 1 2661 16 is_stmt 0 view .LVU731
 2677 008c 04F11800 		add	r0, r4, #24
 2678 0090 FFF7FEFF 		bl	uxListRemove
 2679              	.LVL177:
 2680              	.L193:
2665:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 2681              		.loc 1 2665 31 is_stmt 1 view .LVU732
2670:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2682              		.loc 1 2670 6 view .LVU733
2670:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2683              		.loc 1 2670 6 view .LVU734
 2684 0094 E36A     		ldr	r3, [r4, #44]
 2685 0096 0122     		movs	r2, #1
 2686 0098 9A40     		lsls	r2, r2, r3
 2687 009a 1C49     		ldr	r1, .L205+32
 2688 009c 0868     		ldr	r0, [r1]
 2689 009e 0243     		orrs	r2, r2, r0
 2690 00a0 0A60     		str	r2, [r1]
2670:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2691              		.loc 1 2670 6 view .LVU735
 2692 00a2 03EB8303 		add	r3, r3, r3, lsl #2
ARM GAS  /tmp/ccRhC8mT.s 			page 151


 2693 00a6 9A00     		lsls	r2, r3, #2
 2694 00a8 3146     		mov	r1, r6
 2695 00aa 1748     		ldr	r0, .L205+28
 2696 00ac 1044     		add	r0, r0, r2
 2697 00ae FFF7FEFF 		bl	vListInsertEnd
 2698              	.LVL178:
2670:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2699              		.loc 1 2670 36 discriminator 1 view .LVU736
2680:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						{
 2700              		.loc 1 2680 7 view .LVU737
2680:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						{
 2701              		.loc 1 2680 16 is_stmt 0 view .LVU738
 2702 00b2 E26A     		ldr	r2, [r4, #44]
2680:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						{
 2703              		.loc 1 2680 44 view .LVU739
 2704 00b4 134B     		ldr	r3, .L205+24
 2705 00b6 1B68     		ldr	r3, [r3]
 2706 00b8 DB6A     		ldr	r3, [r3, #44]
2680:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						{
 2707              		.loc 1 2680 9 view .LVU740
 2708 00ba 9A42     		cmp	r2, r3
 2709 00bc D4D2     		bcs	.L199
 2710 00be D4E7     		b	.L189
 2711              	.LVL179:
 2712              	.L198:
2680:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						{
 2713              		.loc 1 2680 9 view .LVU741
 2714              	.LBE147:
2587:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2715              		.loc 1 2587 12 view .LVU742
 2716 00c0 0027     		movs	r7, #0
 2717 00c2 D2E7     		b	.L189
 2718              	.LVL180:
 2719              	.L203:
 2720              	.LBB148:
2627:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					break;
 2721              		.loc 1 2627 6 is_stmt 1 view .LVU743
2627:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					break;
 2722              		.loc 1 2627 27 is_stmt 0 view .LVU744
 2723 00c4 0E4B     		ldr	r3, .L205+20
 2724 00c6 4FF0FF32 		mov	r2, #-1
 2725 00ca 1A60     		str	r2, [r3]
2628:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 2726              		.loc 1 2628 6 is_stmt 1 view .LVU745
 2727 00cc C0E7     		b	.L190
 2728              	.LVL181:
 2729              	.L204:
2646:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						break;
 2730              		.loc 1 2646 7 view .LVU746
2646:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						break;
 2731              		.loc 1 2646 28 is_stmt 0 view .LVU747
 2732 00ce 0C4A     		ldr	r2, .L205+20
 2733 00d0 1360     		str	r3, [r2]
2647:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 2734              		.loc 1 2647 7 is_stmt 1 view .LVU748
 2735 00d2 BDE7     		b	.L190
 2736              	.LVL182:
ARM GAS  /tmp/ccRhC8mT.s 			page 152


 2737              	.L185:
2647:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 2738              		.loc 1 2647 7 is_stmt 0 view .LVU749
 2739              	.LBE148:
2727:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2740              		.loc 1 2727 3 is_stmt 1 view .LVU750
 2741 00d4 0E4A     		ldr	r2, .L205+36
 2742 00d6 1368     		ldr	r3, [r2]
 2743 00d8 0133     		adds	r3, r3, #1
 2744 00da 1360     		str	r3, [r2]
2587:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2745              		.loc 1 2587 12 is_stmt 0 view .LVU751
 2746 00dc 0027     		movs	r7, #0
 2747              	.LVL183:
 2748              	.L196:
2740:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 2749              		.loc 1 2740 3 is_stmt 1 view .LVU752
2740:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 2750              		.loc 1 2740 21 is_stmt 0 view .LVU753
 2751 00de 0D4B     		ldr	r3, .L205+40
 2752 00e0 1B68     		ldr	r3, [r3]
2740:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 2753              		.loc 1 2740 5 view .LVU754
 2754 00e2 03B1     		cbz	r3, .L184
2742:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 2755              		.loc 1 2742 20 view .LVU755
 2756 00e4 0127     		movs	r7, #1
 2757              	.LVL184:
2746:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 2758              		.loc 1 2746 28 is_stmt 1 view .LVU756
2751:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
 2759              		.loc 1 2751 2 view .LVU757
 2760              	.L184:
2752:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
 2761              		.loc 1 2752 1 is_stmt 0 view .LVU758
 2762 00e6 3846     		mov	r0, r7
 2763 00e8 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 2764              	.L206:
 2765 00ea 00BF     		.align	2
 2766              	.L205:
 2767 00ec 00000000 		.word	uxSchedulerSuspended
 2768 00f0 00000000 		.word	xTickCount
 2769 00f4 00000000 		.word	pxDelayedTaskList
 2770 00f8 00000000 		.word	pxOverflowDelayedTaskList
 2771 00fc 00000000 		.word	xNumOfOverflows
 2772 0100 00000000 		.word	xNextTaskUnblockTime
 2773 0104 00000000 		.word	pxCurrentTCB
 2774 0108 00000000 		.word	pxReadyTasksLists
 2775 010c 00000000 		.word	uxTopReadyPriority
 2776 0110 00000000 		.word	uxPendedTicks
 2777 0114 00000000 		.word	xYieldPending
 2778              		.cfi_endproc
 2779              	.LFE26:
 2781              		.section	.text.xTaskResumeAll,"ax",%progbits
 2782              		.align	1
 2783              		.global	xTaskResumeAll
 2784              		.syntax unified
ARM GAS  /tmp/ccRhC8mT.s 			page 153


 2785              		.thumb
 2786              		.thumb_func
 2788              	xTaskResumeAll:
 2789              	.LFB21:
2100:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** TCB_t *pxTCB = NULL;
 2790              		.loc 1 2100 1 is_stmt 1 view -0
 2791              		.cfi_startproc
 2792              		@ args = 0, pretend = 0, frame = 0
 2793              		@ frame_needed = 0, uses_anonymous_args = 0
 2794 0000 38B5     		push	{r3, r4, r5, lr}
 2795              	.LCFI26:
 2796              		.cfi_def_cfa_offset 16
 2797              		.cfi_offset 3, -16
 2798              		.cfi_offset 4, -12
 2799              		.cfi_offset 5, -8
 2800              		.cfi_offset 14, -4
2101:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** BaseType_t xAlreadyYielded = pdFALSE;
 2801              		.loc 1 2101 1 view .LVU760
 2802              	.LVL185:
2102:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2803              		.loc 1 2102 1 view .LVU761
2106:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2804              		.loc 1 2106 2 view .LVU762
 2805 0002 354B     		ldr	r3, .L223
 2806 0004 1B68     		ldr	r3, [r3]
 2807 0006 43B9     		cbnz	r3, .L208
2106:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2808              		.loc 1 2106 2 discriminator 1 view .LVU763
 2809              	.LBB149:
 2810              	.LBI149:
 191:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** {
 2811              		.loc 2 191 30 view .LVU764
 2812              	.LBB150:
 193:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
 2813              		.loc 2 193 1 view .LVU765
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	(
 2814              		.loc 2 195 2 view .LVU766
 2815              		.syntax unified
 2816              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h" 1
 2817 0008 4FF05003 			mov r3, #80												
 2818 000c 83F31188 		msr basepri, r3											
 2819 0010 BFF36F8F 		isb														
 2820 0014 BFF34F8F 		dsb														
 2821              	
 2822              	@ 0 "" 2
 2823              		.thumb
 2824              		.syntax unified
 2825              	.L209:
 2826              	.LBE150:
 2827              	.LBE149:
2106:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2828              		.loc 1 2106 2 discriminator 3 view .LVU767
2106:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2829              		.loc 1 2106 2 discriminator 3 view .LVU768
 2830 0018 FEE7     		b	.L209
 2831              	.L208:
2106:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
ARM GAS  /tmp/ccRhC8mT.s 			page 154


 2832              		.loc 1 2106 38 discriminator 2 view .LVU769
2113:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 2833              		.loc 1 2113 2 view .LVU770
 2834 001a FFF7FEFF 		bl	vPortEnterCritical
 2835              	.LVL186:
2115:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2836              		.loc 1 2115 3 view .LVU771
 2837 001e 2E4B     		ldr	r3, .L223
 2838 0020 1A68     		ldr	r2, [r3]
 2839 0022 013A     		subs	r2, r2, #1
 2840 0024 1A60     		str	r2, [r3]
2117:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 2841              		.loc 1 2117 3 view .LVU772
2117:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 2842              		.loc 1 2117 28 is_stmt 0 view .LVU773
 2843 0026 1B68     		ldr	r3, [r3]
2117:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 2844              		.loc 1 2117 5 view .LVU774
 2845 0028 002B     		cmp	r3, #0
 2846 002a 4FD1     		bne	.L218
2119:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 2847              		.loc 1 2119 4 is_stmt 1 view .LVU775
2119:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 2848              		.loc 1 2119 31 is_stmt 0 view .LVU776
 2849 002c 2B4B     		ldr	r3, .L223+4
 2850 002e 1B68     		ldr	r3, [r3]
2119:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 2851              		.loc 1 2119 6 view .LVU777
 2852 0030 0BB9     		cbnz	r3, .L219
2102:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2853              		.loc 1 2102 12 view .LVU778
 2854 0032 0024     		movs	r4, #0
 2855 0034 4BE0     		b	.L210
 2856              	.L219:
2101:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** BaseType_t xAlreadyYielded = pdFALSE;
 2857              		.loc 1 2101 8 view .LVU779
 2858 0036 0024     		movs	r4, #0
 2859              	.LVL187:
 2860              	.L211:
2138:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 2861              		.loc 1 2138 31 is_stmt 1 view .LVU780
2123:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 2862              		.loc 1 2123 52 view .LVU781
2123:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 2863              		.loc 1 2123 12 is_stmt 0 view .LVU782
 2864 0038 294B     		ldr	r3, .L223+8
 2865 003a 1B68     		ldr	r3, [r3]
2123:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 2866              		.loc 1 2123 52 view .LVU783
 2867 003c 1BB3     		cbz	r3, .L221
2125:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					( void ) uxListRemove( &( pxTCB->xEventListItem ) );
 2868              		.loc 1 2125 6 is_stmt 1 view .LVU784
2125:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					( void ) uxListRemove( &( pxTCB->xEventListItem ) );
 2869              		.loc 1 2125 26 is_stmt 0 view .LVU785
 2870 003e 284B     		ldr	r3, .L223+8
 2871 0040 DB68     		ldr	r3, [r3, #12]
2125:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					( void ) uxListRemove( &( pxTCB->xEventListItem ) );
ARM GAS  /tmp/ccRhC8mT.s 			page 155


 2872              		.loc 1 2125 12 view .LVU786
 2873 0042 DC68     		ldr	r4, [r3, #12]
 2874              	.LVL188:
2126:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
 2875              		.loc 1 2126 6 is_stmt 1 view .LVU787
2126:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
 2876              		.loc 1 2126 15 is_stmt 0 view .LVU788
 2877 0044 04F11800 		add	r0, r4, #24
 2878 0048 FFF7FEFF 		bl	uxListRemove
 2879              	.LVL189:
2127:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					prvAddTaskToReadyList( pxTCB );
 2880              		.loc 1 2127 6 is_stmt 1 view .LVU789
2127:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					prvAddTaskToReadyList( pxTCB );
 2881              		.loc 1 2127 15 is_stmt 0 view .LVU790
 2882 004c 251D     		adds	r5, r4, #4
 2883 004e 2846     		mov	r0, r5
 2884 0050 FFF7FEFF 		bl	uxListRemove
 2885              	.LVL190:
2128:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2886              		.loc 1 2128 6 is_stmt 1 view .LVU791
2128:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2887              		.loc 1 2128 6 view .LVU792
 2888 0054 E06A     		ldr	r0, [r4, #44]
 2889 0056 0123     		movs	r3, #1
 2890 0058 8340     		lsls	r3, r3, r0
 2891 005a 224A     		ldr	r2, .L223+12
 2892 005c 1168     		ldr	r1, [r2]
 2893 005e 0B43     		orrs	r3, r3, r1
 2894 0060 1360     		str	r3, [r2]
2128:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2895              		.loc 1 2128 6 view .LVU793
 2896 0062 00EB8000 		add	r0, r0, r0, lsl #2
 2897 0066 2946     		mov	r1, r5
 2898 0068 1F4B     		ldr	r3, .L223+16
 2899 006a 03EB8000 		add	r0, r3, r0, lsl #2
 2900 006e FFF7FEFF 		bl	vListInsertEnd
 2901              	.LVL191:
2128:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2902              		.loc 1 2128 36 discriminator 1 view .LVU794
2132:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 2903              		.loc 1 2132 6 view .LVU795
2132:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 2904              		.loc 1 2132 15 is_stmt 0 view .LVU796
 2905 0072 E26A     		ldr	r2, [r4, #44]
2132:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 2906              		.loc 1 2132 43 view .LVU797
 2907 0074 1D4B     		ldr	r3, .L223+20
 2908 0076 1B68     		ldr	r3, [r3]
 2909 0078 DB6A     		ldr	r3, [r3, #44]
2132:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 2910              		.loc 1 2132 8 view .LVU798
 2911 007a 9A42     		cmp	r2, r3
 2912 007c DCD3     		bcc	.L211
2134:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 2913              		.loc 1 2134 7 is_stmt 1 view .LVU799
2134:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 2914              		.loc 1 2134 21 is_stmt 0 view .LVU800
ARM GAS  /tmp/ccRhC8mT.s 			page 156


 2915 007e 1C4B     		ldr	r3, .L223+24
 2916 0080 0122     		movs	r2, #1
 2917 0082 1A60     		str	r2, [r3]
 2918 0084 D8E7     		b	.L211
 2919              	.L221:
2142:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 2920              		.loc 1 2142 5 is_stmt 1 view .LVU801
2142:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 2921              		.loc 1 2142 7 is_stmt 0 view .LVU802
 2922 0086 0CB1     		cbz	r4, .L214
2150:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 2923              		.loc 1 2150 6 is_stmt 1 view .LVU803
 2924 0088 FFF7FEFF 		bl	prvResetNextTaskUnblockTime
 2925              	.LVL192:
 2926              	.L214:
 2927              	.LBB151:
2158:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2928              		.loc 1 2158 6 view .LVU804
2158:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2929              		.loc 1 2158 18 is_stmt 0 view .LVU805
 2930 008c 194B     		ldr	r3, .L223+28
 2931 008e 1C68     		ldr	r4, [r3]
 2932              	.LVL193:
2160:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 2933              		.loc 1 2160 6 is_stmt 1 view .LVU806
2160:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 2934              		.loc 1 2160 8 is_stmt 0 view .LVU807
 2935 0090 84B9     		cbnz	r4, .L217
 2936              	.L215:
2179:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 2937              		.loc 1 2179 31 is_stmt 1 view .LVU808
 2938              	.LBE151:
2183:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 2939              		.loc 1 2183 5 view .LVU809
2183:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 2940              		.loc 1 2183 23 is_stmt 0 view .LVU810
 2941 0092 174B     		ldr	r3, .L223+24
 2942 0094 1C68     		ldr	r4, [r3]
 2943              	.LVL194:
2183:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 2944              		.loc 1 2183 7 view .LVU811
 2945 0096 D4B1     		cbz	r4, .L210
2187:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 2946              		.loc 1 2187 7 is_stmt 1 view .LVU812
 2947              	.LVL195:
2190:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 2948              		.loc 1 2190 6 view .LVU813
 2949 0098 4FF0E023 		mov	r3, #-536813568
 2950 009c 4FF08052 		mov	r2, #268435456
 2951 00a0 C3F8042D 		str	r2, [r3, #3332]
2190:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 2952              		.loc 1 2190 6 view .LVU814
 2953              		.syntax unified
 2954              	@ 2190 "Middlewares/Third_Party/FreeRTOS/Source/tasks.c" 1
 2955 00a4 BFF34F8F 		dsb
 2956              	@ 0 "" 2
2190:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
ARM GAS  /tmp/ccRhC8mT.s 			page 157


 2957              		.loc 1 2190 6 view .LVU815
 2958              	@ 2190 "Middlewares/Third_Party/FreeRTOS/Source/tasks.c" 1
 2959 00a8 BFF36F8F 		isb
 2960              	@ 0 "" 2
2190:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 2961              		.loc 1 2190 37 view .LVU816
2187:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 2962              		.loc 1 2187 23 is_stmt 0 view .LVU817
 2963              		.thumb
 2964              		.syntax unified
 2965 00ac 0124     		movs	r4, #1
 2966 00ae 0EE0     		b	.L210
 2967              	.LVL196:
 2968              	.L216:
 2969              	.LBB152:
2170:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							}
 2970              		.loc 1 2170 33 is_stmt 1 view .LVU818
2172:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						} while( uxPendedCounts > ( UBaseType_t ) 0U );
 2971              		.loc 1 2172 8 view .LVU819
2173:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2972              		.loc 1 2173 31 view .LVU820
 2973 00b0 013C     		subs	r4, r4, #1
 2974              	.LVL197:
2173:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2975              		.loc 1 2173 31 is_stmt 0 view .LVU821
 2976 00b2 07D0     		beq	.L222
 2977              	.L217:
2162:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						{
 2978              		.loc 1 2162 7 is_stmt 1 view .LVU822
2164:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							{
 2979              		.loc 1 2164 8 view .LVU823
2164:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							{
 2980              		.loc 1 2164 12 is_stmt 0 view .LVU824
 2981 00b4 FFF7FEFF 		bl	xTaskIncrementTick
 2982              	.LVL198:
2164:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							{
 2983              		.loc 1 2164 10 discriminator 1 view .LVU825
 2984 00b8 0028     		cmp	r0, #0
 2985 00ba F9D0     		beq	.L216
2166:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							}
 2986              		.loc 1 2166 9 is_stmt 1 view .LVU826
2166:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							}
 2987              		.loc 1 2166 23 is_stmt 0 view .LVU827
 2988 00bc 0C4B     		ldr	r3, .L223+24
 2989 00be 0122     		movs	r2, #1
 2990 00c0 1A60     		str	r2, [r3]
 2991 00c2 F5E7     		b	.L216
 2992              	.L222:
2175:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 2993              		.loc 1 2175 7 is_stmt 1 view .LVU828
2175:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 2994              		.loc 1 2175 21 is_stmt 0 view .LVU829
 2995 00c4 0B4B     		ldr	r3, .L223+28
 2996 00c6 0022     		movs	r2, #0
 2997 00c8 1A60     		str	r2, [r3]
 2998 00ca E2E7     		b	.L215
 2999              	.LVL199:
ARM GAS  /tmp/ccRhC8mT.s 			page 158


 3000              	.L218:
2175:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 3001              		.loc 1 2175 21 view .LVU830
 3002              	.LBE152:
2102:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3003              		.loc 1 2102 12 view .LVU831
 3004 00cc 0024     		movs	r4, #0
 3005              	.LVL200:
 3006              	.L210:
2200:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 3007              		.loc 1 2200 28 is_stmt 1 view .LVU832
2203:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3008              		.loc 1 2203 2 view .LVU833
 3009 00ce FFF7FEFF 		bl	vPortExitCritical
 3010              	.LVL201:
2205:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
 3011              		.loc 1 2205 2 view .LVU834
2206:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
 3012              		.loc 1 2206 1 is_stmt 0 view .LVU835
 3013 00d2 2046     		mov	r0, r4
 3014 00d4 38BD     		pop	{r3, r4, r5, pc}
 3015              	.LVL202:
 3016              	.L224:
2206:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
 3017              		.loc 1 2206 1 view .LVU836
 3018 00d6 00BF     		.align	2
 3019              	.L223:
 3020 00d8 00000000 		.word	uxSchedulerSuspended
 3021 00dc 00000000 		.word	uxCurrentNumberOfTasks
 3022 00e0 00000000 		.word	xPendingReadyList
 3023 00e4 00000000 		.word	uxTopReadyPriority
 3024 00e8 00000000 		.word	pxReadyTasksLists
 3025 00ec 00000000 		.word	pxCurrentTCB
 3026 00f0 00000000 		.word	xYieldPending
 3027 00f4 00000000 		.word	uxPendedTicks
 3028              		.cfi_endproc
 3029              	.LFE21:
 3031              		.section	.text.vTaskDelay,"ax",%progbits
 3032              		.align	1
 3033              		.global	vTaskDelay
 3034              		.syntax unified
 3035              		.thumb
 3036              		.thumb_func
 3038              	vTaskDelay:
 3039              	.LVL203:
 3040              	.LFB10:
1283:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xAlreadyYielded = pdFALSE;
 3041              		.loc 1 1283 2 is_stmt 1 view -0
 3042              		.cfi_startproc
 3043              		@ args = 0, pretend = 0, frame = 0
 3044              		@ frame_needed = 0, uses_anonymous_args = 0
1283:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xAlreadyYielded = pdFALSE;
 3045              		.loc 1 1283 2 is_stmt 0 view .LVU838
 3046 0000 10B5     		push	{r4, lr}
 3047              	.LCFI27:
 3048              		.cfi_def_cfa_offset 8
 3049              		.cfi_offset 4, -8
ARM GAS  /tmp/ccRhC8mT.s 			page 159


 3050              		.cfi_offset 14, -4
1284:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3051              		.loc 1 1284 2 is_stmt 1 view .LVU839
 3052              	.LVL204:
1287:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 3053              		.loc 1 1287 3 view .LVU840
1287:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 3054              		.loc 1 1287 5 is_stmt 0 view .LVU841
 3055 0002 A8B1     		cbz	r0, .L226
 3056 0004 0446     		mov	r4, r0
1289:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			vTaskSuspendAll();
 3057              		.loc 1 1289 4 is_stmt 1 view .LVU842
 3058 0006 104B     		ldr	r3, .L231
 3059 0008 1B68     		ldr	r3, [r3]
 3060 000a 43B1     		cbz	r3, .L227
1289:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			vTaskSuspendAll();
 3061              		.loc 1 1289 4 discriminator 1 view .LVU843
 3062              	.LBB153:
 3063              	.LBI153:
 191:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** {
 3064              		.loc 2 191 30 view .LVU844
 3065              	.LBB154:
 193:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
 3066              		.loc 2 193 1 view .LVU845
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	(
 3067              		.loc 2 195 2 view .LVU846
 3068              		.syntax unified
 3069              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h" 1
 3070 000c 4FF05003 			mov r3, #80												
 3071 0010 83F31188 		msr basepri, r3											
 3072 0014 BFF36F8F 		isb														
 3073 0018 BFF34F8F 		dsb														
 3074              	
 3075              	@ 0 "" 2
 3076              		.thumb
 3077              		.syntax unified
 3078              	.L228:
 3079              	.LBE154:
 3080              	.LBE153:
1289:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			vTaskSuspendAll();
 3081              		.loc 1 1289 4 discriminator 3 view .LVU847
1289:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			vTaskSuspendAll();
 3082              		.loc 1 1289 4 discriminator 3 view .LVU848
 3083 001c FEE7     		b	.L228
 3084              	.L227:
1289:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			vTaskSuspendAll();
 3085              		.loc 1 1289 45 discriminator 2 view .LVU849
1290:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 3086              		.loc 1 1290 4 view .LVU850
 3087 001e FFF7FEFF 		bl	vTaskSuspendAll
 3088              	.LVL205:
1292:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3089              		.loc 1 1292 22 view .LVU851
1301:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 3090              		.loc 1 1301 5 view .LVU852
 3091 0022 0021     		movs	r1, #0
 3092 0024 2046     		mov	r0, r4
ARM GAS  /tmp/ccRhC8mT.s 			page 160


 3093 0026 FFF7FEFF 		bl	prvAddCurrentTaskToDelayedList
 3094              	.LVL206:
1303:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 3095              		.loc 1 1303 4 view .LVU853
1303:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 3096              		.loc 1 1303 22 is_stmt 0 view .LVU854
 3097 002a FFF7FEFF 		bl	xTaskResumeAll
 3098              	.LVL207:
1307:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 3099              		.loc 1 1307 28 is_stmt 1 view .LVU855
1312:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 3100              		.loc 1 1312 3 view .LVU856
1312:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 3101              		.loc 1 1312 5 is_stmt 0 view .LVU857
 3102 002e 48B9     		cbnz	r0, .L225
 3103              	.LVL208:
 3104              	.L226:
1314:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 3105              		.loc 1 1314 4 is_stmt 1 view .LVU858
 3106 0030 4FF0E023 		mov	r3, #-536813568
 3107 0034 4FF08052 		mov	r2, #268435456
 3108 0038 C3F8042D 		str	r2, [r3, #3332]
1314:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 3109              		.loc 1 1314 4 view .LVU859
 3110              		.syntax unified
 3111              	@ 1314 "Middlewares/Third_Party/FreeRTOS/Source/tasks.c" 1
 3112 003c BFF34F8F 		dsb
 3113              	@ 0 "" 2
1314:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 3114              		.loc 1 1314 4 view .LVU860
 3115              	@ 1314 "Middlewares/Third_Party/FreeRTOS/Source/tasks.c" 1
 3116 0040 BFF36F8F 		isb
 3117              	@ 0 "" 2
1314:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 3118              		.loc 1 1314 26 view .LVU861
1318:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 3119              		.loc 1 1318 28 view .LVU862
 3120              		.thumb
 3121              		.syntax unified
 3122              	.L225:
1320:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3123              		.loc 1 1320 2 is_stmt 0 view .LVU863
 3124 0044 10BD     		pop	{r4, pc}
 3125              	.L232:
 3126 0046 00BF     		.align	2
 3127              	.L231:
 3128 0048 00000000 		.word	uxSchedulerSuspended
 3129              		.cfi_endproc
 3130              	.LFE10:
 3132              		.section	.text.vTaskSwitchContext,"ax",%progbits
 3133              		.align	1
 3134              		.global	vTaskSwitchContext
 3135              		.syntax unified
 3136              		.thumb
 3137              		.thumb_func
 3139              	vTaskSwitchContext:
 3140              	.LFB27:
ARM GAS  /tmp/ccRhC8mT.s 			page 161


2846:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	if( uxSchedulerSuspended != ( UBaseType_t ) pdFALSE )
 3141              		.loc 1 2846 1 is_stmt 1 view -0
 3142              		.cfi_startproc
 3143              		@ args = 0, pretend = 0, frame = 0
 3144              		@ frame_needed = 0, uses_anonymous_args = 0
 3145              		@ link register save eliminated.
2847:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 3146              		.loc 1 2847 2 view .LVU865
2847:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 3147              		.loc 1 2847 27 is_stmt 0 view .LVU866
 3148 0000 204B     		ldr	r3, .L240
 3149 0002 1B68     		ldr	r3, [r3]
2847:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 3150              		.loc 1 2847 4 view .LVU867
 3151 0004 1BB1     		cbz	r3, .L234
2851:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 3152              		.loc 1 2851 3 is_stmt 1 view .LVU868
2851:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 3153              		.loc 1 2851 17 is_stmt 0 view .LVU869
 3154 0006 204B     		ldr	r3, .L240+4
 3155 0008 0122     		movs	r2, #1
 3156 000a 1A60     		str	r2, [r3]
 3157 000c 7047     		bx	lr
 3158              	.L234:
2855:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		traceTASK_SWITCHED_OUT();
 3159              		.loc 1 2855 3 is_stmt 1 view .LVU870
2855:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		traceTASK_SWITCHED_OUT();
 3160              		.loc 1 2855 17 is_stmt 0 view .LVU871
 3161 000e 1E4B     		ldr	r3, .L240+4
 3162 0010 0022     		movs	r2, #0
 3163 0012 1A60     		str	r2, [r3]
2856:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3164              		.loc 1 2856 27 is_stmt 1 view .LVU872
2886:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3165              		.loc 1 2886 33 view .LVU873
 3166              	.LBB155:
2890:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		traceTASK_SWITCHED_IN();
 3167              		.loc 1 2890 3 view .LVU874
2890:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		traceTASK_SWITCHED_IN();
 3168              		.loc 1 2890 3 view .LVU875
 3169 0014 1D4B     		ldr	r3, .L240+8
 3170 0016 1B68     		ldr	r3, [r3]
 3171              	.LVL209:
 3172              	.LBB156:
 3173              	.LBI156:
 130:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	{
 3174              		.loc 2 130 59 view .LVU876
 3175              	.LBB157:
 132:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
 3176              		.loc 2 132 2 view .LVU877
 134:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 		return ucReturn;
 3177              		.loc 2 134 3 view .LVU878
 3178              		.syntax unified
 3179              	@ 134 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h" 1
 3180 0018 B3FA83F3 		clz r3, r3
 3181              	@ 0 "" 2
 3182              	.LVL210:
ARM GAS  /tmp/ccRhC8mT.s 			page 162


 134:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 		return ucReturn;
 3183              		.loc 2 134 3 is_stmt 0 view .LVU879
 3184              		.thumb
 3185              		.syntax unified
 3186 001c DBB2     		uxtb	r3, r3
 3187              	.LVL211:
 135:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	}
 3188              		.loc 2 135 3 is_stmt 1 view .LVU880
 135:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	}
 3189              		.loc 2 135 3 is_stmt 0 view .LVU881
 3190              	.LBE157:
 3191              	.LBE156:
2890:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		traceTASK_SWITCHED_IN();
 3192              		.loc 1 2890 3 discriminator 1 view .LVU882
 3193 001e C3F11F03 		rsb	r3, r3, #31
 3194              	.LVL212:
2890:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		traceTASK_SWITCHED_IN();
 3195              		.loc 1 2890 3 is_stmt 1 discriminator 1 view .LVU883
 3196 0022 03EB8301 		add	r1, r3, r3, lsl #2
 3197 0026 8A00     		lsls	r2, r1, #2
 3198 0028 1949     		ldr	r1, .L240+12
 3199 002a 8A58     		ldr	r2, [r1, r2]
 3200 002c 42B9     		cbnz	r2, .L236
2890:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		traceTASK_SWITCHED_IN();
 3201              		.loc 1 2890 3 discriminator 1 view .LVU884
 3202              	.LBB158:
 3203              	.LBI158:
 191:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** {
 3204              		.loc 2 191 30 view .LVU885
 3205              	.LBB159:
 193:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
 3206              		.loc 2 193 1 view .LVU886
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	(
 3207              		.loc 2 195 2 view .LVU887
 3208              		.syntax unified
 3209              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h" 1
 3210 002e 4FF05003 			mov r3, #80												
 3211 0032 83F31188 		msr basepri, r3											
 3212 0036 BFF36F8F 		isb														
 3213 003a BFF34F8F 		dsb														
 3214              	
 3215              	@ 0 "" 2
 3216              	.LVL213:
 3217              		.thumb
 3218              		.syntax unified
 3219              	.L237:
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	(
 3220              		.loc 2 195 2 is_stmt 0 view .LVU888
 3221              	.LBE159:
 3222              	.LBE158:
2890:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		traceTASK_SWITCHED_IN();
 3223              		.loc 1 2890 3 is_stmt 1 discriminator 3 view .LVU889
2890:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		traceTASK_SWITCHED_IN();
 3224              		.loc 1 2890 3 discriminator 3 view .LVU890
 3225 003e FEE7     		b	.L237
 3226              	.LVL214:
 3227              	.L236:
ARM GAS  /tmp/ccRhC8mT.s 			page 163


2890:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		traceTASK_SWITCHED_IN();
 3228              		.loc 1 2890 3 discriminator 2 view .LVU891
 3229              	.LBB160:
2890:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		traceTASK_SWITCHED_IN();
 3230              		.loc 1 2890 3 discriminator 2 view .LVU892
2890:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		traceTASK_SWITCHED_IN();
 3231              		.loc 1 2890 3 discriminator 2 view .LVU893
 3232 0040 1348     		ldr	r0, .L240+12
 3233 0042 03EB8301 		add	r1, r3, r3, lsl #2
 3234 0046 8A00     		lsls	r2, r1, #2
 3235 0048 0244     		add	r2, r2, r0
 3236 004a 5168     		ldr	r1, [r2, #4]
 3237 004c 4968     		ldr	r1, [r1, #4]
 3238 004e 5160     		str	r1, [r2, #4]
2890:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		traceTASK_SWITCHED_IN();
 3239              		.loc 1 2890 3 discriminator 2 view .LVU894
 3240 0050 03EB830C 		add	ip, r3, r3, lsl #2
 3241 0054 4FEA8C02 		lsl	r2, ip, #2
 3242 0058 0832     		adds	r2, r2, #8
 3243 005a 0244     		add	r2, r2, r0
 3244 005c 9142     		cmp	r1, r2
 3245 005e 09D0     		beq	.L239
 3246              	.L238:
2890:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		traceTASK_SWITCHED_IN();
 3247              		.loc 1 2890 3 discriminator 6 view .LVU895
 3248 0060 03EB8303 		add	r3, r3, r3, lsl #2
 3249              	.LVL215:
2890:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		traceTASK_SWITCHED_IN();
 3250              		.loc 1 2890 3 is_stmt 0 discriminator 6 view .LVU896
 3251 0064 9A00     		lsls	r2, r3, #2
 3252 0066 0A4B     		ldr	r3, .L240+12
 3253 0068 1344     		add	r3, r3, r2
 3254 006a 5B68     		ldr	r3, [r3, #4]
 3255 006c DA68     		ldr	r2, [r3, #12]
 3256 006e 094B     		ldr	r3, .L240+16
 3257 0070 1A60     		str	r2, [r3]
 3258              	.LBE160:
2890:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		traceTASK_SWITCHED_IN();
 3259              		.loc 1 2890 3 is_stmt 1 discriminator 7 view .LVU897
 3260              	.LBE155:
2890:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		traceTASK_SWITCHED_IN();
 3261              		.loc 1 2890 37 discriminator 7 view .LVU898
2891:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3262              		.loc 1 2891 26 view .LVU899
2901:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
 3263              		.loc 1 2901 1 is_stmt 0 view .LVU900
 3264 0072 7047     		bx	lr
 3265              	.LVL216:
 3266              	.L239:
 3267              	.LBB162:
 3268              	.LBB161:
2890:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		traceTASK_SWITCHED_IN();
 3269              		.loc 1 2890 3 is_stmt 1 discriminator 4 view .LVU901
 3270 0074 4868     		ldr	r0, [r1, #4]
 3271 0076 6246     		mov	r2, ip
 3272 0078 9100     		lsls	r1, r2, #2
 3273 007a 054A     		ldr	r2, .L240+12
ARM GAS  /tmp/ccRhC8mT.s 			page 164


 3274 007c 0A44     		add	r2, r2, r1
 3275 007e 5060     		str	r0, [r2, #4]
 3276 0080 EEE7     		b	.L238
 3277              	.L241:
 3278 0082 00BF     		.align	2
 3279              	.L240:
 3280 0084 00000000 		.word	uxSchedulerSuspended
 3281 0088 00000000 		.word	xYieldPending
 3282 008c 00000000 		.word	uxTopReadyPriority
 3283 0090 00000000 		.word	pxReadyTasksLists
 3284 0094 00000000 		.word	pxCurrentTCB
 3285              	.LBE161:
 3286              	.LBE162:
 3287              		.cfi_endproc
 3288              	.LFE27:
 3290              		.section	.text.vTaskSuspend,"ax",%progbits
 3291              		.align	1
 3292              		.global	vTaskSuspend
 3293              		.syntax unified
 3294              		.thumb
 3295              		.thumb_func
 3297              	vTaskSuspend:
 3298              	.LVL217:
 3299              	.LFB14:
1625:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t *pxTCB;
 3300              		.loc 1 1625 2 view -0
 3301              		.cfi_startproc
 3302              		@ args = 0, pretend = 0, frame = 0
 3303              		@ frame_needed = 0, uses_anonymous_args = 0
1625:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t *pxTCB;
 3304              		.loc 1 1625 2 is_stmt 0 view .LVU903
 3305 0000 38B5     		push	{r3, r4, r5, lr}
 3306              	.LCFI28:
 3307              		.cfi_def_cfa_offset 16
 3308              		.cfi_offset 3, -16
 3309              		.cfi_offset 4, -12
 3310              		.cfi_offset 5, -8
 3311              		.cfi_offset 14, -4
 3312 0002 0446     		mov	r4, r0
1626:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3313              		.loc 1 1626 2 is_stmt 1 view .LVU904
1628:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 3314              		.loc 1 1628 3 view .LVU905
 3315 0004 FFF7FEFF 		bl	vPortEnterCritical
 3316              	.LVL218:
1632:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3317              		.loc 1 1632 4 view .LVU906
1632:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3318              		.loc 1 1632 12 is_stmt 0 view .LVU907
 3319 0008 64B3     		cbz	r4, .L254
 3320              	.LVL219:
 3321              	.L243:
1634:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3322              		.loc 1 1634 30 is_stmt 1 view .LVU908
1638:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 3323              		.loc 1 1638 4 view .LVU909
1638:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
ARM GAS  /tmp/ccRhC8mT.s 			page 165


 3324              		.loc 1 1638 8 is_stmt 0 view .LVU910
 3325 000a 251D     		adds	r5, r4, #4
 3326 000c 2846     		mov	r0, r5
 3327 000e FFF7FEFF 		bl	uxListRemove
 3328              	.LVL220:
1638:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 3329              		.loc 1 1638 6 discriminator 1 view .LVU911
 3330 0012 70B9     		cbnz	r0, .L244
1640:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 3331              		.loc 1 1640 5 is_stmt 1 view .LVU912
 3332 0014 E26A     		ldr	r2, [r4, #44]
 3333 0016 02EB8203 		add	r3, r2, r2, lsl #2
 3334 001a 9B00     		lsls	r3, r3, #2
 3335 001c 2C49     		ldr	r1, .L258
 3336 001e CB58     		ldr	r3, [r1, r3]
 3337 0020 3BB9     		cbnz	r3, .L244
1640:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 3338              		.loc 1 1640 5 discriminator 1 view .LVU913
 3339 0022 0123     		movs	r3, #1
 3340 0024 03FA02F2 		lsl	r2, r3, r2
 3341 0028 2A49     		ldr	r1, .L258+4
 3342 002a 0B68     		ldr	r3, [r1]
 3343 002c 23EA0203 		bic	r3, r3, r2
 3344 0030 0B60     		str	r3, [r1]
 3345              	.L244:
1644:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 3346              		.loc 1 1644 29 view .LVU914
1648:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 3347              		.loc 1 1648 4 view .LVU915
1648:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 3348              		.loc 1 1648 8 is_stmt 0 view .LVU916
 3349 0032 A36A     		ldr	r3, [r4, #40]
1648:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 3350              		.loc 1 1648 6 view .LVU917
 3351 0034 1BB1     		cbz	r3, .L245
1650:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 3352              		.loc 1 1650 5 is_stmt 1 view .LVU918
1650:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 3353              		.loc 1 1650 14 is_stmt 0 view .LVU919
 3354 0036 04F11800 		add	r0, r4, #24
 3355 003a FFF7FEFF 		bl	uxListRemove
 3356              	.LVL221:
 3357              	.L245:
1654:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 3358              		.loc 1 1654 29 is_stmt 1 view .LVU920
1657:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3359              		.loc 1 1657 4 view .LVU921
 3360 003e 2946     		mov	r1, r5
 3361 0040 2548     		ldr	r0, .L258+8
 3362 0042 FFF7FEFF 		bl	vListInsertEnd
 3363              	.LVL222:
1661:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 3364              		.loc 1 1661 5 view .LVU922
1661:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 3365              		.loc 1 1661 14 is_stmt 0 view .LVU923
 3366 0046 94F85030 		ldrb	r3, [r4, #80]	@ zero_extendqisi2
 3367 004a DBB2     		uxtb	r3, r3
ARM GAS  /tmp/ccRhC8mT.s 			page 166


1661:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 3368              		.loc 1 1661 7 view .LVU924
 3369 004c 012B     		cmp	r3, #1
 3370 004e 0CD0     		beq	.L255
 3371              	.L246:
1670:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3372              		.loc 1 1670 3 is_stmt 1 view .LVU925
 3373 0050 FFF7FEFF 		bl	vPortExitCritical
 3374              	.LVL223:
1672:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 3375              		.loc 1 1672 3 view .LVU926
1672:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 3376              		.loc 1 1672 25 is_stmt 0 view .LVU927
 3377 0054 214B     		ldr	r3, .L258+12
 3378 0056 1B68     		ldr	r3, [r3]
1672:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 3379              		.loc 1 1672 5 view .LVU928
 3380 0058 5BB9     		cbnz	r3, .L256
 3381              	.L247:
1684:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 3382              		.loc 1 1684 28 is_stmt 1 view .LVU929
1687:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 3383              		.loc 1 1687 3 view .LVU930
1687:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 3384              		.loc 1 1687 13 is_stmt 0 view .LVU931
 3385 005a 214B     		ldr	r3, .L258+16
 3386 005c 1B68     		ldr	r3, [r3]
1687:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 3387              		.loc 1 1687 5 view .LVU932
 3388 005e A342     		cmp	r3, r4
 3389 0060 0ED0     		beq	.L257
 3390              	.L242:
1718:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3391              		.loc 1 1718 2 view .LVU933
 3392 0062 38BD     		pop	{r3, r4, r5, pc}
 3393              	.LVL224:
 3394              	.L254:
1632:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3395              		.loc 1 1632 12 discriminator 1 view .LVU934
 3396 0064 1E4B     		ldr	r3, .L258+16
 3397 0066 1C68     		ldr	r4, [r3]
 3398              	.LVL225:
1632:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3399              		.loc 1 1632 12 discriminator 1 view .LVU935
 3400 0068 CFE7     		b	.L243
 3401              	.LVL226:
 3402              	.L255:
1665:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 3403              		.loc 1 1665 6 is_stmt 1 view .LVU936
1665:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 3404              		.loc 1 1665 27 is_stmt 0 view .LVU937
 3405 006a 0023     		movs	r3, #0
 3406 006c 84F85030 		strb	r3, [r4, #80]
 3407 0070 EEE7     		b	.L246
 3408              	.L256:
1676:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 3409              		.loc 1 1676 4 is_stmt 1 view .LVU938
ARM GAS  /tmp/ccRhC8mT.s 			page 167


 3410 0072 FFF7FEFF 		bl	vPortEnterCritical
 3411              	.LVL227:
1678:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 3412              		.loc 1 1678 5 view .LVU939
 3413 0076 FFF7FEFF 		bl	prvResetNextTaskUnblockTime
 3414              	.LVL228:
1680:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 3415              		.loc 1 1680 4 view .LVU940
 3416 007a FFF7FEFF 		bl	vPortExitCritical
 3417              	.LVL229:
 3418 007e ECE7     		b	.L247
 3419              	.L257:
1689:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 3420              		.loc 1 1689 4 view .LVU941
1689:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 3421              		.loc 1 1689 26 is_stmt 0 view .LVU942
 3422 0080 164B     		ldr	r3, .L258+12
 3423 0082 1B68     		ldr	r3, [r3]
1689:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 3424              		.loc 1 1689 6 view .LVU943
 3425 0084 B3B1     		cbz	r3, .L249
1692:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				portYIELD_WITHIN_API();
 3426              		.loc 1 1692 5 is_stmt 1 view .LVU944
 3427 0086 174B     		ldr	r3, .L258+20
 3428 0088 1B68     		ldr	r3, [r3]
 3429 008a 43B1     		cbz	r3, .L250
1692:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				portYIELD_WITHIN_API();
 3430              		.loc 1 1692 5 discriminator 1 view .LVU945
 3431              	.LBB163:
 3432              	.LBI163:
 191:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** {
 3433              		.loc 2 191 30 view .LVU946
 3434              	.LBB164:
 193:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
 3435              		.loc 2 193 1 view .LVU947
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	(
 3436              		.loc 2 195 2 view .LVU948
 3437              		.syntax unified
 3438              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h" 1
 3439 008c 4FF05003 			mov r3, #80												
 3440 0090 83F31188 		msr basepri, r3											
 3441 0094 BFF36F8F 		isb														
 3442 0098 BFF34F8F 		dsb														
 3443              	
 3444              	@ 0 "" 2
 3445              		.thumb
 3446              		.syntax unified
 3447              	.L251:
 3448              	.LBE164:
 3449              	.LBE163:
1692:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				portYIELD_WITHIN_API();
 3450              		.loc 1 1692 5 discriminator 3 view .LVU949
1692:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				portYIELD_WITHIN_API();
 3451              		.loc 1 1692 5 discriminator 3 view .LVU950
 3452 009c FEE7     		b	.L251
 3453              	.L250:
1692:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				portYIELD_WITHIN_API();
ARM GAS  /tmp/ccRhC8mT.s 			page 168


 3454              		.loc 1 1692 46 discriminator 2 view .LVU951
1693:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 3455              		.loc 1 1693 5 view .LVU952
 3456 009e 4FF0E023 		mov	r3, #-536813568
 3457 00a2 4FF08052 		mov	r2, #268435456
 3458 00a6 C3F8042D 		str	r2, [r3, #3332]
1693:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 3459              		.loc 1 1693 5 view .LVU953
 3460              		.syntax unified
 3461              	@ 1693 "Middlewares/Third_Party/FreeRTOS/Source/tasks.c" 1
 3462 00aa BFF34F8F 		dsb
 3463              	@ 0 "" 2
1693:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 3464              		.loc 1 1693 5 view .LVU954
 3465              	@ 1693 "Middlewares/Third_Party/FreeRTOS/Source/tasks.c" 1
 3466 00ae BFF36F8F 		isb
 3467              	@ 0 "" 2
1693:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 3468              		.loc 1 1693 27 view .LVU955
 3469              		.thumb
 3470              		.syntax unified
 3471 00b2 D6E7     		b	.L242
 3472              	.L249:
1700:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 3473              		.loc 1 1700 5 view .LVU956
1700:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 3474              		.loc 1 1700 9 is_stmt 0 view .LVU957
 3475 00b4 084B     		ldr	r3, .L258+8
 3476 00b6 1A68     		ldr	r2, [r3]
1700:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 3477              		.loc 1 1700 56 view .LVU958
 3478 00b8 0B4B     		ldr	r3, .L258+24
 3479 00ba 1B68     		ldr	r3, [r3]
1700:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 3480              		.loc 1 1700 7 view .LVU959
 3481 00bc 9A42     		cmp	r2, r3
 3482 00be 03D1     		bne	.L252
1706:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 3483              		.loc 1 1706 6 is_stmt 1 view .LVU960
1706:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 3484              		.loc 1 1706 19 is_stmt 0 view .LVU961
 3485 00c0 074B     		ldr	r3, .L258+16
 3486 00c2 0022     		movs	r2, #0
 3487 00c4 1A60     		str	r2, [r3]
 3488 00c6 CCE7     		b	.L242
 3489              	.L252:
1710:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 3490              		.loc 1 1710 6 is_stmt 1 view .LVU962
 3491 00c8 FFF7FEFF 		bl	vTaskSwitchContext
 3492              	.LVL230:
1716:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 3493              		.loc 1 1716 28 view .LVU963
1718:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3494              		.loc 1 1718 2 is_stmt 0 view .LVU964
 3495 00cc C9E7     		b	.L242
 3496              	.L259:
 3497 00ce 00BF     		.align	2
ARM GAS  /tmp/ccRhC8mT.s 			page 169


 3498              	.L258:
 3499 00d0 00000000 		.word	pxReadyTasksLists
 3500 00d4 00000000 		.word	uxTopReadyPriority
 3501 00d8 00000000 		.word	xSuspendedTaskList
 3502 00dc 00000000 		.word	xSchedulerRunning
 3503 00e0 00000000 		.word	pxCurrentTCB
 3504 00e4 00000000 		.word	uxSchedulerSuspended
 3505 00e8 00000000 		.word	uxCurrentNumberOfTasks
 3506              		.cfi_endproc
 3507              	.LFE14:
 3509              		.section	.text.vTaskPlaceOnEventList,"ax",%progbits
 3510              		.align	1
 3511              		.global	vTaskPlaceOnEventList
 3512              		.syntax unified
 3513              		.thumb
 3514              		.thumb_func
 3516              	vTaskPlaceOnEventList:
 3517              	.LVL231:
 3518              	.LFB28:
2905:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	configASSERT( pxEventList );
 3519              		.loc 1 2905 1 is_stmt 1 view -0
 3520              		.cfi_startproc
 3521              		@ args = 0, pretend = 0, frame = 0
 3522              		@ frame_needed = 0, uses_anonymous_args = 0
2906:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3523              		.loc 1 2906 2 view .LVU966
 3524 0000 58B1     		cbz	r0, .L265
2905:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	configASSERT( pxEventList );
 3525              		.loc 1 2905 1 is_stmt 0 view .LVU967
 3526 0002 10B5     		push	{r4, lr}
 3527              	.LCFI29:
 3528              		.cfi_def_cfa_offset 8
 3529              		.cfi_offset 4, -8
 3530              		.cfi_offset 14, -4
 3531 0004 0C46     		mov	r4, r1
2906:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3532              		.loc 1 2906 29 is_stmt 1 discriminator 2 view .LVU968
2915:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3533              		.loc 1 2915 2 view .LVU969
2915:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3534              		.loc 1 2915 43 is_stmt 0 view .LVU970
 3535 0006 094A     		ldr	r2, .L266
 3536 0008 1168     		ldr	r1, [r2]
 3537              	.LVL232:
2915:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3538              		.loc 1 2915 2 view .LVU971
 3539 000a 1831     		adds	r1, r1, #24
 3540 000c FFF7FEFF 		bl	vListInsert
 3541              	.LVL233:
2917:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
 3542              		.loc 1 2917 2 is_stmt 1 view .LVU972
 3543 0010 0121     		movs	r1, #1
 3544 0012 2046     		mov	r0, r4
 3545 0014 FFF7FEFF 		bl	prvAddCurrentTaskToDelayedList
 3546              	.LVL234:
2918:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
 3547              		.loc 1 2918 1 is_stmt 0 view .LVU973
ARM GAS  /tmp/ccRhC8mT.s 			page 170


 3548 0018 10BD     		pop	{r4, pc}
 3549              	.LVL235:
 3550              	.L265:
 3551              	.LCFI30:
 3552              		.cfi_def_cfa_offset 0
 3553              		.cfi_restore 4
 3554              		.cfi_restore 14
2906:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3555              		.loc 1 2906 2 is_stmt 1 discriminator 1 view .LVU974
 3556              	.LBB165:
 3557              	.LBI165:
 191:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** {
 3558              		.loc 2 191 30 view .LVU975
 3559              	.LBB166:
 193:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
 3560              		.loc 2 193 1 view .LVU976
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	(
 3561              		.loc 2 195 2 view .LVU977
 3562              		.syntax unified
 3563              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h" 1
 3564 001a 4FF05003 			mov r3, #80												
 3565 001e 83F31188 		msr basepri, r3											
 3566 0022 BFF36F8F 		isb														
 3567 0026 BFF34F8F 		dsb														
 3568              	
 3569              	@ 0 "" 2
 3570              		.thumb
 3571              		.syntax unified
 3572              	.L262:
 3573              	.LBE166:
 3574              	.LBE165:
2906:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3575              		.loc 1 2906 2 discriminator 3 view .LVU978
2906:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3576              		.loc 1 2906 2 discriminator 3 view .LVU979
 3577 002a FEE7     		b	.L262
 3578              	.L267:
 3579              		.align	2
 3580              	.L266:
 3581 002c 00000000 		.word	pxCurrentTCB
 3582              		.cfi_endproc
 3583              	.LFE28:
 3585              		.section	.text.vTaskPlaceOnUnorderedEventList,"ax",%progbits
 3586              		.align	1
 3587              		.global	vTaskPlaceOnUnorderedEventList
 3588              		.syntax unified
 3589              		.thumb
 3590              		.thumb_func
 3592              	vTaskPlaceOnUnorderedEventList:
 3593              	.LVL236:
 3594              	.LFB29:
2922:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	configASSERT( pxEventList );
 3595              		.loc 1 2922 1 view -0
 3596              		.cfi_startproc
 3597              		@ args = 0, pretend = 0, frame = 0
 3598              		@ frame_needed = 0, uses_anonymous_args = 0
2923:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
ARM GAS  /tmp/ccRhC8mT.s 			page 171


 3599              		.loc 1 2923 2 view .LVU981
 3600 0000 70B1     		cbz	r0, .L275
2922:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	configASSERT( pxEventList );
 3601              		.loc 1 2922 1 is_stmt 0 view .LVU982
 3602 0002 10B5     		push	{r4, lr}
 3603              	.LCFI31:
 3604              		.cfi_def_cfa_offset 8
 3605              		.cfi_offset 4, -8
 3606              		.cfi_offset 14, -4
 3607 0004 1446     		mov	r4, r2
 3608 0006 0246     		mov	r2, r0
 3609              	.LVL237:
2923:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3610              		.loc 1 2923 29 is_stmt 1 discriminator 2 view .LVU983
2927:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3611              		.loc 1 2927 2 view .LVU984
 3612 0008 114B     		ldr	r3, .L276
 3613 000a 1B68     		ldr	r3, [r3]
 3614 000c 8BB9     		cbnz	r3, .L271
2927:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3615              		.loc 1 2927 2 discriminator 1 view .LVU985
 3616              	.LBB167:
 3617              	.LBI167:
 191:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** {
 3618              		.loc 2 191 30 view .LVU986
 3619              	.LBB168:
 193:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
 3620              		.loc 2 193 1 view .LVU987
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	(
 3621              		.loc 2 195 2 view .LVU988
 3622              		.syntax unified
 3623              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h" 1
 3624 000e 4FF05003 			mov r3, #80												
 3625 0012 83F31188 		msr basepri, r3											
 3626 0016 BFF36F8F 		isb														
 3627 001a BFF34F8F 		dsb														
 3628              	
 3629              	@ 0 "" 2
 3630              		.thumb
 3631              		.syntax unified
 3632              	.L272:
 3633              	.LBE168:
 3634              	.LBE167:
2927:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3635              		.loc 1 2927 2 discriminator 3 view .LVU989
2927:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3636              		.loc 1 2927 2 discriminator 3 view .LVU990
 3637 001e FEE7     		b	.L272
 3638              	.LVL238:
 3639              	.L275:
 3640              	.LCFI32:
 3641              		.cfi_def_cfa_offset 0
 3642              		.cfi_restore 4
 3643              		.cfi_restore 14
2923:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3644              		.loc 1 2923 2 discriminator 1 view .LVU991
 3645              	.LBB169:
ARM GAS  /tmp/ccRhC8mT.s 			page 172


 3646              	.LBI169:
 191:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** {
 3647              		.loc 2 191 30 view .LVU992
 3648              	.LBB170:
 193:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
 3649              		.loc 2 193 1 view .LVU993
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	(
 3650              		.loc 2 195 2 view .LVU994
 3651              		.syntax unified
 3652              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h" 1
 3653 0020 4FF05003 			mov r3, #80												
 3654 0024 83F31188 		msr basepri, r3											
 3655 0028 BFF36F8F 		isb														
 3656 002c BFF34F8F 		dsb														
 3657              	
 3658              	@ 0 "" 2
 3659              		.thumb
 3660              		.syntax unified
 3661              	.L270:
 3662              	.LBE170:
 3663              	.LBE169:
2923:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3664              		.loc 1 2923 2 discriminator 3 view .LVU995
2923:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3665              		.loc 1 2923 2 discriminator 3 view .LVU996
 3666 0030 FEE7     		b	.L270
 3667              	.LVL239:
 3668              	.L271:
 3669              	.LCFI33:
 3670              		.cfi_def_cfa_offset 8
 3671              		.cfi_offset 4, -8
 3672              		.cfi_offset 14, -4
2927:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3673              		.loc 1 2927 43 discriminator 2 view .LVU997
2932:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3674              		.loc 1 2932 2 view .LVU998
 3675 0032 084B     		ldr	r3, .L276+4
 3676 0034 1868     		ldr	r0, [r3]
 3677              	.LVL240:
2932:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3678              		.loc 1 2932 2 is_stmt 0 view .LVU999
 3679 0036 41F00041 		orr	r1, r1, #-2147483648
 3680              	.LVL241:
2932:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3681              		.loc 1 2932 2 view .LVU1000
 3682 003a 8161     		str	r1, [r0, #24]
2939:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3683              		.loc 1 2939 2 is_stmt 1 view .LVU1001
2939:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3684              		.loc 1 2939 46 is_stmt 0 view .LVU1002
 3685 003c 1968     		ldr	r1, [r3]
2939:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3686              		.loc 1 2939 2 view .LVU1003
 3687 003e 1831     		adds	r1, r1, #24
 3688 0040 1046     		mov	r0, r2
 3689 0042 FFF7FEFF 		bl	vListInsertEnd
 3690              	.LVL242:
ARM GAS  /tmp/ccRhC8mT.s 			page 173


2941:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
 3691              		.loc 1 2941 2 is_stmt 1 view .LVU1004
 3692 0046 0121     		movs	r1, #1
 3693 0048 2046     		mov	r0, r4
 3694 004a FFF7FEFF 		bl	prvAddCurrentTaskToDelayedList
 3695              	.LVL243:
2942:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
 3696              		.loc 1 2942 1 is_stmt 0 view .LVU1005
 3697 004e 10BD     		pop	{r4, pc}
 3698              	.LVL244:
 3699              	.L277:
2942:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
 3700              		.loc 1 2942 1 view .LVU1006
 3701              		.align	2
 3702              	.L276:
 3703 0050 00000000 		.word	uxSchedulerSuspended
 3704 0054 00000000 		.word	pxCurrentTCB
 3705              		.cfi_endproc
 3706              	.LFE29:
 3708              		.section	.text.xTaskRemoveFromEventList,"ax",%progbits
 3709              		.align	1
 3710              		.global	xTaskRemoveFromEventList
 3711              		.syntax unified
 3712              		.thumb
 3713              		.thumb_func
 3715              	xTaskRemoveFromEventList:
 3716              	.LVL245:
 3717              	.LFB30:
2979:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** TCB_t *pxUnblockedTCB;
 3718              		.loc 1 2979 1 is_stmt 1 view -0
 3719              		.cfi_startproc
 3720              		@ args = 0, pretend = 0, frame = 0
 3721              		@ frame_needed = 0, uses_anonymous_args = 0
2979:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** TCB_t *pxUnblockedTCB;
 3722              		.loc 1 2979 1 is_stmt 0 view .LVU1008
 3723 0000 38B5     		push	{r3, r4, r5, lr}
 3724              	.LCFI34:
 3725              		.cfi_def_cfa_offset 16
 3726              		.cfi_offset 3, -16
 3727              		.cfi_offset 4, -12
 3728              		.cfi_offset 5, -8
 3729              		.cfi_offset 14, -4
2980:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** BaseType_t xReturn;
 3730              		.loc 1 2980 1 is_stmt 1 view .LVU1009
2981:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3731              		.loc 1 2981 1 view .LVU1010
2996:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	configASSERT( pxUnblockedTCB );
 3732              		.loc 1 2996 2 view .LVU1011
2996:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	configASSERT( pxUnblockedTCB );
 3733              		.loc 1 2996 31 is_stmt 0 view .LVU1012
 3734 0002 C368     		ldr	r3, [r0, #12]
2996:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	configASSERT( pxUnblockedTCB );
 3735              		.loc 1 2996 17 view .LVU1013
 3736 0004 DC68     		ldr	r4, [r3, #12]
 3737              	.LVL246:
2997:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	( void ) uxListRemove( &( pxUnblockedTCB->xEventListItem ) );
 3738              		.loc 1 2997 2 is_stmt 1 view .LVU1014
ARM GAS  /tmp/ccRhC8mT.s 			page 174


 3739 0006 24B3     		cbz	r4, .L286
2997:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	( void ) uxListRemove( &( pxUnblockedTCB->xEventListItem ) );
 3740              		.loc 1 2997 32 discriminator 2 view .LVU1015
2998:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3741              		.loc 1 2998 2 view .LVU1016
2998:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3742              		.loc 1 2998 11 is_stmt 0 view .LVU1017
 3743 0008 04F11805 		add	r5, r4, #24
 3744 000c 2846     		mov	r0, r5
 3745              	.LVL247:
2998:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3746              		.loc 1 2998 11 view .LVU1018
 3747 000e FFF7FEFF 		bl	uxListRemove
 3748              	.LVL248:
3000:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 3749              		.loc 1 3000 2 is_stmt 1 view .LVU1019
3000:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 3750              		.loc 1 3000 27 is_stmt 0 view .LVU1020
 3751 0012 184B     		ldr	r3, .L287
 3752 0014 1B68     		ldr	r3, [r3]
3000:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 3753              		.loc 1 3000 4 view .LVU1021
 3754 0016 2BBB     		cbnz	r3, .L281
3002:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		prvAddTaskToReadyList( pxUnblockedTCB );
 3755              		.loc 1 3002 3 is_stmt 1 view .LVU1022
3002:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		prvAddTaskToReadyList( pxUnblockedTCB );
 3756              		.loc 1 3002 12 is_stmt 0 view .LVU1023
 3757 0018 251D     		adds	r5, r4, #4
 3758 001a 2846     		mov	r0, r5
 3759 001c FFF7FEFF 		bl	uxListRemove
 3760              	.LVL249:
3003:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 3761              		.loc 1 3003 3 is_stmt 1 view .LVU1024
3003:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 3762              		.loc 1 3003 3 view .LVU1025
 3763 0020 E06A     		ldr	r0, [r4, #44]
 3764 0022 0123     		movs	r3, #1
 3765 0024 8340     		lsls	r3, r3, r0
 3766 0026 144A     		ldr	r2, .L287+4
 3767 0028 1168     		ldr	r1, [r2]
 3768 002a 0B43     		orrs	r3, r3, r1
 3769 002c 1360     		str	r3, [r2]
3003:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 3770              		.loc 1 3003 3 view .LVU1026
 3771 002e 00EB8000 		add	r0, r0, r0, lsl #2
 3772 0032 2946     		mov	r1, r5
 3773 0034 114B     		ldr	r3, .L287+8
 3774 0036 03EB8000 		add	r0, r3, r0, lsl #2
 3775 003a FFF7FEFF 		bl	vListInsertEnd
 3776              	.LVL250:
3003:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 3777              		.loc 1 3003 42 discriminator 1 view .LVU1027
 3778              	.L282:
3012:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 3779              		.loc 1 3012 2 view .LVU1028
3012:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 3780              		.loc 1 3012 20 is_stmt 0 view .LVU1029
ARM GAS  /tmp/ccRhC8mT.s 			page 175


 3781 003e E26A     		ldr	r2, [r4, #44]
3012:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 3782              		.loc 1 3012 47 view .LVU1030
 3783 0040 0F4B     		ldr	r3, .L287+12
 3784 0042 1B68     		ldr	r3, [r3]
 3785 0044 DB6A     		ldr	r3, [r3, #44]
3012:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 3786              		.loc 1 3012 4 view .LVU1031
 3787 0046 9A42     		cmp	r2, r3
 3788 0048 11D9     		bls	.L284
3017:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3789              		.loc 1 3017 3 is_stmt 1 view .LVU1032
 3790              	.LVL251:
3021:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 3791              		.loc 1 3021 3 view .LVU1033
3021:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 3792              		.loc 1 3021 17 is_stmt 0 view .LVU1034
 3793 004a 0120     		movs	r0, #1
 3794 004c 0D4B     		ldr	r3, .L287+16
 3795 004e 1860     		str	r0, [r3]
 3796              	.LVL252:
 3797              	.L278:
3043:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
 3798              		.loc 1 3043 1 view .LVU1035
 3799 0050 38BD     		pop	{r3, r4, r5, pc}
 3800              	.LVL253:
 3801              	.L286:
2997:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	( void ) uxListRemove( &( pxUnblockedTCB->xEventListItem ) );
 3802              		.loc 1 2997 2 is_stmt 1 discriminator 1 view .LVU1036
 3803              	.LBB171:
 3804              	.LBI171:
 191:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** {
 3805              		.loc 2 191 30 view .LVU1037
 3806              	.LBB172:
 193:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
 3807              		.loc 2 193 1 view .LVU1038
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	(
 3808              		.loc 2 195 2 view .LVU1039
 3809              		.syntax unified
 3810              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h" 1
 3811 0052 4FF05003 			mov r3, #80												
 3812 0056 83F31188 		msr basepri, r3											
 3813 005a BFF36F8F 		isb														
 3814 005e BFF34F8F 		dsb														
 3815              	
 3816              	@ 0 "" 2
 3817              		.thumb
 3818              		.syntax unified
 3819              	.L280:
 3820              	.LBE172:
 3821              	.LBE171:
2997:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	( void ) uxListRemove( &( pxUnblockedTCB->xEventListItem ) );
 3822              		.loc 1 2997 2 discriminator 3 view .LVU1040
2997:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	( void ) uxListRemove( &( pxUnblockedTCB->xEventListItem ) );
 3823              		.loc 1 2997 2 discriminator 3 view .LVU1041
 3824 0062 FEE7     		b	.L280
 3825              	.LVL254:
ARM GAS  /tmp/ccRhC8mT.s 			page 176


 3826              	.L281:
3009:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 3827              		.loc 1 3009 3 view .LVU1042
 3828 0064 2946     		mov	r1, r5
 3829 0066 0848     		ldr	r0, .L287+20
 3830 0068 FFF7FEFF 		bl	vListInsertEnd
 3831              	.LVL255:
 3832 006c E7E7     		b	.L282
 3833              	.L284:
3025:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 3834              		.loc 1 3025 11 is_stmt 0 view .LVU1043
 3835 006e 0020     		movs	r0, #0
 3836              	.LVL256:
3042:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
 3837              		.loc 1 3042 2 is_stmt 1 view .LVU1044
3042:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
 3838              		.loc 1 3042 9 is_stmt 0 view .LVU1045
 3839 0070 EEE7     		b	.L278
 3840              	.L288:
 3841 0072 00BF     		.align	2
 3842              	.L287:
 3843 0074 00000000 		.word	uxSchedulerSuspended
 3844 0078 00000000 		.word	uxTopReadyPriority
 3845 007c 00000000 		.word	pxReadyTasksLists
 3846 0080 00000000 		.word	pxCurrentTCB
 3847 0084 00000000 		.word	xYieldPending
 3848 0088 00000000 		.word	xPendingReadyList
 3849              		.cfi_endproc
 3850              	.LFE30:
 3852              		.section	.text.vTaskRemoveFromUnorderedEventList,"ax",%progbits
 3853              		.align	1
 3854              		.global	vTaskRemoveFromUnorderedEventList
 3855              		.syntax unified
 3856              		.thumb
 3857              		.thumb_func
 3859              	vTaskRemoveFromUnorderedEventList:
 3860              	.LVL257:
 3861              	.LFB31:
3047:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** TCB_t *pxUnblockedTCB;
 3862              		.loc 1 3047 1 is_stmt 1 view -0
 3863              		.cfi_startproc
 3864              		@ args = 0, pretend = 0, frame = 0
 3865              		@ frame_needed = 0, uses_anonymous_args = 0
3047:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** TCB_t *pxUnblockedTCB;
 3866              		.loc 1 3047 1 is_stmt 0 view .LVU1047
 3867 0000 38B5     		push	{r3, r4, r5, lr}
 3868              	.LCFI35:
 3869              		.cfi_def_cfa_offset 16
 3870              		.cfi_offset 3, -16
 3871              		.cfi_offset 4, -12
 3872              		.cfi_offset 5, -8
 3873              		.cfi_offset 14, -4
3048:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3874              		.loc 1 3048 1 is_stmt 1 view .LVU1048
3052:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3875              		.loc 1 3052 2 view .LVU1049
 3876 0002 1C4B     		ldr	r3, .L297
ARM GAS  /tmp/ccRhC8mT.s 			page 177


 3877 0004 1B68     		ldr	r3, [r3]
 3878 0006 43B9     		cbnz	r3, .L290
3052:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3879              		.loc 1 3052 2 discriminator 1 view .LVU1050
 3880              	.LBB173:
 3881              	.LBI173:
 191:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** {
 3882              		.loc 2 191 30 view .LVU1051
 3883              	.LBB174:
 193:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
 3884              		.loc 2 193 1 view .LVU1052
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	(
 3885              		.loc 2 195 2 view .LVU1053
 3886              		.syntax unified
 3887              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h" 1
 3888 0008 4FF05003 			mov r3, #80												
 3889 000c 83F31188 		msr basepri, r3											
 3890 0010 BFF36F8F 		isb														
 3891 0014 BFF34F8F 		dsb														
 3892              	
 3893              	@ 0 "" 2
 3894              		.thumb
 3895              		.syntax unified
 3896              	.L291:
 3897              	.LBE174:
 3898              	.LBE173:
3052:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3899              		.loc 1 3052 2 discriminator 3 view .LVU1054
3052:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3900              		.loc 1 3052 2 discriminator 3 view .LVU1055
 3901 0018 FEE7     		b	.L291
 3902              	.L290:
3052:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3903              		.loc 1 3052 49 discriminator 2 view .LVU1056
3055:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3904              		.loc 1 3055 2 view .LVU1057
 3905 001a 41F00041 		orr	r1, r1, #-2147483648
 3906              	.LVL258:
3055:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3907              		.loc 1 3055 2 is_stmt 0 view .LVU1058
 3908 001e 0160     		str	r1, [r0]
3059:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	configASSERT( pxUnblockedTCB );
 3909              		.loc 1 3059 2 is_stmt 1 view .LVU1059
3059:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	configASSERT( pxUnblockedTCB );
 3910              		.loc 1 3059 17 is_stmt 0 view .LVU1060
 3911 0020 C468     		ldr	r4, [r0, #12]
 3912              	.LVL259:
3060:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	( void ) uxListRemove( pxEventListItem );
 3913              		.loc 1 3060 2 is_stmt 1 view .LVU1061
 3914 0022 F4B1     		cbz	r4, .L296
3060:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	( void ) uxListRemove( pxEventListItem );
 3915              		.loc 1 3060 32 discriminator 2 view .LVU1062
3061:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3916              		.loc 1 3061 2 view .LVU1063
3061:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3917              		.loc 1 3061 11 is_stmt 0 view .LVU1064
 3918 0024 FFF7FEFF 		bl	uxListRemove
ARM GAS  /tmp/ccRhC8mT.s 			page 178


 3919              	.LVL260:
3066:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	prvAddTaskToReadyList( pxUnblockedTCB );
 3920              		.loc 1 3066 2 is_stmt 1 view .LVU1065
3066:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	prvAddTaskToReadyList( pxUnblockedTCB );
 3921              		.loc 1 3066 11 is_stmt 0 view .LVU1066
 3922 0028 251D     		adds	r5, r4, #4
 3923 002a 2846     		mov	r0, r5
 3924 002c FFF7FEFF 		bl	uxListRemove
 3925              	.LVL261:
3067:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3926              		.loc 1 3067 2 is_stmt 1 view .LVU1067
3067:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3927              		.loc 1 3067 2 view .LVU1068
 3928 0030 E06A     		ldr	r0, [r4, #44]
 3929 0032 0123     		movs	r3, #1
 3930 0034 8340     		lsls	r3, r3, r0
 3931 0036 104A     		ldr	r2, .L297+4
 3932 0038 1168     		ldr	r1, [r2]
 3933 003a 0B43     		orrs	r3, r3, r1
 3934 003c 1360     		str	r3, [r2]
3067:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3935              		.loc 1 3067 2 view .LVU1069
 3936 003e 00EB8000 		add	r0, r0, r0, lsl #2
 3937 0042 2946     		mov	r1, r5
 3938 0044 0D4B     		ldr	r3, .L297+8
 3939 0046 03EB8000 		add	r0, r3, r0, lsl #2
 3940 004a FFF7FEFF 		bl	vListInsertEnd
 3941              	.LVL262:
3067:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3942              		.loc 1 3067 41 discriminator 1 view .LVU1070
3069:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 3943              		.loc 1 3069 2 view .LVU1071
3069:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 3944              		.loc 1 3069 20 is_stmt 0 view .LVU1072
 3945 004e E26A     		ldr	r2, [r4, #44]
3069:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 3946              		.loc 1 3069 47 view .LVU1073
 3947 0050 0B4B     		ldr	r3, .L297+12
 3948 0052 1B68     		ldr	r3, [r3]
 3949 0054 DB6A     		ldr	r3, [r3, #44]
3069:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 3950              		.loc 1 3069 4 view .LVU1074
 3951 0056 9A42     		cmp	r2, r3
 3952 0058 02D9     		bls	.L289
3075:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 3953              		.loc 1 3075 3 is_stmt 1 view .LVU1075
3075:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 3954              		.loc 1 3075 17 is_stmt 0 view .LVU1076
 3955 005a 0A4B     		ldr	r3, .L297+16
 3956 005c 0122     		movs	r2, #1
 3957 005e 1A60     		str	r2, [r3]
 3958              	.L289:
3077:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
 3959              		.loc 1 3077 1 view .LVU1077
 3960 0060 38BD     		pop	{r3, r4, r5, pc}
 3961              	.LVL263:
 3962              	.L296:
ARM GAS  /tmp/ccRhC8mT.s 			page 179


3060:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	( void ) uxListRemove( pxEventListItem );
 3963              		.loc 1 3060 2 is_stmt 1 discriminator 1 view .LVU1078
 3964              	.LBB175:
 3965              	.LBI175:
 191:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** {
 3966              		.loc 2 191 30 view .LVU1079
 3967              	.LBB176:
 193:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
 3968              		.loc 2 193 1 view .LVU1080
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	(
 3969              		.loc 2 195 2 view .LVU1081
 3970              		.syntax unified
 3971              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h" 1
 3972 0062 4FF05003 			mov r3, #80												
 3973 0066 83F31188 		msr basepri, r3											
 3974 006a BFF36F8F 		isb														
 3975 006e BFF34F8F 		dsb														
 3976              	
 3977              	@ 0 "" 2
 3978              		.thumb
 3979              		.syntax unified
 3980              	.L293:
 3981              	.LBE176:
 3982              	.LBE175:
3060:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	( void ) uxListRemove( pxEventListItem );
 3983              		.loc 1 3060 2 discriminator 3 view .LVU1082
3060:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	( void ) uxListRemove( pxEventListItem );
 3984              		.loc 1 3060 2 discriminator 3 view .LVU1083
 3985 0072 FEE7     		b	.L293
 3986              	.L298:
 3987              		.align	2
 3988              	.L297:
 3989 0074 00000000 		.word	uxSchedulerSuspended
 3990 0078 00000000 		.word	uxTopReadyPriority
 3991 007c 00000000 		.word	pxReadyTasksLists
 3992 0080 00000000 		.word	pxCurrentTCB
 3993 0084 00000000 		.word	xYieldPending
 3994              		.cfi_endproc
 3995              	.LFE31:
 3997              		.section	.text.vTaskSetTimeOutState,"ax",%progbits
 3998              		.align	1
 3999              		.global	vTaskSetTimeOutState
 4000              		.syntax unified
 4001              		.thumb
 4002              		.thumb_func
 4004              	vTaskSetTimeOutState:
 4005              	.LVL264:
 4006              	.LFB32:
3081:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	configASSERT( pxTimeOut );
 4007              		.loc 1 3081 1 view -0
 4008              		.cfi_startproc
 4009              		@ args = 0, pretend = 0, frame = 0
 4010              		@ frame_needed = 0, uses_anonymous_args = 0
3082:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	taskENTER_CRITICAL();
 4011              		.loc 1 3082 2 view .LVU1085
 4012 0000 60B1     		cbz	r0, .L304
3081:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	configASSERT( pxTimeOut );
ARM GAS  /tmp/ccRhC8mT.s 			page 180


 4013              		.loc 1 3081 1 is_stmt 0 view .LVU1086
 4014 0002 10B5     		push	{r4, lr}
 4015              	.LCFI36:
 4016              		.cfi_def_cfa_offset 8
 4017              		.cfi_offset 4, -8
 4018              		.cfi_offset 14, -4
 4019 0004 0446     		mov	r4, r0
3082:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	taskENTER_CRITICAL();
 4020              		.loc 1 3082 27 is_stmt 1 discriminator 2 view .LVU1087
3083:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 4021              		.loc 1 3083 2 view .LVU1088
 4022 0006 FFF7FEFF 		bl	vPortEnterCritical
 4023              	.LVL265:
3085:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxTimeOut->xTimeOnEntering = xTickCount;
 4024              		.loc 1 3085 3 view .LVU1089
3085:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxTimeOut->xTimeOnEntering = xTickCount;
 4025              		.loc 1 3085 29 is_stmt 0 view .LVU1090
 4026 000a 094B     		ldr	r3, .L305
 4027 000c 1B68     		ldr	r3, [r3]
 4028 000e 2360     		str	r3, [r4]
3086:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 4029              		.loc 1 3086 3 is_stmt 1 view .LVU1091
3086:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 4030              		.loc 1 3086 30 is_stmt 0 view .LVU1092
 4031 0010 084B     		ldr	r3, .L305+4
 4032 0012 1B68     		ldr	r3, [r3]
 4033 0014 6360     		str	r3, [r4, #4]
3088:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
 4034              		.loc 1 3088 2 is_stmt 1 view .LVU1093
 4035 0016 FFF7FEFF 		bl	vPortExitCritical
 4036              	.LVL266:
3089:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
 4037              		.loc 1 3089 1 is_stmt 0 view .LVU1094
 4038 001a 10BD     		pop	{r4, pc}
 4039              	.LVL267:
 4040              	.L304:
 4041              	.LCFI37:
 4042              		.cfi_def_cfa_offset 0
 4043              		.cfi_restore 4
 4044              		.cfi_restore 14
3082:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	taskENTER_CRITICAL();
 4045              		.loc 1 3082 2 is_stmt 1 discriminator 1 view .LVU1095
 4046              	.LBB177:
 4047              	.LBI177:
 191:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** {
 4048              		.loc 2 191 30 view .LVU1096
 4049              	.LBB178:
 193:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
 4050              		.loc 2 193 1 view .LVU1097
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	(
 4051              		.loc 2 195 2 view .LVU1098
 4052              		.syntax unified
 4053              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h" 1
 4054 001c 4FF05003 			mov r3, #80												
 4055 0020 83F31188 		msr basepri, r3											
 4056 0024 BFF36F8F 		isb														
 4057 0028 BFF34F8F 		dsb														
ARM GAS  /tmp/ccRhC8mT.s 			page 181


 4058              	
 4059              	@ 0 "" 2
 4060              		.thumb
 4061              		.syntax unified
 4062              	.L301:
 4063              	.LBE178:
 4064              	.LBE177:
3082:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	taskENTER_CRITICAL();
 4065              		.loc 1 3082 2 discriminator 3 view .LVU1099
3082:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	taskENTER_CRITICAL();
 4066              		.loc 1 3082 2 discriminator 3 view .LVU1100
 4067 002c FEE7     		b	.L301
 4068              	.L306:
 4069 002e 00BF     		.align	2
 4070              	.L305:
 4071 0030 00000000 		.word	xNumOfOverflows
 4072 0034 00000000 		.word	xTickCount
 4073              		.cfi_endproc
 4074              	.LFE32:
 4076              		.section	.text.vTaskInternalSetTimeOutState,"ax",%progbits
 4077              		.align	1
 4078              		.global	vTaskInternalSetTimeOutState
 4079              		.syntax unified
 4080              		.thumb
 4081              		.thumb_func
 4083              	vTaskInternalSetTimeOutState:
 4084              	.LVL268:
 4085              	.LFB33:
3093:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* For internal use only as it does not use a critical section. */
 4086              		.loc 1 3093 1 view -0
 4087              		.cfi_startproc
 4088              		@ args = 0, pretend = 0, frame = 0
 4089              		@ frame_needed = 0, uses_anonymous_args = 0
 4090              		@ link register save eliminated.
3095:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	pxTimeOut->xTimeOnEntering = xTickCount;
 4091              		.loc 1 3095 2 view .LVU1102
3095:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	pxTimeOut->xTimeOnEntering = xTickCount;
 4092              		.loc 1 3095 28 is_stmt 0 view .LVU1103
 4093 0000 034B     		ldr	r3, .L308
 4094 0002 1B68     		ldr	r3, [r3]
 4095 0004 0360     		str	r3, [r0]
3096:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
 4096              		.loc 1 3096 2 is_stmt 1 view .LVU1104
3096:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
 4097              		.loc 1 3096 29 is_stmt 0 view .LVU1105
 4098 0006 034B     		ldr	r3, .L308+4
 4099 0008 1B68     		ldr	r3, [r3]
 4100 000a 4360     		str	r3, [r0, #4]
3097:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
 4101              		.loc 1 3097 1 view .LVU1106
 4102 000c 7047     		bx	lr
 4103              	.L309:
 4104 000e 00BF     		.align	2
 4105              	.L308:
 4106 0010 00000000 		.word	xNumOfOverflows
 4107 0014 00000000 		.word	xTickCount
 4108              		.cfi_endproc
ARM GAS  /tmp/ccRhC8mT.s 			page 182


 4109              	.LFE33:
 4111              		.section	.text.xTaskCheckForTimeOut,"ax",%progbits
 4112              		.align	1
 4113              		.global	xTaskCheckForTimeOut
 4114              		.syntax unified
 4115              		.thumb
 4116              		.thumb_func
 4118              	xTaskCheckForTimeOut:
 4119              	.LVL269:
 4120              	.LFB34:
3101:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** BaseType_t xReturn;
 4121              		.loc 1 3101 1 is_stmt 1 view -0
 4122              		.cfi_startproc
 4123              		@ args = 0, pretend = 0, frame = 0
 4124              		@ frame_needed = 0, uses_anonymous_args = 0
3102:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4125              		.loc 1 3102 1 view .LVU1108
3104:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	configASSERT( pxTicksToWait );
 4126              		.loc 1 3104 2 view .LVU1109
 4127 0000 D8B1     		cbz	r0, .L322
3101:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** BaseType_t xReturn;
 4128              		.loc 1 3101 1 is_stmt 0 view .LVU1110
 4129 0002 70B5     		push	{r4, r5, r6, lr}
 4130              	.LCFI38:
 4131              		.cfi_def_cfa_offset 16
 4132              		.cfi_offset 4, -16
 4133              		.cfi_offset 5, -12
 4134              		.cfi_offset 6, -8
 4135              		.cfi_offset 14, -4
 4136 0004 0C46     		mov	r4, r1
 4137 0006 0546     		mov	r5, r0
3104:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	configASSERT( pxTicksToWait );
 4138              		.loc 1 3104 27 is_stmt 1 discriminator 2 view .LVU1111
3105:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4139              		.loc 1 3105 2 view .LVU1112
 4140 0008 01B3     		cbz	r1, .L323
3105:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4141              		.loc 1 3105 31 discriminator 2 view .LVU1113
3107:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 4142              		.loc 1 3107 2 view .LVU1114
 4143 000a FFF7FEFF 		bl	vPortEnterCritical
 4144              	.LVL270:
 4145              	.LBB179:
3110:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		const TickType_t xElapsedTime = xConstTickCount - pxTimeOut->xTimeOnEntering;
 4146              		.loc 1 3110 3 view .LVU1115
3110:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		const TickType_t xElapsedTime = xConstTickCount - pxTimeOut->xTimeOnEntering;
 4147              		.loc 1 3110 20 is_stmt 0 view .LVU1116
 4148 000e 1B4B     		ldr	r3, .L325
 4149 0010 1968     		ldr	r1, [r3]
 4150              	.LVL271:
3111:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4151              		.loc 1 3111 3 is_stmt 1 view .LVU1117
3111:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4152              		.loc 1 3111 62 is_stmt 0 view .LVU1118
 4153 0012 6B68     		ldr	r3, [r5, #4]
3111:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4154              		.loc 1 3111 20 view .LVU1119
ARM GAS  /tmp/ccRhC8mT.s 			page 183


 4155 0014 C81A     		subs	r0, r1, r3
 4156              	.LVL272:
3125:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 4157              		.loc 1 3125 4 is_stmt 1 view .LVU1120
3125:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 4158              		.loc 1 3125 8 is_stmt 0 view .LVU1121
 4159 0016 2268     		ldr	r2, [r4]
3125:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 4160              		.loc 1 3125 6 view .LVU1122
 4161 0018 B2F1FF3F 		cmp	r2, #-1
 4162 001c 27D0     		beq	.L318
3135:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 4163              		.loc 1 3135 3 is_stmt 1 view .LVU1123
3135:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 4164              		.loc 1 3135 25 is_stmt 0 view .LVU1124
 4165 001e 184E     		ldr	r6, .L325+4
 4166 0020 3668     		ldr	r6, [r6]
3135:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 4167              		.loc 1 3135 5 view .LVU1125
 4168 0022 D5F800C0 		ldr	ip, [r5]
 4169 0026 B445     		cmp	ip, r6
 4170 0028 01D0     		beq	.L316
3135:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 4171              		.loc 1 3135 56 discriminator 1 view .LVU1126
 4172 002a 8B42     		cmp	r3, r1
 4173 002c 24D9     		bls	.L319
 4174              	.L316:
3144:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 4175              		.loc 1 3144 8 is_stmt 1 view .LVU1127
3144:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 4176              		.loc 1 3144 10 is_stmt 0 view .LVU1128
 4177 002e 8242     		cmp	r2, r0
 4178 0030 15D8     		bhi	.L324
3153:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			xReturn = pdTRUE;
 4179              		.loc 1 3153 4 is_stmt 1 view .LVU1129
3153:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			xReturn = pdTRUE;
 4180              		.loc 1 3153 19 is_stmt 0 view .LVU1130
 4181 0032 0023     		movs	r3, #0
 4182 0034 2360     		str	r3, [r4]
3154:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 4183              		.loc 1 3154 4 is_stmt 1 view .LVU1131
 4184              	.LVL273:
3154:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 4185              		.loc 1 3154 12 is_stmt 0 view .LVU1132
 4186 0036 0124     		movs	r4, #1
 4187              	.LVL274:
3154:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 4188              		.loc 1 3154 12 view .LVU1133
 4189 0038 1AE0     		b	.L315
 4190              	.LVL275:
 4191              	.L322:
 4192              	.LCFI39:
 4193              		.cfi_def_cfa_offset 0
 4194              		.cfi_restore 4
 4195              		.cfi_restore 5
 4196              		.cfi_restore 6
 4197              		.cfi_restore 14
ARM GAS  /tmp/ccRhC8mT.s 			page 184


3154:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 4198              		.loc 1 3154 12 view .LVU1134
 4199              	.LBE179:
3104:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	configASSERT( pxTicksToWait );
 4200              		.loc 1 3104 2 is_stmt 1 discriminator 1 view .LVU1135
 4201              	.LBB180:
 4202              	.LBI180:
 191:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** {
 4203              		.loc 2 191 30 view .LVU1136
 4204              	.LBB181:
 193:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
 4205              		.loc 2 193 1 view .LVU1137
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	(
 4206              		.loc 2 195 2 view .LVU1138
 4207              		.syntax unified
 4208              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h" 1
 4209 003a 4FF05003 			mov r3, #80												
 4210 003e 83F31188 		msr basepri, r3											
 4211 0042 BFF36F8F 		isb														
 4212 0046 BFF34F8F 		dsb														
 4213              	
 4214              	@ 0 "" 2
 4215              		.thumb
 4216              		.syntax unified
 4217              	.L312:
 4218              	.LBE181:
 4219              	.LBE180:
3104:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	configASSERT( pxTicksToWait );
 4220              		.loc 1 3104 2 discriminator 3 view .LVU1139
3104:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	configASSERT( pxTicksToWait );
 4221              		.loc 1 3104 2 discriminator 3 view .LVU1140
 4222 004a FEE7     		b	.L312
 4223              	.L323:
 4224              	.LCFI40:
 4225              		.cfi_def_cfa_offset 16
 4226              		.cfi_offset 4, -16
 4227              		.cfi_offset 5, -12
 4228              		.cfi_offset 6, -8
 4229              		.cfi_offset 14, -4
3105:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4230              		.loc 1 3105 2 discriminator 1 view .LVU1141
 4231              	.LBB182:
 4232              	.LBI182:
 191:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** {
 4233              		.loc 2 191 30 view .LVU1142
 4234              	.LBB183:
 193:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
 4235              		.loc 2 193 1 view .LVU1143
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	(
 4236              		.loc 2 195 2 view .LVU1144
 4237              		.syntax unified
 4238              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h" 1
 4239 004c 4FF05003 			mov r3, #80												
 4240 0050 83F31188 		msr basepri, r3											
 4241 0054 BFF36F8F 		isb														
 4242 0058 BFF34F8F 		dsb														
 4243              	
ARM GAS  /tmp/ccRhC8mT.s 			page 185


 4244              	@ 0 "" 2
 4245              		.thumb
 4246              		.syntax unified
 4247              	.L314:
 4248              	.LBE183:
 4249              	.LBE182:
3105:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4250              		.loc 1 3105 2 discriminator 3 view .LVU1145
3105:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4251              		.loc 1 3105 2 discriminator 3 view .LVU1146
 4252 005c FEE7     		b	.L314
 4253              	.LVL276:
 4254              	.L324:
 4255              	.LBB184:
3147:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			vTaskInternalSetTimeOutState( pxTimeOut );
 4256              		.loc 1 3147 4 view .LVU1147
3147:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			vTaskInternalSetTimeOutState( pxTimeOut );
 4257              		.loc 1 3147 19 is_stmt 0 view .LVU1148
 4258 005e 5B1A     		subs	r3, r3, r1
 4259 0060 1344     		add	r3, r3, r2
 4260 0062 2360     		str	r3, [r4]
3148:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			xReturn = pdFALSE;
 4261              		.loc 1 3148 4 is_stmt 1 view .LVU1149
 4262 0064 2846     		mov	r0, r5
 4263              	.LVL277:
3148:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			xReturn = pdFALSE;
 4264              		.loc 1 3148 4 is_stmt 0 view .LVU1150
 4265 0066 FFF7FEFF 		bl	vTaskInternalSetTimeOutState
 4266              	.LVL278:
3149:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 4267              		.loc 1 3149 4 is_stmt 1 view .LVU1151
3149:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 4268              		.loc 1 3149 12 is_stmt 0 view .LVU1152
 4269 006a 0024     		movs	r4, #0
 4270              	.LVL279:
3149:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 4271              		.loc 1 3149 12 view .LVU1153
 4272 006c 00E0     		b	.L315
 4273              	.LVL280:
 4274              	.L318:
3130:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 4275              		.loc 1 3130 13 view .LVU1154
 4276 006e 0024     		movs	r4, #0
 4277              	.LVL281:
 4278              	.L315:
3130:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 4279              		.loc 1 3130 13 view .LVU1155
 4280              	.LBE184:
3157:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4281              		.loc 1 3157 2 is_stmt 1 view .LVU1156
 4282 0070 FFF7FEFF 		bl	vPortExitCritical
 4283              	.LVL282:
3159:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
 4284              		.loc 1 3159 2 view .LVU1157
3160:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
 4285              		.loc 1 3160 1 is_stmt 0 view .LVU1158
 4286 0074 2046     		mov	r0, r4
ARM GAS  /tmp/ccRhC8mT.s 			page 186


 4287 0076 70BD     		pop	{r4, r5, r6, pc}
 4288              	.LVL283:
 4289              	.L319:
 4290              	.LBB185:
3142:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 4291              		.loc 1 3142 12 view .LVU1159
 4292 0078 0124     		movs	r4, #1
 4293              	.LVL284:
3142:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 4294              		.loc 1 3142 12 view .LVU1160
 4295 007a F9E7     		b	.L315
 4296              	.L326:
 4297              		.align	2
 4298              	.L325:
 4299 007c 00000000 		.word	xTickCount
 4300 0080 00000000 		.word	xNumOfOverflows
 4301              	.LBE185:
 4302              		.cfi_endproc
 4303              	.LFE34:
 4305              		.section	.text.vTaskMissedYield,"ax",%progbits
 4306              		.align	1
 4307              		.global	vTaskMissedYield
 4308              		.syntax unified
 4309              		.thumb
 4310              		.thumb_func
 4312              	vTaskMissedYield:
 4313              	.LFB35:
3164:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	xYieldPending = pdTRUE;
 4314              		.loc 1 3164 1 is_stmt 1 view -0
 4315              		.cfi_startproc
 4316              		@ args = 0, pretend = 0, frame = 0
 4317              		@ frame_needed = 0, uses_anonymous_args = 0
 4318              		@ link register save eliminated.
3165:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
 4319              		.loc 1 3165 2 view .LVU1162
3165:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
 4320              		.loc 1 3165 16 is_stmt 0 view .LVU1163
 4321 0000 014B     		ldr	r3, .L328
 4322 0002 0122     		movs	r2, #1
 4323 0004 1A60     		str	r2, [r3]
3166:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
 4324              		.loc 1 3166 1 view .LVU1164
 4325 0006 7047     		bx	lr
 4326              	.L329:
 4327              		.align	2
 4328              	.L328:
 4329 0008 00000000 		.word	xYieldPending
 4330              		.cfi_endproc
 4331              	.LFE35:
 4333              		.section	.text.xTaskGetCurrentTaskHandle,"ax",%progbits
 4334              		.align	1
 4335              		.global	xTaskGetCurrentTaskHandle
 4336              		.syntax unified
 4337              		.thumb
 4338              		.thumb_func
 4340              	xTaskGetCurrentTaskHandle:
 4341              	.LFB41:
ARM GAS  /tmp/ccRhC8mT.s 			page 187


3751:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TaskHandle_t xReturn;
 4342              		.loc 1 3751 2 is_stmt 1 view -0
 4343              		.cfi_startproc
 4344              		@ args = 0, pretend = 0, frame = 0
 4345              		@ frame_needed = 0, uses_anonymous_args = 0
 4346              		@ link register save eliminated.
3752:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4347              		.loc 1 3752 2 view .LVU1166
3757:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4348              		.loc 1 3757 3 view .LVU1167
3757:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4349              		.loc 1 3757 11 is_stmt 0 view .LVU1168
 4350 0000 014B     		ldr	r3, .L331
 4351 0002 1868     		ldr	r0, [r3]
 4352              	.LVL285:
3759:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 4353              		.loc 1 3759 3 is_stmt 1 view .LVU1169
3760:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4354              		.loc 1 3760 2 is_stmt 0 view .LVU1170
 4355 0004 7047     		bx	lr
 4356              	.L332:
 4357 0006 00BF     		.align	2
 4358              	.L331:
 4359 0008 00000000 		.word	pxCurrentTCB
 4360              		.cfi_endproc
 4361              	.LFE41:
 4363              		.section	.text.xTaskGetSchedulerState,"ax",%progbits
 4364              		.align	1
 4365              		.global	xTaskGetSchedulerState
 4366              		.syntax unified
 4367              		.thumb
 4368              		.thumb_func
 4370              	xTaskGetSchedulerState:
 4371              	.LFB42:
3768:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xReturn;
 4372              		.loc 1 3768 2 is_stmt 1 view -0
 4373              		.cfi_startproc
 4374              		@ args = 0, pretend = 0, frame = 0
 4375              		@ frame_needed = 0, uses_anonymous_args = 0
 4376              		@ link register save eliminated.
3769:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4377              		.loc 1 3769 2 view .LVU1172
3771:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 4378              		.loc 1 3771 3 view .LVU1173
3771:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 4379              		.loc 1 3771 25 is_stmt 0 view .LVU1174
 4380 0000 054B     		ldr	r3, .L338
 4381 0002 1B68     		ldr	r3, [r3]
3771:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 4382              		.loc 1 3771 5 view .LVU1175
 4383 0004 33B1     		cbz	r3, .L335
3777:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 4384              		.loc 1 3777 4 is_stmt 1 view .LVU1176
3777:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 4385              		.loc 1 3777 29 is_stmt 0 view .LVU1177
 4386 0006 054B     		ldr	r3, .L338+4
 4387 0008 1B68     		ldr	r3, [r3]
ARM GAS  /tmp/ccRhC8mT.s 			page 188


3777:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 4388              		.loc 1 3777 6 view .LVU1178
 4389 000a 0BB1     		cbz	r3, .L337
3783:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 4390              		.loc 1 3783 13 view .LVU1179
 4391 000c 0020     		movs	r0, #0
 4392              	.LVL286:
3787:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 4393              		.loc 1 3787 3 is_stmt 1 view .LVU1180
3788:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4394              		.loc 1 3788 2 is_stmt 0 view .LVU1181
 4395 000e 7047     		bx	lr
 4396              	.LVL287:
 4397              	.L337:
3779:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 4398              		.loc 1 3779 13 view .LVU1182
 4399 0010 0220     		movs	r0, #2
 4400 0012 7047     		bx	lr
 4401              	.L335:
3773:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 4402              		.loc 1 3773 12 view .LVU1183
 4403 0014 0120     		movs	r0, #1
 4404 0016 7047     		bx	lr
 4405              	.L339:
 4406              		.align	2
 4407              	.L338:
 4408 0018 00000000 		.word	xSchedulerRunning
 4409 001c 00000000 		.word	uxSchedulerSuspended
 4410              		.cfi_endproc
 4411              	.LFE42:
 4413              		.section	.text.xTaskPriorityInherit,"ax",%progbits
 4414              		.align	1
 4415              		.global	xTaskPriorityInherit
 4416              		.syntax unified
 4417              		.thumb
 4418              		.thumb_func
 4420              	xTaskPriorityInherit:
 4421              	.LVL288:
 4422              	.LFB43:
3796:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t * const pxMutexHolderTCB = ( TCB_t * ) pxMutexHolder;
 4423              		.loc 1 3796 2 is_stmt 1 view -0
 4424              		.cfi_startproc
 4425              		@ args = 0, pretend = 0, frame = 0
 4426              		@ frame_needed = 0, uses_anonymous_args = 0
3797:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xReturn = pdFALSE;
 4427              		.loc 1 3797 2 view .LVU1185
3798:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4428              		.loc 1 3798 2 view .LVU1186
3803:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 4429              		.loc 1 3803 3 view .LVU1187
3803:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 4430              		.loc 1 3803 5 is_stmt 0 view .LVU1188
 4431 0000 0028     		cmp	r0, #0
 4432 0002 51D0     		beq	.L347
3796:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t * const pxMutexHolderTCB = ( TCB_t * ) pxMutexHolder;
 4433              		.loc 1 3796 2 view .LVU1189
 4434 0004 38B5     		push	{r3, r4, r5, lr}
ARM GAS  /tmp/ccRhC8mT.s 			page 189


 4435              	.LCFI41:
 4436              		.cfi_def_cfa_offset 16
 4437              		.cfi_offset 3, -16
 4438              		.cfi_offset 4, -12
 4439              		.cfi_offset 5, -8
 4440              		.cfi_offset 14, -4
 4441 0006 0446     		mov	r4, r0
3808:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 4442              		.loc 1 3808 4 is_stmt 1 view .LVU1190
3808:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 4443              		.loc 1 3808 24 is_stmt 0 view .LVU1191
 4444 0008 C36A     		ldr	r3, [r0, #44]
3808:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 4445              		.loc 1 3808 51 view .LVU1192
 4446 000a 294A     		ldr	r2, .L354
 4447 000c 1268     		ldr	r2, [r2]
 4448 000e D26A     		ldr	r2, [r2, #44]
3808:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 4449              		.loc 1 3808 6 view .LVU1193
 4450 0010 9342     		cmp	r3, r2
 4451 0012 41D2     		bcs	.L342
3813:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 4452              		.loc 1 3813 5 is_stmt 1 view .LVU1194
3813:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 4453              		.loc 1 3813 11 is_stmt 0 view .LVU1195
 4454 0014 8269     		ldr	r2, [r0, #24]
3813:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 4455              		.loc 1 3813 7 view .LVU1196
 4456 0016 002A     		cmp	r2, #0
 4457 0018 05DB     		blt	.L343
3815:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 4458              		.loc 1 3815 6 is_stmt 1 view .LVU1197
 4459 001a 254A     		ldr	r2, .L354
 4460 001c 1268     		ldr	r2, [r2]
 4461 001e D26A     		ldr	r2, [r2, #44]
 4462 0020 C2F10702 		rsb	r2, r2, #7
 4463 0024 8261     		str	r2, [r0, #24]
 4464              	.L343:
3819:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 4465              		.loc 1 3819 30 view .LVU1198
3824:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 4466              		.loc 1 3824 5 view .LVU1199
3824:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 4467              		.loc 1 3824 9 is_stmt 0 view .LVU1200
 4468 0026 6169     		ldr	r1, [r4, #20]
 4469 0028 03EB8303 		add	r3, r3, r3, lsl #2
 4470 002c 214A     		ldr	r2, .L354+4
 4471 002e 02EB8303 		add	r3, r2, r3, lsl #2
3824:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 4472              		.loc 1 3824 130 view .LVU1201
 4473 0032 9942     		cmp	r1, r3
 4474 0034 05D0     		beq	.L353
3842:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 4475              		.loc 1 3842 6 is_stmt 1 view .LVU1202
3842:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 4476              		.loc 1 3842 49 is_stmt 0 view .LVU1203
 4477 0036 1E4B     		ldr	r3, .L354
ARM GAS  /tmp/ccRhC8mT.s 			page 190


 4478 0038 1B68     		ldr	r3, [r3]
 4479 003a DB6A     		ldr	r3, [r3, #44]
3842:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 4480              		.loc 1 3842 35 view .LVU1204
 4481 003c E362     		str	r3, [r4, #44]
3848:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 4482              		.loc 1 3848 13 view .LVU1205
 4483 003e 0120     		movs	r0, #1
 4484              	.LVL289:
 4485              	.L340:
3875:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4486              		.loc 1 3875 2 view .LVU1206
 4487 0040 38BD     		pop	{r3, r4, r5, pc}
 4488              	.LVL290:
 4489              	.L353:
3826:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 4490              		.loc 1 3826 6 is_stmt 1 view .LVU1207
3826:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 4491              		.loc 1 3826 10 is_stmt 0 view .LVU1208
 4492 0042 251D     		adds	r5, r4, #4
 4493 0044 2846     		mov	r0, r5
 4494              	.LVL291:
3826:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 4495              		.loc 1 3826 10 view .LVU1209
 4496 0046 FFF7FEFF 		bl	uxListRemove
 4497              	.LVL292:
3826:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 4498              		.loc 1 3826 8 discriminator 1 view .LVU1210
 4499 004a A0B1     		cbz	r0, .L345
 4500              	.L346:
3832:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 4501              		.loc 1 3832 31 is_stmt 1 view .LVU1211
3836:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					prvAddTaskToReadyList( pxMutexHolderTCB );
 4502              		.loc 1 3836 6 view .LVU1212
3836:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					prvAddTaskToReadyList( pxMutexHolderTCB );
 4503              		.loc 1 3836 49 is_stmt 0 view .LVU1213
 4504 004c 184B     		ldr	r3, .L354
 4505 004e 1B68     		ldr	r3, [r3]
 4506 0050 D86A     		ldr	r0, [r3, #44]
3836:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					prvAddTaskToReadyList( pxMutexHolderTCB );
 4507              		.loc 1 3836 35 view .LVU1214
 4508 0052 E062     		str	r0, [r4, #44]
3837:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 4509              		.loc 1 3837 6 is_stmt 1 view .LVU1215
3837:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 4510              		.loc 1 3837 6 view .LVU1216
 4511 0054 0124     		movs	r4, #1
 4512              	.LVL293:
3837:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 4513              		.loc 1 3837 6 is_stmt 0 view .LVU1217
 4514 0056 04FA00F3 		lsl	r3, r4, r0
 4515 005a 174A     		ldr	r2, .L354+8
 4516 005c 1168     		ldr	r1, [r2]
 4517 005e 0B43     		orrs	r3, r3, r1
 4518 0060 1360     		str	r3, [r2]
3837:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 4519              		.loc 1 3837 6 is_stmt 1 view .LVU1218
ARM GAS  /tmp/ccRhC8mT.s 			page 191


 4520 0062 00EB8000 		add	r0, r0, r0, lsl #2
 4521 0066 2946     		mov	r1, r5
 4522 0068 124B     		ldr	r3, .L354+4
 4523 006a 03EB8000 		add	r0, r3, r0, lsl #2
 4524 006e FFF7FEFF 		bl	vListInsertEnd
 4525              	.LVL294:
3837:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 4526              		.loc 1 3837 47 discriminator 1 view .LVU1219
3848:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 4527              		.loc 1 3848 13 is_stmt 0 view .LVU1220
 4528 0072 2046     		mov	r0, r4
 4529 0074 E4E7     		b	.L340
 4530              	.LVL295:
 4531              	.L345:
3828:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 4532              		.loc 1 3828 7 is_stmt 1 view .LVU1221
 4533 0076 E26A     		ldr	r2, [r4, #44]
 4534 0078 02EB8203 		add	r3, r2, r2, lsl #2
 4535 007c 9B00     		lsls	r3, r3, #2
 4536 007e 0D49     		ldr	r1, .L354+4
 4537 0080 CB58     		ldr	r3, [r1, r3]
 4538 0082 002B     		cmp	r3, #0
 4539 0084 E2D1     		bne	.L346
3828:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 4540              		.loc 1 3828 7 discriminator 1 view .LVU1222
 4541 0086 0123     		movs	r3, #1
 4542 0088 03FA02F2 		lsl	r2, r3, r2
 4543 008c 0A49     		ldr	r1, .L354+8
 4544 008e 0B68     		ldr	r3, [r1]
 4545 0090 23EA0203 		bic	r3, r3, r2
 4546 0094 0B60     		str	r3, [r1]
 4547 0096 D9E7     		b	.L346
 4548              	.LVL296:
 4549              	.L342:
3852:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 4550              		.loc 1 3852 5 view .LVU1223
3852:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 4551              		.loc 1 3852 25 is_stmt 0 view .LVU1224
 4552 0098 426C     		ldr	r2, [r0, #68]
3852:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 4553              		.loc 1 3852 56 view .LVU1225
 4554 009a 054B     		ldr	r3, .L354
 4555 009c 1B68     		ldr	r3, [r3]
 4556 009e DB6A     		ldr	r3, [r3, #44]
3852:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 4557              		.loc 1 3852 7 view .LVU1226
 4558 00a0 9A42     		cmp	r2, r3
 4559 00a2 03D3     		bcc	.L348
3798:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4560              		.loc 1 3798 13 view .LVU1227
 4561 00a4 0020     		movs	r0, #0
 4562              	.LVL297:
3798:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4563              		.loc 1 3798 13 view .LVU1228
 4564 00a6 CBE7     		b	.L340
 4565              	.LVL298:
 4566              	.L347:
ARM GAS  /tmp/ccRhC8mT.s 			page 192


 4567              	.LCFI42:
 4568              		.cfi_def_cfa_offset 0
 4569              		.cfi_restore 3
 4570              		.cfi_restore 4
 4571              		.cfi_restore 5
 4572              		.cfi_restore 14
3798:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4573              		.loc 1 3798 13 view .LVU1229
 4574 00a8 0020     		movs	r0, #0
 4575              	.LVL299:
3875:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4576              		.loc 1 3875 2 view .LVU1230
 4577 00aa 7047     		bx	lr
 4578              	.LVL300:
 4579              	.L348:
 4580              	.LCFI43:
 4581              		.cfi_def_cfa_offset 16
 4582              		.cfi_offset 3, -16
 4583              		.cfi_offset 4, -12
 4584              		.cfi_offset 5, -8
 4585              		.cfi_offset 14, -4
3861:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 4586              		.loc 1 3861 14 view .LVU1231
 4587 00ac 0120     		movs	r0, #1
 4588              	.LVL301:
3871:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 4589              		.loc 1 3871 28 is_stmt 1 view .LVU1232
3874:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 4590              		.loc 1 3874 3 view .LVU1233
3874:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 4591              		.loc 1 3874 10 is_stmt 0 view .LVU1234
 4592 00ae C7E7     		b	.L340
 4593              	.L355:
 4594              		.align	2
 4595              	.L354:
 4596 00b0 00000000 		.word	pxCurrentTCB
 4597 00b4 00000000 		.word	pxReadyTasksLists
 4598 00b8 00000000 		.word	uxTopReadyPriority
 4599              		.cfi_endproc
 4600              	.LFE43:
 4602              		.section	.text.xTaskPriorityDisinherit,"ax",%progbits
 4603              		.align	1
 4604              		.global	xTaskPriorityDisinherit
 4605              		.syntax unified
 4606              		.thumb
 4607              		.thumb_func
 4609              	xTaskPriorityDisinherit:
 4610              	.LVL302:
 4611              	.LFB44:
3883:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t * const pxTCB = ( TCB_t * ) pxMutexHolder;
 4612              		.loc 1 3883 2 is_stmt 1 view -0
 4613              		.cfi_startproc
 4614              		@ args = 0, pretend = 0, frame = 0
 4615              		@ frame_needed = 0, uses_anonymous_args = 0
3884:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xReturn = pdFALSE;
 4616              		.loc 1 3884 2 view .LVU1236
3885:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
ARM GAS  /tmp/ccRhC8mT.s 			page 193


 4617              		.loc 1 3885 2 view .LVU1237
3887:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 4618              		.loc 1 3887 3 view .LVU1238
3887:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 4619              		.loc 1 3887 5 is_stmt 0 view .LVU1239
 4620 0000 0028     		cmp	r0, #0
 4621 0002 4BD0     		beq	.L363
3883:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t * const pxTCB = ( TCB_t * ) pxMutexHolder;
 4622              		.loc 1 3883 2 view .LVU1240
 4623 0004 38B5     		push	{r3, r4, r5, lr}
 4624              	.LCFI44:
 4625              		.cfi_def_cfa_offset 16
 4626              		.cfi_offset 3, -16
 4627              		.cfi_offset 4, -12
 4628              		.cfi_offset 5, -8
 4629              		.cfi_offset 14, -4
 4630 0006 0446     		mov	r4, r0
3893:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			configASSERT( pxTCB->uxMutexesHeld );
 4631              		.loc 1 3893 4 is_stmt 1 view .LVU1241
 4632 0008 264B     		ldr	r3, .L371
 4633 000a 1B68     		ldr	r3, [r3]
 4634 000c 8342     		cmp	r3, r0
 4635 000e 08D0     		beq	.L358
3893:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			configASSERT( pxTCB->uxMutexesHeld );
 4636              		.loc 1 3893 4 discriminator 1 view .LVU1242
 4637              	.LBB186:
 4638              	.LBI186:
 191:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** {
 4639              		.loc 2 191 30 view .LVU1243
 4640              	.LBB187:
 193:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
 4641              		.loc 2 193 1 view .LVU1244
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	(
 4642              		.loc 2 195 2 view .LVU1245
 4643              		.syntax unified
 4644              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h" 1
 4645 0010 4FF05003 			mov r3, #80												
 4646 0014 83F31188 		msr basepri, r3											
 4647 0018 BFF36F8F 		isb														
 4648 001c BFF34F8F 		dsb														
 4649              	
 4650              	@ 0 "" 2
 4651              		.thumb
 4652              		.syntax unified
 4653              	.L359:
 4654              	.LBE187:
 4655              	.LBE186:
3893:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			configASSERT( pxTCB->uxMutexesHeld );
 4656              		.loc 1 3893 4 discriminator 3 view .LVU1246
3893:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			configASSERT( pxTCB->uxMutexesHeld );
 4657              		.loc 1 3893 4 discriminator 3 view .LVU1247
 4658 0020 FEE7     		b	.L359
 4659              	.L358:
3893:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			configASSERT( pxTCB->uxMutexesHeld );
 4660              		.loc 1 3893 41 discriminator 2 view .LVU1248
3894:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			( pxTCB->uxMutexesHeld )--;
 4661              		.loc 1 3894 4 view .LVU1249
ARM GAS  /tmp/ccRhC8mT.s 			page 194


 4662 0022 836C     		ldr	r3, [r0, #72]
 4663 0024 43B9     		cbnz	r3, .L360
3894:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			( pxTCB->uxMutexesHeld )--;
 4664              		.loc 1 3894 4 discriminator 1 view .LVU1250
 4665              	.LBB188:
 4666              	.LBI188:
 191:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** {
 4667              		.loc 2 191 30 view .LVU1251
 4668              	.LBB189:
 193:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
 4669              		.loc 2 193 1 view .LVU1252
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	(
 4670              		.loc 2 195 2 view .LVU1253
 4671              		.syntax unified
 4672              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h" 1
 4673 0026 4FF05003 			mov r3, #80												
 4674 002a 83F31188 		msr basepri, r3											
 4675 002e BFF36F8F 		isb														
 4676 0032 BFF34F8F 		dsb														
 4677              	
 4678              	@ 0 "" 2
 4679              		.thumb
 4680              		.syntax unified
 4681              	.L361:
 4682              	.LBE189:
 4683              	.LBE188:
3894:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			( pxTCB->uxMutexesHeld )--;
 4684              		.loc 1 3894 4 discriminator 3 view .LVU1254
3894:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			( pxTCB->uxMutexesHeld )--;
 4685              		.loc 1 3894 4 discriminator 3 view .LVU1255
 4686 0036 FEE7     		b	.L361
 4687              	.L360:
3894:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			( pxTCB->uxMutexesHeld )--;
 4688              		.loc 1 3894 40 discriminator 2 view .LVU1256
3895:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4689              		.loc 1 3895 4 view .LVU1257
3895:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4690              		.loc 1 3895 28 is_stmt 0 view .LVU1258
 4691 0038 013B     		subs	r3, r3, #1
 4692 003a 8364     		str	r3, [r0, #72]
3899:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 4693              		.loc 1 3899 4 is_stmt 1 view .LVU1259
3899:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 4694              		.loc 1 3899 13 is_stmt 0 view .LVU1260
 4695 003c C16A     		ldr	r1, [r0, #44]
3899:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 4696              		.loc 1 3899 34 view .LVU1261
 4697 003e 426C     		ldr	r2, [r0, #68]
3899:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 4698              		.loc 1 3899 6 view .LVU1262
 4699 0040 9142     		cmp	r1, r2
 4700 0042 2DD0     		beq	.L364
3902:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 4701              		.loc 1 3902 5 is_stmt 1 view .LVU1263
3902:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 4702              		.loc 1 3902 7 is_stmt 0 view .LVU1264
 4703 0044 0BB1     		cbz	r3, .L370
ARM GAS  /tmp/ccRhC8mT.s 			page 195


3885:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4704              		.loc 1 3885 13 view .LVU1265
 4705 0046 0020     		movs	r0, #0
 4706              	.LVL303:
3951:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 4707              		.loc 1 3951 28 is_stmt 1 view .LVU1266
3954:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 4708              		.loc 1 3954 3 view .LVU1267
 4709              	.L356:
3955:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4710              		.loc 1 3955 2 is_stmt 0 view .LVU1268
 4711 0048 38BD     		pop	{r3, r4, r5, pc}
 4712              	.LVL304:
 4713              	.L370:
3909:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 4714              		.loc 1 3909 6 is_stmt 1 view .LVU1269
3909:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 4715              		.loc 1 3909 10 is_stmt 0 view .LVU1270
 4716 004a 051D     		adds	r5, r0, #4
 4717 004c 2846     		mov	r0, r5
 4718              	.LVL305:
3909:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 4719              		.loc 1 3909 10 view .LVU1271
 4720 004e FFF7FEFF 		bl	uxListRemove
 4721              	.LVL306:
3909:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 4722              		.loc 1 3909 8 discriminator 1 view .LVU1272
 4723 0052 68B9     		cbnz	r0, .L362
3911:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 4724              		.loc 1 3911 7 is_stmt 1 view .LVU1273
 4725 0054 E36A     		ldr	r3, [r4, #44]
 4726 0056 03EB8302 		add	r2, r3, r3, lsl #2
 4727 005a 9200     		lsls	r2, r2, #2
 4728 005c 1249     		ldr	r1, .L371+4
 4729 005e 8A58     		ldr	r2, [r1, r2]
 4730 0060 32B9     		cbnz	r2, .L362
3911:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 4731              		.loc 1 3911 7 discriminator 1 view .LVU1274
 4732 0062 0122     		movs	r2, #1
 4733 0064 9A40     		lsls	r2, r2, r3
 4734 0066 1149     		ldr	r1, .L371+8
 4735 0068 0B68     		ldr	r3, [r1]
 4736 006a 23EA0203 		bic	r3, r3, r2
 4737 006e 0B60     		str	r3, [r1]
 4738              	.L362:
3915:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 4739              		.loc 1 3915 31 view .LVU1275
3920:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					pxTCB->uxPriority = pxTCB->uxBasePriority;
 4740              		.loc 1 3920 67 view .LVU1276
3921:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4741              		.loc 1 3921 6 view .LVU1277
3921:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4742              		.loc 1 3921 31 is_stmt 0 view .LVU1278
 4743 0070 606C     		ldr	r0, [r4, #68]
3921:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4744              		.loc 1 3921 24 view .LVU1279
 4745 0072 E062     		str	r0, [r4, #44]
ARM GAS  /tmp/ccRhC8mT.s 			page 196


3926:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					prvAddTaskToReadyList( pxTCB );
 4746              		.loc 1 3926 6 is_stmt 1 view .LVU1280
 4747 0074 C0F10703 		rsb	r3, r0, #7
 4748 0078 A361     		str	r3, [r4, #24]
3927:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4749              		.loc 1 3927 6 view .LVU1281
3927:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4750              		.loc 1 3927 6 view .LVU1282
 4751 007a 0124     		movs	r4, #1
 4752              	.LVL307:
3927:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4753              		.loc 1 3927 6 is_stmt 0 view .LVU1283
 4754 007c 04FA00F3 		lsl	r3, r4, r0
 4755 0080 0A4A     		ldr	r2, .L371+8
 4756 0082 1168     		ldr	r1, [r2]
 4757 0084 0B43     		orrs	r3, r3, r1
 4758 0086 1360     		str	r3, [r2]
3927:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4759              		.loc 1 3927 6 is_stmt 1 view .LVU1284
 4760 0088 00EB8000 		add	r0, r0, r0, lsl #2
 4761 008c 2946     		mov	r1, r5
 4762 008e 064B     		ldr	r3, .L371+4
 4763 0090 03EB8000 		add	r0, r3, r0, lsl #2
 4764 0094 FFF7FEFF 		bl	vListInsertEnd
 4765              	.LVL308:
3927:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4766              		.loc 1 3927 36 discriminator 1 view .LVU1285
3937:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 4767              		.loc 1 3937 6 view .LVU1286
3937:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 4768              		.loc 1 3937 14 is_stmt 0 view .LVU1287
 4769 0098 2046     		mov	r0, r4
 4770 009a D5E7     		b	.L356
 4771              	.LVL309:
 4772              	.L363:
 4773              	.LCFI45:
 4774              		.cfi_def_cfa_offset 0
 4775              		.cfi_restore 3
 4776              		.cfi_restore 4
 4777              		.cfi_restore 5
 4778              		.cfi_restore 14
3885:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4779              		.loc 1 3885 13 view .LVU1288
 4780 009c 0020     		movs	r0, #0
 4781              	.LVL310:
3955:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4782              		.loc 1 3955 2 view .LVU1289
 4783 009e 7047     		bx	lr
 4784              	.LVL311:
 4785              	.L364:
 4786              	.LCFI46:
 4787              		.cfi_def_cfa_offset 16
 4788              		.cfi_offset 3, -16
 4789              		.cfi_offset 4, -12
 4790              		.cfi_offset 5, -8
 4791              		.cfi_offset 14, -4
3885:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
ARM GAS  /tmp/ccRhC8mT.s 			page 197


 4792              		.loc 1 3885 13 view .LVU1290
 4793 00a0 0020     		movs	r0, #0
 4794              	.LVL312:
3885:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4795              		.loc 1 3885 13 view .LVU1291
 4796 00a2 D1E7     		b	.L356
 4797              	.L372:
 4798              		.align	2
 4799              	.L371:
 4800 00a4 00000000 		.word	pxCurrentTCB
 4801 00a8 00000000 		.word	pxReadyTasksLists
 4802 00ac 00000000 		.word	uxTopReadyPriority
 4803              		.cfi_endproc
 4804              	.LFE44:
 4806              		.section	.text.vTaskPriorityDisinheritAfterTimeout,"ax",%progbits
 4807              		.align	1
 4808              		.global	vTaskPriorityDisinheritAfterTimeout
 4809              		.syntax unified
 4810              		.thumb
 4811              		.thumb_func
 4813              	vTaskPriorityDisinheritAfterTimeout:
 4814              	.LVL313:
 4815              	.LFB45:
3963:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t * const pxTCB = ( TCB_t * ) pxMutexHolder;
 4816              		.loc 1 3963 2 is_stmt 1 view -0
 4817              		.cfi_startproc
 4818              		@ args = 0, pretend = 0, frame = 0
 4819              		@ frame_needed = 0, uses_anonymous_args = 0
3964:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	UBaseType_t uxPriorityUsedOnEntry, uxPriorityToUse;
 4820              		.loc 1 3964 2 view .LVU1293
3965:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	const UBaseType_t uxOnlyOneMutexHeld = ( UBaseType_t ) 1;
 4821              		.loc 1 3965 2 view .LVU1294
3966:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4822              		.loc 1 3966 2 view .LVU1295
3968:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 4823              		.loc 1 3968 3 view .LVU1296
3968:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 4824              		.loc 1 3968 5 is_stmt 0 view .LVU1297
 4825 0000 0028     		cmp	r0, #0
 4826 0002 55D0     		beq	.L383
3963:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t * const pxTCB = ( TCB_t * ) pxMutexHolder;
 4827              		.loc 1 3963 2 view .LVU1298
 4828 0004 38B5     		push	{r3, r4, r5, lr}
 4829              	.LCFI47:
 4830              		.cfi_def_cfa_offset 16
 4831              		.cfi_offset 3, -16
 4832              		.cfi_offset 4, -12
 4833              		.cfi_offset 5, -8
 4834              		.cfi_offset 14, -4
 4835 0006 0446     		mov	r4, r0
3972:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4836              		.loc 1 3972 4 is_stmt 1 view .LVU1299
 4837 0008 836C     		ldr	r3, [r0, #72]
 4838 000a 43B9     		cbnz	r3, .L375
3972:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4839              		.loc 1 3972 4 discriminator 1 view .LVU1300
 4840              	.LBB190:
ARM GAS  /tmp/ccRhC8mT.s 			page 198


 4841              	.LBI190:
 191:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** {
 4842              		.loc 2 191 30 view .LVU1301
 4843              	.LBB191:
 193:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
 4844              		.loc 2 193 1 view .LVU1302
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	(
 4845              		.loc 2 195 2 view .LVU1303
 4846              		.syntax unified
 4847              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h" 1
 4848 000c 4FF05003 			mov r3, #80												
 4849 0010 83F31188 		msr basepri, r3											
 4850 0014 BFF36F8F 		isb														
 4851 0018 BFF34F8F 		dsb														
 4852              	
 4853              	@ 0 "" 2
 4854              		.thumb
 4855              		.syntax unified
 4856              	.L376:
 4857              	.LBE191:
 4858              	.LBE190:
3972:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4859              		.loc 1 3972 4 discriminator 3 view .LVU1304
3972:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4860              		.loc 1 3972 4 discriminator 3 view .LVU1305
 4861 001c FEE7     		b	.L376
 4862              	.L375:
3972:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4863              		.loc 1 3972 40 discriminator 2 view .LVU1306
3978:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 4864              		.loc 1 3978 4 view .LVU1307
3978:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 4865              		.loc 1 3978 13 is_stmt 0 view .LVU1308
 4866 001e 426C     		ldr	r2, [r0, #68]
3978:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 4867              		.loc 1 3978 6 view .LVU1309
 4868 0020 8A42     		cmp	r2, r1
 4869 0022 00D2     		bcs	.L377
3980:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 4870              		.loc 1 3980 21 view .LVU1310
 4871 0024 0A46     		mov	r2, r1
 4872              	.L377:
 4873              	.LVL314:
3988:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 4874              		.loc 1 3988 4 is_stmt 1 view .LVU1311
3988:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 4875              		.loc 1 3988 13 is_stmt 0 view .LVU1312
 4876 0026 E16A     		ldr	r1, [r4, #44]
 4877              	.LVL315:
3988:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 4878              		.loc 1 3988 6 view .LVU1313
 4879 0028 9142     		cmp	r1, r2
 4880 002a 01D0     		beq	.L373
3994:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 4881              		.loc 1 3994 5 is_stmt 1 view .LVU1314
3994:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 4882              		.loc 1 3994 7 is_stmt 0 view .LVU1315
ARM GAS  /tmp/ccRhC8mT.s 			page 199


 4883 002c 012B     		cmp	r3, #1
 4884 002e 00D0     		beq	.L386
 4885              	.LVL316:
 4886              	.L373:
4057:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4887              		.loc 1 4057 2 view .LVU1316
 4888 0030 38BD     		pop	{r3, r4, r5, pc}
 4889              	.LVL317:
 4890              	.L386:
3999:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4891              		.loc 1 3999 6 is_stmt 1 view .LVU1317
 4892 0032 204B     		ldr	r3, .L388
 4893 0034 1B68     		ldr	r3, [r3]
 4894 0036 A342     		cmp	r3, r4
 4895 0038 31D0     		beq	.L387
3999:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4896              		.loc 1 3999 43 discriminator 2 view .LVU1318
4004:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					uxPriorityUsedOnEntry = pxTCB->uxPriority;
 4897              		.loc 1 4004 67 view .LVU1319
4005:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					pxTCB->uxPriority = uxPriorityToUse;
 4898              		.loc 1 4005 6 view .LVU1320
 4899              	.LVL318:
4006:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4900              		.loc 1 4006 6 view .LVU1321
4006:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4901              		.loc 1 4006 24 is_stmt 0 view .LVU1322
 4902 003a E262     		str	r2, [r4, #44]
4010:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 4903              		.loc 1 4010 6 is_stmt 1 view .LVU1323
4010:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 4904              		.loc 1 4010 12 is_stmt 0 view .LVU1324
 4905 003c A369     		ldr	r3, [r4, #24]
4010:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 4906              		.loc 1 4010 8 view .LVU1325
 4907 003e 002B     		cmp	r3, #0
 4908 0040 02DB     		blt	.L380
4012:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 4909              		.loc 1 4012 7 is_stmt 1 view .LVU1326
 4910 0042 C2F10702 		rsb	r2, r2, #7
 4911              	.LVL319:
4012:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 4912              		.loc 1 4012 7 is_stmt 0 view .LVU1327
 4913 0046 A261     		str	r2, [r4, #24]
 4914              	.L380:
4016:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 4915              		.loc 1 4016 31 is_stmt 1 view .LVU1328
4025:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 4916              		.loc 1 4025 6 view .LVU1329
4025:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 4917              		.loc 1 4025 10 is_stmt 0 view .LVU1330
 4918 0048 6269     		ldr	r2, [r4, #20]
 4919 004a 01EB8101 		add	r1, r1, r1, lsl #2
 4920              	.LVL320:
4025:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 4921              		.loc 1 4025 10 view .LVU1331
 4922 004e 1A4B     		ldr	r3, .L388+4
 4923 0050 03EB8103 		add	r3, r3, r1, lsl #2
ARM GAS  /tmp/ccRhC8mT.s 			page 200


4025:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 4924              		.loc 1 4025 113 view .LVU1332
 4925 0054 9A42     		cmp	r2, r3
 4926 0056 EBD1     		bne	.L373
4027:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						{
 4927              		.loc 1 4027 7 is_stmt 1 view .LVU1333
4027:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						{
 4928              		.loc 1 4027 11 is_stmt 0 view .LVU1334
 4929 0058 251D     		adds	r5, r4, #4
 4930 005a 2846     		mov	r0, r5
 4931              	.LVL321:
4027:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						{
 4932              		.loc 1 4027 11 view .LVU1335
 4933 005c FFF7FEFF 		bl	uxListRemove
 4934              	.LVL322:
4027:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						{
 4935              		.loc 1 4027 9 discriminator 1 view .LVU1336
 4936 0060 68B9     		cbnz	r0, .L381
4029:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						}
 4937              		.loc 1 4029 8 is_stmt 1 view .LVU1337
 4938 0062 E36A     		ldr	r3, [r4, #44]
 4939 0064 03EB8302 		add	r2, r3, r3, lsl #2
 4940 0068 9200     		lsls	r2, r2, #2
 4941 006a 1349     		ldr	r1, .L388+4
 4942 006c 8A58     		ldr	r2, [r1, r2]
 4943 006e 32B9     		cbnz	r2, .L381
4029:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						}
 4944              		.loc 1 4029 8 discriminator 1 view .LVU1338
 4945 0070 0122     		movs	r2, #1
 4946 0072 9A40     		lsls	r2, r2, r3
 4947 0074 1149     		ldr	r1, .L388+8
 4948 0076 0B68     		ldr	r3, [r1]
 4949 0078 23EA0203 		bic	r3, r3, r2
 4950 007c 0B60     		str	r3, [r1]
 4951              	.L381:
4033:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						}
 4952              		.loc 1 4033 32 view .LVU1339
4036:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 4953              		.loc 1 4036 7 view .LVU1340
4036:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 4954              		.loc 1 4036 7 view .LVU1341
 4955 007e E06A     		ldr	r0, [r4, #44]
 4956 0080 0123     		movs	r3, #1
 4957 0082 8340     		lsls	r3, r3, r0
 4958 0084 0D4A     		ldr	r2, .L388+8
 4959 0086 1168     		ldr	r1, [r2]
 4960 0088 0B43     		orrs	r3, r3, r1
 4961 008a 1360     		str	r3, [r2]
4036:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 4962              		.loc 1 4036 7 view .LVU1342
 4963 008c 00EB8000 		add	r0, r0, r0, lsl #2
 4964 0090 2946     		mov	r1, r5
 4965 0092 094B     		ldr	r3, .L388+4
 4966 0094 03EB8000 		add	r0, r3, r0, lsl #2
 4967 0098 FFF7FEFF 		bl	vListInsertEnd
 4968              	.LVL323:
4036:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
ARM GAS  /tmp/ccRhC8mT.s 			page 201


 4969              		.loc 1 4036 37 discriminator 1 view .LVU1343
4055:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 4970              		.loc 1 4055 28 view .LVU1344
4057:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4971              		.loc 1 4057 2 is_stmt 0 view .LVU1345
 4972 009c C8E7     		b	.L373
 4973              	.LVL324:
 4974              	.L387:
3999:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4975              		.loc 1 3999 6 is_stmt 1 discriminator 1 view .LVU1346
 4976              	.LBB192:
 4977              	.LBI192:
 191:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** {
 4978              		.loc 2 191 30 view .LVU1347
 4979              	.LBB193:
 193:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
 4980              		.loc 2 193 1 view .LVU1348
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	(
 4981              		.loc 2 195 2 view .LVU1349
 4982              		.syntax unified
 4983              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h" 1
 4984 009e 4FF05003 			mov r3, #80												
 4985 00a2 83F31188 		msr basepri, r3											
 4986 00a6 BFF36F8F 		isb														
 4987 00aa BFF34F8F 		dsb														
 4988              	
 4989              	@ 0 "" 2
 4990              		.thumb
 4991              		.syntax unified
 4992              	.L379:
 4993              	.LBE193:
 4994              	.LBE192:
3999:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4995              		.loc 1 3999 6 discriminator 3 view .LVU1350
3999:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4996              		.loc 1 3999 6 discriminator 3 view .LVU1351
 4997 00ae FEE7     		b	.L379
 4998              	.LVL325:
 4999              	.L383:
 5000              	.LCFI48:
 5001              		.cfi_def_cfa_offset 0
 5002              		.cfi_restore 3
 5003              		.cfi_restore 4
 5004              		.cfi_restore 5
 5005              		.cfi_restore 14
3999:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5006              		.loc 1 3999 6 is_stmt 0 discriminator 3 view .LVU1352
 5007 00b0 7047     		bx	lr
 5008              	.L389:
 5009 00b2 00BF     		.align	2
 5010              	.L388:
 5011 00b4 00000000 		.word	pxCurrentTCB
 5012 00b8 00000000 		.word	pxReadyTasksLists
 5013 00bc 00000000 		.word	uxTopReadyPriority
 5014              		.cfi_endproc
 5015              	.LFE45:
 5017              		.section	.text.uxTaskResetEventItemValue,"ax",%progbits
ARM GAS  /tmp/ccRhC8mT.s 			page 202


 5018              		.align	1
 5019              		.global	uxTaskResetEventItemValue
 5020              		.syntax unified
 5021              		.thumb
 5022              		.thumb_func
 5024              	uxTaskResetEventItemValue:
 5025              	.LFB46:
4377:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** TickType_t uxReturn;
 5026              		.loc 1 4377 1 is_stmt 1 view -0
 5027              		.cfi_startproc
 5028              		@ args = 0, pretend = 0, frame = 0
 5029              		@ frame_needed = 0, uses_anonymous_args = 0
 5030              		@ link register save eliminated.
4378:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5031              		.loc 1 4378 1 view .LVU1354
4380:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5032              		.loc 1 4380 2 view .LVU1355
4380:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5033              		.loc 1 4380 13 is_stmt 0 view .LVU1356
 5034 0000 044A     		ldr	r2, .L391
 5035 0002 1368     		ldr	r3, [r2]
4380:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5036              		.loc 1 4380 11 view .LVU1357
 5037 0004 9869     		ldr	r0, [r3, #24]
 5038              	.LVL326:
4384:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5039              		.loc 1 4384 2 is_stmt 1 view .LVU1358
 5040 0006 1368     		ldr	r3, [r2]
 5041 0008 DB6A     		ldr	r3, [r3, #44]
 5042 000a 1268     		ldr	r2, [r2]
 5043 000c C3F10703 		rsb	r3, r3, #7
 5044 0010 9361     		str	r3, [r2, #24]
4386:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
 5045              		.loc 1 4386 2 view .LVU1359
4387:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
 5046              		.loc 1 4387 1 is_stmt 0 view .LVU1360
 5047 0012 7047     		bx	lr
 5048              	.L392:
 5049              		.align	2
 5050              	.L391:
 5051 0014 00000000 		.word	pxCurrentTCB
 5052              		.cfi_endproc
 5053              	.LFE46:
 5055              		.section	.text.pvTaskIncrementMutexHeldCount,"ax",%progbits
 5056              		.align	1
 5057              		.global	pvTaskIncrementMutexHeldCount
 5058              		.syntax unified
 5059              		.thumb
 5060              		.thumb_func
 5062              	pvTaskIncrementMutexHeldCount:
 5063              	.LFB47:
4393:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* If xSemaphoreCreateMutex() is called before any tasks have been created
 5064              		.loc 1 4393 2 is_stmt 1 view -0
 5065              		.cfi_startproc
 5066              		@ args = 0, pretend = 0, frame = 0
 5067              		@ frame_needed = 0, uses_anonymous_args = 0
 5068              		@ link register save eliminated.
ARM GAS  /tmp/ccRhC8mT.s 			page 203


4396:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 5069              		.loc 1 4396 3 view .LVU1362
4396:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 5070              		.loc 1 4396 20 is_stmt 0 view .LVU1363
 5071 0000 054B     		ldr	r3, .L395
 5072 0002 1B68     		ldr	r3, [r3]
4396:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 5073              		.loc 1 4396 5 view .LVU1364
 5074 0004 23B1     		cbz	r3, .L394
4398:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 5075              		.loc 1 4398 4 is_stmt 1 view .LVU1365
4398:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 5076              		.loc 1 4398 18 is_stmt 0 view .LVU1366
 5077 0006 044B     		ldr	r3, .L395
 5078 0008 1A68     		ldr	r2, [r3]
 5079 000a 936C     		ldr	r3, [r2, #72]
4398:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 5080              		.loc 1 4398 35 view .LVU1367
 5081 000c 0133     		adds	r3, r3, #1
 5082 000e 9364     		str	r3, [r2, #72]
 5083              	.L394:
4401:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 5084              		.loc 1 4401 3 is_stmt 1 view .LVU1368
4401:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 5085              		.loc 1 4401 10 is_stmt 0 view .LVU1369
 5086 0010 014B     		ldr	r3, .L395
 5087 0012 1868     		ldr	r0, [r3]
4402:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5088              		.loc 1 4402 2 view .LVU1370
 5089 0014 7047     		bx	lr
 5090              	.L396:
 5091 0016 00BF     		.align	2
 5092              	.L395:
 5093 0018 00000000 		.word	pxCurrentTCB
 5094              		.cfi_endproc
 5095              	.LFE47:
 5097              		.section	.text.ulTaskNotifyTake,"ax",%progbits
 5098              		.align	1
 5099              		.global	ulTaskNotifyTake
 5100              		.syntax unified
 5101              		.thumb
 5102              		.thumb_func
 5104              	ulTaskNotifyTake:
 5105              	.LVL327:
 5106              	.LFB48:
4410:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	uint32_t ulReturn;
 5107              		.loc 1 4410 2 is_stmt 1 view -0
 5108              		.cfi_startproc
 5109              		@ args = 0, pretend = 0, frame = 0
 5110              		@ frame_needed = 0, uses_anonymous_args = 0
4410:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	uint32_t ulReturn;
 5111              		.loc 1 4410 2 is_stmt 0 view .LVU1372
 5112 0000 38B5     		push	{r3, r4, r5, lr}
 5113              	.LCFI49:
 5114              		.cfi_def_cfa_offset 16
 5115              		.cfi_offset 3, -16
 5116              		.cfi_offset 4, -12
ARM GAS  /tmp/ccRhC8mT.s 			page 204


 5117              		.cfi_offset 5, -8
 5118              		.cfi_offset 14, -4
 5119 0002 0546     		mov	r5, r0
 5120 0004 0C46     		mov	r4, r1
4411:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5121              		.loc 1 4411 2 is_stmt 1 view .LVU1373
4413:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 5122              		.loc 1 4413 3 view .LVU1374
 5123 0006 FFF7FEFF 		bl	vPortEnterCritical
 5124              	.LVL328:
4416:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 5125              		.loc 1 4416 4 view .LVU1375
4416:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 5126              		.loc 1 4416 20 is_stmt 0 view .LVU1376
 5127 000a 1A4B     		ldr	r3, .L403
 5128 000c 1B68     		ldr	r3, [r3]
 5129 000e DB6C     		ldr	r3, [r3, #76]
4416:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 5130              		.loc 1 4416 6 view .LVU1377
 5131 0010 2BB9     		cbnz	r3, .L398
4419:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5132              		.loc 1 4419 5 is_stmt 1 view .LVU1378
4419:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5133              		.loc 1 4419 17 is_stmt 0 view .LVU1379
 5134 0012 184B     		ldr	r3, .L403
 5135 0014 1B68     		ldr	r3, [r3]
4419:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5136              		.loc 1 4419 33 view .LVU1380
 5137 0016 0122     		movs	r2, #1
 5138 0018 83F85020 		strb	r2, [r3, #80]
4421:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 5139              		.loc 1 4421 5 is_stmt 1 view .LVU1381
4421:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 5140              		.loc 1 4421 7 is_stmt 0 view .LVU1382
 5141 001c ACB9     		cbnz	r4, .L402
 5142              	.L398:
4439:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 5143              		.loc 1 4439 29 is_stmt 1 view .LVU1383
4442:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5144              		.loc 1 4442 3 view .LVU1384
 5145 001e FFF7FEFF 		bl	vPortExitCritical
 5146              	.LVL329:
4444:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 5147              		.loc 1 4444 3 view .LVU1385
 5148 0022 FFF7FEFF 		bl	vPortEnterCritical
 5149              	.LVL330:
4446:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			ulReturn = pxCurrentTCB->ulNotifiedValue;
 5150              		.loc 1 4446 27 view .LVU1386
4447:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5151              		.loc 1 4447 4 view .LVU1387
4447:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5152              		.loc 1 4447 27 is_stmt 0 view .LVU1388
 5153 0026 134B     		ldr	r3, .L403
 5154 0028 1B68     		ldr	r3, [r3]
4447:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5155              		.loc 1 4447 13 view .LVU1389
 5156 002a DC6C     		ldr	r4, [r3, #76]
ARM GAS  /tmp/ccRhC8mT.s 			page 205


 5157              	.LVL331:
4449:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 5158              		.loc 1 4449 4 is_stmt 1 view .LVU1390
4449:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 5159              		.loc 1 4449 6 is_stmt 0 view .LVU1391
 5160 002c 24B1     		cbz	r4, .L399
4451:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 5161              		.loc 1 4451 5 is_stmt 1 view .LVU1392
4451:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 5162              		.loc 1 4451 7 is_stmt 0 view .LVU1393
 5163 002e DDB1     		cbz	r5, .L400
4453:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 5164              		.loc 1 4453 6 is_stmt 1 view .LVU1394
4453:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 5165              		.loc 1 4453 18 is_stmt 0 view .LVU1395
 5166 0030 104B     		ldr	r3, .L403
 5167 0032 1B68     		ldr	r3, [r3]
4453:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 5168              		.loc 1 4453 36 view .LVU1396
 5169 0034 0022     		movs	r2, #0
 5170 0036 DA64     		str	r2, [r3, #76]
 5171              	.L399:
4462:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 5172              		.loc 1 4462 29 is_stmt 1 view .LVU1397
4465:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 5173              		.loc 1 4465 4 view .LVU1398
4465:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 5174              		.loc 1 4465 16 is_stmt 0 view .LVU1399
 5175 0038 0E4B     		ldr	r3, .L403
 5176 003a 1B68     		ldr	r3, [r3]
4465:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 5177              		.loc 1 4465 32 view .LVU1400
 5178 003c 0022     		movs	r2, #0
 5179 003e 83F85020 		strb	r2, [r3, #80]
4467:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5180              		.loc 1 4467 3 is_stmt 1 view .LVU1401
 5181 0042 FFF7FEFF 		bl	vPortExitCritical
 5182              	.LVL332:
4469:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 5183              		.loc 1 4469 3 view .LVU1402
4470:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5184              		.loc 1 4470 2 is_stmt 0 view .LVU1403
 5185 0046 2046     		mov	r0, r4
 5186 0048 38BD     		pop	{r3, r4, r5, pc}
 5187              	.LVL333:
 5188              	.L402:
4423:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					traceTASK_NOTIFY_TAKE_BLOCK();
 5189              		.loc 1 4423 6 is_stmt 1 view .LVU1404
 5190 004a 1146     		mov	r1, r2
 5191 004c 2046     		mov	r0, r4
 5192 004e FFF7FEFF 		bl	prvAddCurrentTaskToDelayedList
 5193              	.LVL334:
4424:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5194              		.loc 1 4424 35 view .LVU1405
4430:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 5195              		.loc 1 4430 6 view .LVU1406
 5196 0052 4FF0E023 		mov	r3, #-536813568
ARM GAS  /tmp/ccRhC8mT.s 			page 206


 5197 0056 4FF08052 		mov	r2, #268435456
 5198 005a C3F8042D 		str	r2, [r3, #3332]
4430:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 5199              		.loc 1 4430 6 view .LVU1407
 5200              		.syntax unified
 5201              	@ 4430 "Middlewares/Third_Party/FreeRTOS/Source/tasks.c" 1
 5202 005e BFF34F8F 		dsb
 5203              	@ 0 "" 2
4430:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 5204              		.loc 1 4430 6 view .LVU1408
 5205              	@ 4430 "Middlewares/Third_Party/FreeRTOS/Source/tasks.c" 1
 5206 0062 BFF36F8F 		isb
 5207              	@ 0 "" 2
4430:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 5208              		.loc 1 4430 28 view .LVU1409
 5209              		.thumb
 5210              		.syntax unified
 5211 0066 DAE7     		b	.L398
 5212              	.LVL335:
 5213              	.L400:
4457:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 5214              		.loc 1 4457 6 view .LVU1410
4457:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 5215              		.loc 1 4457 18 is_stmt 0 view .LVU1411
 5216 0068 024B     		ldr	r3, .L403
 5217 006a 1B68     		ldr	r3, [r3]
4457:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 5218              		.loc 1 4457 47 view .LVU1412
 5219 006c 621E     		subs	r2, r4, #1
4457:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 5220              		.loc 1 4457 36 view .LVU1413
 5221 006e DA64     		str	r2, [r3, #76]
 5222 0070 E2E7     		b	.L399
 5223              	.L404:
 5224 0072 00BF     		.align	2
 5225              	.L403:
 5226 0074 00000000 		.word	pxCurrentTCB
 5227              		.cfi_endproc
 5228              	.LFE48:
 5230              		.section	.text.xTaskNotifyWait,"ax",%progbits
 5231              		.align	1
 5232              		.global	xTaskNotifyWait
 5233              		.syntax unified
 5234              		.thumb
 5235              		.thumb_func
 5237              	xTaskNotifyWait:
 5238              	.LVL336:
 5239              	.LFB49:
4478:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xReturn;
 5240              		.loc 1 4478 2 is_stmt 1 view -0
 5241              		.cfi_startproc
 5242              		@ args = 0, pretend = 0, frame = 0
 5243              		@ frame_needed = 0, uses_anonymous_args = 0
4478:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xReturn;
 5244              		.loc 1 4478 2 is_stmt 0 view .LVU1415
 5245 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 5246              	.LCFI50:
ARM GAS  /tmp/ccRhC8mT.s 			page 207


 5247              		.cfi_def_cfa_offset 24
 5248              		.cfi_offset 3, -24
 5249              		.cfi_offset 4, -20
 5250              		.cfi_offset 5, -16
 5251              		.cfi_offset 6, -12
 5252              		.cfi_offset 7, -8
 5253              		.cfi_offset 14, -4
 5254 0002 0646     		mov	r6, r0
 5255 0004 0F46     		mov	r7, r1
 5256 0006 1446     		mov	r4, r2
 5257 0008 1D46     		mov	r5, r3
4479:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5258              		.loc 1 4479 2 is_stmt 1 view .LVU1416
4481:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 5259              		.loc 1 4481 3 view .LVU1417
 5260 000a FFF7FEFF 		bl	vPortEnterCritical
 5261              	.LVL337:
4484:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 5262              		.loc 1 4484 4 view .LVU1418
4484:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 5263              		.loc 1 4484 20 is_stmt 0 view .LVU1419
 5264 000e 214B     		ldr	r3, .L413
 5265 0010 1B68     		ldr	r3, [r3]
 5266 0012 93F85020 		ldrb	r2, [r3, #80]	@ zero_extendqisi2
 5267 0016 D2B2     		uxtb	r2, r2
4484:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 5268              		.loc 1 4484 6 view .LVU1420
 5269 0018 022A     		cmp	r2, #2
 5270 001a 0AD0     		beq	.L406
4489:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5271              		.loc 1 4489 5 is_stmt 1 view .LVU1421
4489:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5272              		.loc 1 4489 17 is_stmt 0 view .LVU1422
 5273 001c 1D4A     		ldr	r2, .L413
 5274 001e 1168     		ldr	r1, [r2]
 5275 0020 CB6C     		ldr	r3, [r1, #76]
4489:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5276              		.loc 1 4489 35 view .LVU1423
 5277 0022 23EA0603 		bic	r3, r3, r6
 5278 0026 CB64     		str	r3, [r1, #76]
4492:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5279              		.loc 1 4492 5 is_stmt 1 view .LVU1424
4492:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5280              		.loc 1 4492 17 is_stmt 0 view .LVU1425
 5281 0028 1368     		ldr	r3, [r2]
4492:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5282              		.loc 1 4492 33 view .LVU1426
 5283 002a 0122     		movs	r2, #1
 5284 002c 83F85020 		strb	r2, [r3, #80]
4494:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 5285              		.loc 1 4494 5 is_stmt 1 view .LVU1427
4494:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 5286              		.loc 1 4494 7 is_stmt 0 view .LVU1428
 5287 0030 CDB9     		cbnz	r5, .L411
 5288              	.L406:
4512:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 5289              		.loc 1 4512 29 is_stmt 1 view .LVU1429
ARM GAS  /tmp/ccRhC8mT.s 			page 208


4515:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5290              		.loc 1 4515 3 view .LVU1430
 5291 0032 FFF7FEFF 		bl	vPortExitCritical
 5292              	.LVL338:
4517:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 5293              		.loc 1 4517 3 view .LVU1431
 5294 0036 FFF7FEFF 		bl	vPortEnterCritical
 5295              	.LVL339:
4519:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5296              		.loc 1 4519 27 view .LVU1432
4521:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 5297              		.loc 1 4521 4 view .LVU1433
4521:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 5298              		.loc 1 4521 6 is_stmt 0 view .LVU1434
 5299 003a 1CB1     		cbz	r4, .L407
4525:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 5300              		.loc 1 4525 5 is_stmt 1 view .LVU1435
4525:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 5301              		.loc 1 4525 41 is_stmt 0 view .LVU1436
 5302 003c 154B     		ldr	r3, .L413
 5303 003e 1B68     		ldr	r3, [r3]
 5304 0040 DB6C     		ldr	r3, [r3, #76]
4525:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 5305              		.loc 1 4525 27 view .LVU1437
 5306 0042 2360     		str	r3, [r4]
 5307              	.L407:
4532:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 5308              		.loc 1 4532 4 is_stmt 1 view .LVU1438
4532:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 5309              		.loc 1 4532 20 is_stmt 0 view .LVU1439
 5310 0044 134B     		ldr	r3, .L413
 5311 0046 1B68     		ldr	r3, [r3]
 5312 0048 93F85030 		ldrb	r3, [r3, #80]	@ zero_extendqisi2
 5313 004c DBB2     		uxtb	r3, r3
4532:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 5314              		.loc 1 4532 6 view .LVU1440
 5315 004e 022B     		cmp	r3, #2
 5316 0050 18D0     		beq	.L412
4535:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 5317              		.loc 1 4535 13 view .LVU1441
 5318 0052 0024     		movs	r4, #0
 5319              	.LVL340:
 5320              	.L408:
4545:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 5321              		.loc 1 4545 4 is_stmt 1 view .LVU1442
4545:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 5322              		.loc 1 4545 16 is_stmt 0 view .LVU1443
 5323 0054 0F4B     		ldr	r3, .L413
 5324 0056 1B68     		ldr	r3, [r3]
4545:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 5325              		.loc 1 4545 32 view .LVU1444
 5326 0058 0022     		movs	r2, #0
 5327 005a 83F85020 		strb	r2, [r3, #80]
4547:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5328              		.loc 1 4547 3 is_stmt 1 view .LVU1445
 5329 005e FFF7FEFF 		bl	vPortExitCritical
 5330              	.LVL341:
ARM GAS  /tmp/ccRhC8mT.s 			page 209


4549:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 5331              		.loc 1 4549 3 view .LVU1446
4550:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5332              		.loc 1 4550 2 is_stmt 0 view .LVU1447
 5333 0062 2046     		mov	r0, r4
 5334 0064 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 5335              	.LVL342:
 5336              	.L411:
4496:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					traceTASK_NOTIFY_WAIT_BLOCK();
 5337              		.loc 1 4496 6 is_stmt 1 view .LVU1448
 5338 0066 1146     		mov	r1, r2
 5339 0068 2846     		mov	r0, r5
 5340 006a FFF7FEFF 		bl	prvAddCurrentTaskToDelayedList
 5341              	.LVL343:
4497:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5342              		.loc 1 4497 35 view .LVU1449
4503:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 5343              		.loc 1 4503 6 view .LVU1450
 5344 006e 4FF0E023 		mov	r3, #-536813568
 5345 0072 4FF08052 		mov	r2, #268435456
 5346 0076 C3F8042D 		str	r2, [r3, #3332]
4503:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 5347              		.loc 1 4503 6 view .LVU1451
 5348              		.syntax unified
 5349              	@ 4503 "Middlewares/Third_Party/FreeRTOS/Source/tasks.c" 1
 5350 007a BFF34F8F 		dsb
 5351              	@ 0 "" 2
4503:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 5352              		.loc 1 4503 6 view .LVU1452
 5353              	@ 4503 "Middlewares/Third_Party/FreeRTOS/Source/tasks.c" 1
 5354 007e BFF36F8F 		isb
 5355              	@ 0 "" 2
4503:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 5356              		.loc 1 4503 28 view .LVU1453
 5357              		.thumb
 5358              		.syntax unified
 5359 0082 D6E7     		b	.L406
 5360              	.L412:
4541:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				xReturn = pdTRUE;
 5361              		.loc 1 4541 5 view .LVU1454
4541:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				xReturn = pdTRUE;
 5362              		.loc 1 4541 17 is_stmt 0 view .LVU1455
 5363 0084 034B     		ldr	r3, .L413
 5364 0086 1A68     		ldr	r2, [r3]
 5365 0088 D36C     		ldr	r3, [r2, #76]
4541:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				xReturn = pdTRUE;
 5366              		.loc 1 4541 35 view .LVU1456
 5367 008a 23EA0703 		bic	r3, r3, r7
 5368 008e D364     		str	r3, [r2, #76]
4542:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 5369              		.loc 1 4542 5 is_stmt 1 view .LVU1457
 5370              	.LVL344:
4542:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 5371              		.loc 1 4542 13 is_stmt 0 view .LVU1458
 5372 0090 0124     		movs	r4, #1
 5373              	.LVL345:
4542:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
ARM GAS  /tmp/ccRhC8mT.s 			page 210


 5374              		.loc 1 4542 13 view .LVU1459
 5375 0092 DFE7     		b	.L408
 5376              	.L414:
 5377              		.align	2
 5378              	.L413:
 5379 0094 00000000 		.word	pxCurrentTCB
 5380              		.cfi_endproc
 5381              	.LFE49:
 5383              		.section	.text.xTaskGenericNotify,"ax",%progbits
 5384              		.align	1
 5385              		.global	xTaskGenericNotify
 5386              		.syntax unified
 5387              		.thumb
 5388              		.thumb_func
 5390              	xTaskGenericNotify:
 5391              	.LVL346:
 5392              	.LFB50:
4558:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t * pxTCB;
 5393              		.loc 1 4558 2 is_stmt 1 view -0
 5394              		.cfi_startproc
 5395              		@ args = 0, pretend = 0, frame = 0
 5396              		@ frame_needed = 0, uses_anonymous_args = 0
4558:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t * pxTCB;
 5397              		.loc 1 4558 2 is_stmt 0 view .LVU1461
 5398 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 5399              	.LCFI51:
 5400              		.cfi_def_cfa_offset 24
 5401              		.cfi_offset 3, -24
 5402              		.cfi_offset 4, -20
 5403              		.cfi_offset 5, -16
 5404              		.cfi_offset 6, -12
 5405              		.cfi_offset 7, -8
 5406              		.cfi_offset 14, -4
4559:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xReturn = pdPASS;
 5407              		.loc 1 4559 2 is_stmt 1 view .LVU1462
4560:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	uint8_t ucOriginalNotifyState;
 5408              		.loc 1 4560 2 view .LVU1463
 5409              	.LVL347:
4561:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5410              		.loc 1 4561 2 view .LVU1464
4563:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxTCB = ( TCB_t * ) xTaskToNotify;
 5411              		.loc 1 4563 3 view .LVU1465
 5412 0002 A8B1     		cbz	r0, .L433
 5413 0004 0E46     		mov	r6, r1
 5414 0006 1746     		mov	r7, r2
 5415 0008 1C46     		mov	r4, r3
 5416 000a 0546     		mov	r5, r0
4563:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxTCB = ( TCB_t * ) xTaskToNotify;
 5417              		.loc 1 4563 32 discriminator 2 view .LVU1466
4564:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5418              		.loc 1 4564 3 view .LVU1467
 5419              	.LVL348:
4566:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 5420              		.loc 1 4566 3 view .LVU1468
 5421 000c FFF7FEFF 		bl	vPortEnterCritical
 5422              	.LVL349:
4568:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
ARM GAS  /tmp/ccRhC8mT.s 			page 211


 5423              		.loc 1 4568 4 view .LVU1469
4568:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 5424              		.loc 1 4568 6 is_stmt 0 view .LVU1470
 5425 0010 0CB1     		cbz	r4, .L418
4570:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 5426              		.loc 1 4570 5 is_stmt 1 view .LVU1471
4570:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 5427              		.loc 1 4570 42 is_stmt 0 view .LVU1472
 5428 0012 EB6C     		ldr	r3, [r5, #76]
4570:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 5429              		.loc 1 4570 35 view .LVU1473
 5430 0014 2360     		str	r3, [r4]
 5431              	.L418:
4573:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5432              		.loc 1 4573 4 is_stmt 1 view .LVU1474
4573:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5433              		.loc 1 4573 26 is_stmt 0 view .LVU1475
 5434 0016 95F85030 		ldrb	r3, [r5, #80]	@ zero_extendqisi2
 5435 001a DBB2     		uxtb	r3, r3
 5436              	.LVL350:
4575:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5437              		.loc 1 4575 4 is_stmt 1 view .LVU1476
4575:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5438              		.loc 1 4575 25 is_stmt 0 view .LVU1477
 5439 001c 0222     		movs	r2, #2
 5440 001e 85F85020 		strb	r2, [r5, #80]
4577:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 5441              		.loc 1 4577 4 is_stmt 1 view .LVU1478
 5442 0022 7A1E     		subs	r2, r7, #1
 5443 0024 032A     		cmp	r2, #3
 5444 0026 0FD8     		bhi	.L419
 5445 0028 DFE802F0 		tbb	[pc, r2]
 5446              	.L421:
 5447 002c 0B       		.byte	(.L424-.L421)/2
 5448 002d 15       		.byte	(.L423-.L421)/2
 5449 002e 19       		.byte	(.L422-.L421)/2
 5450 002f 1B       		.byte	(.L420-.L421)/2
 5451              	.LVL351:
 5452              		.p2align 1
 5453              	.L433:
4563:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxTCB = ( TCB_t * ) xTaskToNotify;
 5454              		.loc 1 4563 3 discriminator 1 view .LVU1479
 5455              	.LBB194:
 5456              	.LBI194:
 191:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** {
 5457              		.loc 2 191 30 view .LVU1480
 5458              	.LBB195:
 193:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
 5459              		.loc 2 193 1 view .LVU1481
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	(
 5460              		.loc 2 195 2 view .LVU1482
 5461              		.syntax unified
 5462              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h" 1
 5463 0030 4FF05003 			mov r3, #80												
 5464 0034 83F31188 		msr basepri, r3											
 5465 0038 BFF36F8F 		isb														
 5466 003c BFF34F8F 		dsb														
ARM GAS  /tmp/ccRhC8mT.s 			page 212


 5467              	
 5468              	@ 0 "" 2
 5469              	.LVL352:
 5470              		.thumb
 5471              		.syntax unified
 5472              	.L417:
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	(
 5473              		.loc 2 195 2 is_stmt 0 view .LVU1483
 5474              	.LBE195:
 5475              	.LBE194:
4563:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxTCB = ( TCB_t * ) xTaskToNotify;
 5476              		.loc 1 4563 3 is_stmt 1 discriminator 3 view .LVU1484
4563:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxTCB = ( TCB_t * ) xTaskToNotify;
 5477              		.loc 1 4563 3 discriminator 3 view .LVU1485
 5478 0040 FEE7     		b	.L417
 5479              	.LVL353:
 5480              	.L424:
4580:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					break;
 5481              		.loc 1 4580 6 view .LVU1486
4580:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					break;
 5482              		.loc 1 4580 11 is_stmt 0 view .LVU1487
 5483 0042 EA6C     		ldr	r2, [r5, #76]
4580:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					break;
 5484              		.loc 1 4580 29 view .LVU1488
 5485 0044 3243     		orrs	r2, r2, r6
 5486 0046 EA64     		str	r2, [r5, #76]
4581:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5487              		.loc 1 4581 6 is_stmt 1 view .LVU1489
 5488              	.L419:
4609:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5489              		.loc 1 4609 22 view .LVU1490
4613:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 5490              		.loc 1 4613 4 view .LVU1491
4613:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 5491              		.loc 1 4613 6 is_stmt 0 view .LVU1492
 5492 0048 012B     		cmp	r3, #1
 5493 004a 0ED0     		beq	.L434
 5494 004c 0124     		movs	r4, #1
 5495              	.LVL354:
 5496              	.L425:
4650:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 5497              		.loc 1 4650 29 is_stmt 1 view .LVU1493
4653:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5498              		.loc 1 4653 3 view .LVU1494
 5499 004e FFF7FEFF 		bl	vPortExitCritical
 5500              	.LVL355:
4655:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 5501              		.loc 1 4655 3 view .LVU1495
4656:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5502              		.loc 1 4656 2 is_stmt 0 view .LVU1496
 5503 0052 2046     		mov	r0, r4
 5504 0054 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 5505              	.LVL356:
 5506              	.L423:
4584:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					break;
 5507              		.loc 1 4584 6 is_stmt 1 view .LVU1497
4584:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					break;
ARM GAS  /tmp/ccRhC8mT.s 			page 213


 5508              		.loc 1 4584 13 is_stmt 0 view .LVU1498
 5509 0056 EA6C     		ldr	r2, [r5, #76]
4584:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					break;
 5510              		.loc 1 4584 32 view .LVU1499
 5511 0058 0132     		adds	r2, r2, #1
 5512 005a EA64     		str	r2, [r5, #76]
4585:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5513              		.loc 1 4585 6 is_stmt 1 view .LVU1500
 5514 005c F4E7     		b	.L419
 5515              	.L422:
4588:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					break;
 5516              		.loc 1 4588 6 view .LVU1501
4588:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					break;
 5517              		.loc 1 4588 29 is_stmt 0 view .LVU1502
 5518 005e EE64     		str	r6, [r5, #76]
4589:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5519              		.loc 1 4589 6 is_stmt 1 view .LVU1503
 5520 0060 F2E7     		b	.L419
 5521              	.L420:
4592:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 5522              		.loc 1 4592 6 view .LVU1504
4592:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 5523              		.loc 1 4592 8 is_stmt 0 view .LVU1505
 5524 0062 022B     		cmp	r3, #2
 5525 0064 31D0     		beq	.L428
4594:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 5526              		.loc 1 4594 7 is_stmt 1 view .LVU1506
4594:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 5527              		.loc 1 4594 30 is_stmt 0 view .LVU1507
 5528 0066 EE64     		str	r6, [r5, #76]
 5529 0068 EEE7     		b	.L419
 5530              	.L434:
4615:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				prvAddTaskToReadyList( pxTCB );
 5531              		.loc 1 4615 5 is_stmt 1 view .LVU1508
4615:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				prvAddTaskToReadyList( pxTCB );
 5532              		.loc 1 4615 14 is_stmt 0 view .LVU1509
 5533 006a 2C1D     		adds	r4, r5, #4
 5534              	.LVL357:
4615:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				prvAddTaskToReadyList( pxTCB );
 5535              		.loc 1 4615 14 view .LVU1510
 5536 006c 2046     		mov	r0, r4
 5537 006e FFF7FEFF 		bl	uxListRemove
 5538              	.LVL358:
4616:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5539              		.loc 1 4616 5 is_stmt 1 view .LVU1511
4616:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5540              		.loc 1 4616 5 view .LVU1512
 5541 0072 E86A     		ldr	r0, [r5, #44]
 5542 0074 0123     		movs	r3, #1
 5543 0076 8340     		lsls	r3, r3, r0
 5544 0078 164A     		ldr	r2, .L435
 5545 007a 1168     		ldr	r1, [r2]
 5546 007c 0B43     		orrs	r3, r3, r1
 5547 007e 1360     		str	r3, [r2]
4616:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5548              		.loc 1 4616 5 view .LVU1513
 5549 0080 00EB8000 		add	r0, r0, r0, lsl #2
ARM GAS  /tmp/ccRhC8mT.s 			page 214


 5550 0084 2146     		mov	r1, r4
 5551 0086 144B     		ldr	r3, .L435+4
 5552 0088 03EB8000 		add	r0, r3, r0, lsl #2
 5553 008c FFF7FEFF 		bl	vListInsertEnd
 5554              	.LVL359:
4616:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5555              		.loc 1 4616 35 discriminator 1 view .LVU1514
4619:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5556              		.loc 1 4619 5 view .LVU1515
 5557 0090 AB6A     		ldr	r3, [r5, #40]
 5558 0092 43B1     		cbz	r3, .L426
4619:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5559              		.loc 1 4619 5 discriminator 1 view .LVU1516
 5560              	.LBB196:
 5561              	.LBI196:
 191:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** {
 5562              		.loc 2 191 30 view .LVU1517
 5563              	.LBB197:
 193:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
 5564              		.loc 2 193 1 view .LVU1518
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	(
 5565              		.loc 2 195 2 view .LVU1519
 5566              		.syntax unified
 5567              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h" 1
 5568 0094 4FF05003 			mov r3, #80												
 5569 0098 83F31188 		msr basepri, r3											
 5570 009c BFF36F8F 		isb														
 5571 00a0 BFF34F8F 		dsb														
 5572              	
 5573              	@ 0 "" 2
 5574              		.thumb
 5575              		.syntax unified
 5576              	.L427:
 5577              	.LBE197:
 5578              	.LBE196:
4619:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5579              		.loc 1 4619 5 discriminator 3 view .LVU1520
4619:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5580              		.loc 1 4619 5 discriminator 3 view .LVU1521
 5581 00a4 FEE7     		b	.L427
 5582              	.L426:
4619:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5583              		.loc 1 4619 82 discriminator 2 view .LVU1522
4637:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 5584              		.loc 1 4637 5 view .LVU1523
4637:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 5585              		.loc 1 4637 14 is_stmt 0 view .LVU1524
 5586 00a6 EA6A     		ldr	r2, [r5, #44]
4637:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 5587              		.loc 1 4637 41 view .LVU1525
 5588 00a8 0C4B     		ldr	r3, .L435+8
 5589 00aa 1B68     		ldr	r3, [r3]
 5590 00ac DB6A     		ldr	r3, [r3, #44]
4637:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 5591              		.loc 1 4637 7 view .LVU1526
 5592 00ae 9A42     		cmp	r2, r3
 5593 00b0 0DD9     		bls	.L430
ARM GAS  /tmp/ccRhC8mT.s 			page 215


4641:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 5594              		.loc 1 4641 6 is_stmt 1 view .LVU1527
 5595 00b2 4FF0E023 		mov	r3, #-536813568
 5596 00b6 4FF08052 		mov	r2, #268435456
 5597 00ba C3F8042D 		str	r2, [r3, #3332]
4641:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 5598              		.loc 1 4641 6 view .LVU1528
 5599              		.syntax unified
 5600              	@ 4641 "Middlewares/Third_Party/FreeRTOS/Source/tasks.c" 1
 5601 00be BFF34F8F 		dsb
 5602              	@ 0 "" 2
4641:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 5603              		.loc 1 4641 6 view .LVU1529
 5604              	@ 4641 "Middlewares/Third_Party/FreeRTOS/Source/tasks.c" 1
 5605 00c2 BFF36F8F 		isb
 5606              	@ 0 "" 2
4641:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 5607              		.loc 1 4641 37 view .LVU1530
 5608              		.thumb
 5609              		.syntax unified
 5610 00c6 0124     		movs	r4, #1
 5611 00c8 C1E7     		b	.L425
 5612              	.LVL360:
 5613              	.L428:
4599:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 5614              		.loc 1 4599 15 is_stmt 0 view .LVU1531
 5615 00ca 0024     		movs	r4, #0
 5616              	.LVL361:
4599:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 5617              		.loc 1 4599 15 view .LVU1532
 5618 00cc BFE7     		b	.L425
 5619              	.LVL362:
 5620              	.L430:
4599:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 5621              		.loc 1 4599 15 view .LVU1533
 5622 00ce 0124     		movs	r4, #1
 5623 00d0 BDE7     		b	.L425
 5624              	.L436:
 5625 00d2 00BF     		.align	2
 5626              	.L435:
 5627 00d4 00000000 		.word	uxTopReadyPriority
 5628 00d8 00000000 		.word	pxReadyTasksLists
 5629 00dc 00000000 		.word	pxCurrentTCB
 5630              		.cfi_endproc
 5631              	.LFE50:
 5633              		.section	.text.xTaskGenericNotifyFromISR,"ax",%progbits
 5634              		.align	1
 5635              		.global	xTaskGenericNotifyFromISR
 5636              		.syntax unified
 5637              		.thumb
 5638              		.thumb_func
 5640              	xTaskGenericNotifyFromISR:
 5641              	.LVL363:
 5642              	.LFB51:
4664:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t * pxTCB;
 5643              		.loc 1 4664 2 is_stmt 1 view -0
 5644              		.cfi_startproc
ARM GAS  /tmp/ccRhC8mT.s 			page 216


 5645              		@ args = 4, pretend = 0, frame = 0
 5646              		@ frame_needed = 0, uses_anonymous_args = 0
4665:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	uint8_t ucOriginalNotifyState;
 5647              		.loc 1 4665 2 view .LVU1535
4666:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xReturn = pdPASS;
 5648              		.loc 1 4666 2 view .LVU1536
4667:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	UBaseType_t uxSavedInterruptStatus;
 5649              		.loc 1 4667 2 view .LVU1537
4668:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5650              		.loc 1 4668 2 view .LVU1538
4670:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5651              		.loc 1 4670 3 view .LVU1539
 5652 0000 08B3     		cbz	r0, .L459
4664:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t * pxTCB;
 5653              		.loc 1 4664 2 is_stmt 0 view .LVU1540
 5654 0002 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 5655              	.LCFI52:
 5656              		.cfi_def_cfa_offset 24
 5657              		.cfi_offset 4, -24
 5658              		.cfi_offset 5, -20
 5659              		.cfi_offset 6, -16
 5660              		.cfi_offset 7, -12
 5661              		.cfi_offset 8, -8
 5662              		.cfi_offset 14, -4
 5663 0006 0E46     		mov	r6, r1
 5664 0008 1746     		mov	r7, r2
 5665 000a 1C46     		mov	r4, r3
 5666 000c 0546     		mov	r5, r0
4670:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5667              		.loc 1 4670 32 is_stmt 1 discriminator 2 view .LVU1541
4688:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5668              		.loc 1 4688 3 view .LVU1542
 5669 000e FFF7FEFF 		bl	vPortValidateInterruptPriority
 5670              	.LVL364:
4690:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5671              		.loc 1 4690 3 view .LVU1543
4692:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 5672              		.loc 1 4692 3 view .LVU1544
 5673              	.LBB198:
 5674              	.LBI198:
 207:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** {
 5675              		.loc 2 207 34 view .LVU1545
 5676              	.LBB199:
 209:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
 5677              		.loc 2 209 1 view .LVU1546
 211:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	(
 5678              		.loc 2 211 2 view .LVU1547
 5679              		.syntax unified
 5680              	@ 211 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h" 1
 5681 0012 EFF31188 			mrs r8, basepri											
 5682 0016 4FF05003 		mov r3, #80												
 5683 001a 83F31188 		msr basepri, r3											
 5684 001e BFF36F8F 		isb														
 5685 0022 BFF34F8F 		dsb														
 5686              	
 5687              	@ 0 "" 2
 5688              	.LVL365:
ARM GAS  /tmp/ccRhC8mT.s 			page 217


 223:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** }
 5689              		.loc 2 223 2 view .LVU1548
 223:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** }
 5690              		.loc 2 223 2 is_stmt 0 view .LVU1549
 5691              		.thumb
 5692              		.syntax unified
 5693              	.LBE199:
 5694              	.LBE198:
4694:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 5695              		.loc 1 4694 4 is_stmt 1 view .LVU1550
4694:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 5696              		.loc 1 4694 6 is_stmt 0 view .LVU1551
 5697 0026 0CB1     		cbz	r4, .L440
4696:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 5698              		.loc 1 4696 5 is_stmt 1 view .LVU1552
4696:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 5699              		.loc 1 4696 42 is_stmt 0 view .LVU1553
 5700 0028 EB6C     		ldr	r3, [r5, #76]
4696:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 5701              		.loc 1 4696 35 view .LVU1554
 5702 002a 2360     		str	r3, [r4]
 5703              	.L440:
4699:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxTCB->ucNotifyState = taskNOTIFICATION_RECEIVED;
 5704              		.loc 1 4699 4 is_stmt 1 view .LVU1555
4699:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxTCB->ucNotifyState = taskNOTIFICATION_RECEIVED;
 5705              		.loc 1 4699 26 is_stmt 0 view .LVU1556
 5706 002c 95F85030 		ldrb	r3, [r5, #80]	@ zero_extendqisi2
 5707 0030 DBB2     		uxtb	r3, r3
 5708              	.LVL366:
4700:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5709              		.loc 1 4700 4 is_stmt 1 view .LVU1557
4700:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5710              		.loc 1 4700 25 is_stmt 0 view .LVU1558
 5711 0032 0222     		movs	r2, #2
 5712 0034 85F85020 		strb	r2, [r5, #80]
4702:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 5713              		.loc 1 4702 4 is_stmt 1 view .LVU1559
 5714 0038 7A1E     		subs	r2, r7, #1
 5715 003a 032A     		cmp	r2, #3
 5716 003c 0FD8     		bhi	.L441
 5717 003e DFE802F0 		tbb	[pc, r2]
 5718              	.L443:
 5719 0042 0B       		.byte	(.L446-.L443)/2
 5720 0043 15       		.byte	(.L445-.L443)/2
 5721 0044 19       		.byte	(.L444-.L443)/2
 5722 0045 1B       		.byte	(.L442-.L443)/2
 5723              	.LVL367:
 5724              		.p2align 1
 5725              	.L459:
 5726              	.LCFI53:
 5727              		.cfi_def_cfa_offset 0
 5728              		.cfi_restore 4
 5729              		.cfi_restore 5
 5730              		.cfi_restore 6
 5731              		.cfi_restore 7
 5732              		.cfi_restore 8
 5733              		.cfi_restore 14
ARM GAS  /tmp/ccRhC8mT.s 			page 218


4670:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5734              		.loc 1 4670 3 discriminator 1 view .LVU1560
 5735              	.LBB200:
 5736              	.LBI200:
 191:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** {
 5737              		.loc 2 191 30 view .LVU1561
 5738              	.LBB201:
 193:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
 5739              		.loc 2 193 1 view .LVU1562
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	(
 5740              		.loc 2 195 2 view .LVU1563
 5741              		.syntax unified
 5742              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h" 1
 5743 0046 4FF05003 			mov r3, #80												
 5744 004a 83F31188 		msr basepri, r3											
 5745 004e BFF36F8F 		isb														
 5746 0052 BFF34F8F 		dsb														
 5747              	
 5748              	@ 0 "" 2
 5749              	.LVL368:
 5750              		.thumb
 5751              		.syntax unified
 5752              	.L439:
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	(
 5753              		.loc 2 195 2 is_stmt 0 view .LVU1564
 5754              	.LBE201:
 5755              	.LBE200:
4670:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5756              		.loc 1 4670 3 is_stmt 1 discriminator 3 view .LVU1565
4670:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5757              		.loc 1 4670 3 discriminator 3 view .LVU1566
 5758 0056 FEE7     		b	.L439
 5759              	.LVL369:
 5760              	.L446:
 5761              	.LCFI54:
 5762              		.cfi_def_cfa_offset 24
 5763              		.cfi_offset 4, -24
 5764              		.cfi_offset 5, -20
 5765              		.cfi_offset 6, -16
 5766              		.cfi_offset 7, -12
 5767              		.cfi_offset 8, -8
 5768              		.cfi_offset 14, -4
4705:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					break;
 5769              		.loc 1 4705 6 view .LVU1567
4705:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					break;
 5770              		.loc 1 4705 11 is_stmt 0 view .LVU1568
 5771 0058 EA6C     		ldr	r2, [r5, #76]
4705:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					break;
 5772              		.loc 1 4705 29 view .LVU1569
 5773 005a 3243     		orrs	r2, r2, r6
 5774 005c EA64     		str	r2, [r5, #76]
4706:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5775              		.loc 1 4706 6 is_stmt 1 view .LVU1570
 5776              	.L441:
4734:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5777              		.loc 1 4734 31 view .LVU1571
4738:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
ARM GAS  /tmp/ccRhC8mT.s 			page 219


 5778              		.loc 1 4738 4 view .LVU1572
4738:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 5779              		.loc 1 4738 6 is_stmt 0 view .LVU1573
 5780 005e 012B     		cmp	r3, #1
 5781 0060 0ED0     		beq	.L460
 5782 0062 0120     		movs	r0, #1
 5783              	.LVL370:
 5784              	.L447:
4773:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 5785              		.loc 1 4773 30 is_stmt 1 view .LVU1574
4777:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5786              		.loc 1 4777 3 view .LVU1575
 5787              	.LBB202:
 5788              	.LBI202:
 227:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** {
 5789              		.loc 2 227 30 view .LVU1576
 5790              	.LBB203:
 5791              		.loc 2 229 2 view .LVU1577
 5792              		.syntax unified
 5793              	@ 229 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h" 1
 5794 0064 88F31188 			msr basepri, r8	
 5795              	@ 0 "" 2
 5796              		.thumb
 5797              		.syntax unified
 5798              	.LBE203:
 5799              	.LBE202:
4779:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 5800              		.loc 1 4779 3 view .LVU1578
4780:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5801              		.loc 1 4780 2 is_stmt 0 view .LVU1579
 5802 0068 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 5803              	.LVL371:
 5804              	.L445:
4709:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					break;
 5805              		.loc 1 4709 6 is_stmt 1 view .LVU1580
4709:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					break;
 5806              		.loc 1 4709 13 is_stmt 0 view .LVU1581
 5807 006c EA6C     		ldr	r2, [r5, #76]
4709:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					break;
 5808              		.loc 1 4709 32 view .LVU1582
 5809 006e 0132     		adds	r2, r2, #1
 5810 0070 EA64     		str	r2, [r5, #76]
4710:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5811              		.loc 1 4710 6 is_stmt 1 view .LVU1583
 5812 0072 F4E7     		b	.L441
 5813              	.L444:
4713:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					break;
 5814              		.loc 1 4713 6 view .LVU1584
4713:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					break;
 5815              		.loc 1 4713 29 is_stmt 0 view .LVU1585
 5816 0074 EE64     		str	r6, [r5, #76]
4714:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5817              		.loc 1 4714 6 is_stmt 1 view .LVU1586
 5818 0076 F2E7     		b	.L441
 5819              	.L442:
4717:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 5820              		.loc 1 4717 6 view .LVU1587
ARM GAS  /tmp/ccRhC8mT.s 			page 220


4717:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 5821              		.loc 1 4717 8 is_stmt 0 view .LVU1588
 5822 0078 022B     		cmp	r3, #2
 5823 007a 37D0     		beq	.L453
4719:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 5824              		.loc 1 4719 7 is_stmt 1 view .LVU1589
4719:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 5825              		.loc 1 4719 30 is_stmt 0 view .LVU1590
 5826 007c EE64     		str	r6, [r5, #76]
 5827 007e EEE7     		b	.L441
 5828              	.L460:
4741:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5829              		.loc 1 4741 5 is_stmt 1 view .LVU1591
 5830 0080 AB6A     		ldr	r3, [r5, #40]
 5831              	.LVL372:
4741:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5832              		.loc 1 4741 5 is_stmt 0 view .LVU1592
 5833 0082 43B1     		cbz	r3, .L448
4741:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5834              		.loc 1 4741 5 is_stmt 1 discriminator 1 view .LVU1593
 5835              	.LBB204:
 5836              	.LBI204:
 191:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** {
 5837              		.loc 2 191 30 view .LVU1594
 5838              	.LBB205:
 193:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
 5839              		.loc 2 193 1 view .LVU1595
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	(
 5840              		.loc 2 195 2 view .LVU1596
 5841              		.syntax unified
 5842              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h" 1
 5843 0084 4FF05003 			mov r3, #80												
 5844 0088 83F31188 		msr basepri, r3											
 5845 008c BFF36F8F 		isb														
 5846 0090 BFF34F8F 		dsb														
 5847              	
 5848              	@ 0 "" 2
 5849              		.thumb
 5850              		.syntax unified
 5851              	.L449:
 5852              	.LBE205:
 5853              	.LBE204:
4741:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5854              		.loc 1 4741 5 discriminator 3 view .LVU1597
4741:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5855              		.loc 1 4741 5 discriminator 3 view .LVU1598
 5856 0094 FEE7     		b	.L449
 5857              	.L448:
4741:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5858              		.loc 1 4741 82 discriminator 2 view .LVU1599
4743:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 5859              		.loc 1 4743 5 view .LVU1600
4743:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 5860              		.loc 1 4743 30 is_stmt 0 view .LVU1601
 5861 0096 174B     		ldr	r3, .L461
 5862 0098 1B68     		ldr	r3, [r3]
4743:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
ARM GAS  /tmp/ccRhC8mT.s 			page 221


 5863              		.loc 1 4743 7 view .LVU1602
 5864 009a EBB9     		cbnz	r3, .L450
4745:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					prvAddTaskToReadyList( pxTCB );
 5865              		.loc 1 4745 6 is_stmt 1 view .LVU1603
4745:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					prvAddTaskToReadyList( pxTCB );
 5866              		.loc 1 4745 15 is_stmt 0 view .LVU1604
 5867 009c 2C1D     		adds	r4, r5, #4
 5868              	.LVL373:
4745:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					prvAddTaskToReadyList( pxTCB );
 5869              		.loc 1 4745 15 view .LVU1605
 5870 009e 2046     		mov	r0, r4
 5871 00a0 FFF7FEFF 		bl	uxListRemove
 5872              	.LVL374:
4746:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 5873              		.loc 1 4746 6 is_stmt 1 view .LVU1606
4746:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 5874              		.loc 1 4746 6 view .LVU1607
 5875 00a4 E86A     		ldr	r0, [r5, #44]
 5876 00a6 0123     		movs	r3, #1
 5877 00a8 8340     		lsls	r3, r3, r0
 5878 00aa 134A     		ldr	r2, .L461+4
 5879 00ac 1168     		ldr	r1, [r2]
 5880 00ae 0B43     		orrs	r3, r3, r1
 5881 00b0 1360     		str	r3, [r2]
4746:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 5882              		.loc 1 4746 6 view .LVU1608
 5883 00b2 00EB8000 		add	r0, r0, r0, lsl #2
 5884 00b6 2146     		mov	r1, r4
 5885 00b8 104B     		ldr	r3, .L461+8
 5886 00ba 03EB8000 		add	r0, r3, r0, lsl #2
 5887 00be FFF7FEFF 		bl	vListInsertEnd
 5888              	.LVL375:
4746:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 5889              		.loc 1 4746 36 discriminator 1 view .LVU1609
 5890              	.L451:
4755:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 5891              		.loc 1 4755 5 view .LVU1610
4755:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 5892              		.loc 1 4755 14 is_stmt 0 view .LVU1611
 5893 00c2 EA6A     		ldr	r2, [r5, #44]
4755:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 5894              		.loc 1 4755 41 view .LVU1612
 5895 00c4 0E4B     		ldr	r3, .L461+12
 5896 00c6 1B68     		ldr	r3, [r3]
 5897 00c8 DB6A     		ldr	r3, [r3, #44]
4755:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 5898              		.loc 1 4755 7 view .LVU1613
 5899 00ca 9A42     		cmp	r2, r3
 5900 00cc 10D9     		bls	.L455
4759:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 5901              		.loc 1 4759 6 is_stmt 1 view .LVU1614
4759:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 5902              		.loc 1 4759 8 is_stmt 0 view .LVU1615
 5903 00ce 069B     		ldr	r3, [sp, #24]
 5904 00d0 43B1     		cbz	r3, .L452
4761:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 5905              		.loc 1 4761 7 is_stmt 1 view .LVU1616
ARM GAS  /tmp/ccRhC8mT.s 			page 222


4761:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 5906              		.loc 1 4761 34 is_stmt 0 view .LVU1617
 5907 00d2 0120     		movs	r0, #1
 5908 00d4 1860     		str	r0, [r3]
 5909 00d6 C5E7     		b	.L447
 5910              	.LVL376:
 5911              	.L450:
4752:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 5912              		.loc 1 4752 6 is_stmt 1 view .LVU1618
 5913 00d8 05F11801 		add	r1, r5, #24
 5914 00dc 0948     		ldr	r0, .L461+16
 5915 00de FFF7FEFF 		bl	vListInsertEnd
 5916              	.LVL377:
 5917 00e2 EEE7     		b	.L451
 5918              	.LVL378:
 5919              	.L452:
4768:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 5920              		.loc 1 4768 7 view .LVU1619
4768:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 5921              		.loc 1 4768 21 is_stmt 0 view .LVU1620
 5922 00e4 0120     		movs	r0, #1
 5923 00e6 084B     		ldr	r3, .L461+20
 5924 00e8 1860     		str	r0, [r3]
 5925 00ea BBE7     		b	.L447
 5926              	.LVL379:
 5927              	.L453:
4724:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 5928              		.loc 1 4724 15 view .LVU1621
 5929 00ec 0020     		movs	r0, #0
 5930 00ee B9E7     		b	.L447
 5931              	.LVL380:
 5932              	.L455:
4724:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 5933              		.loc 1 4724 15 view .LVU1622
 5934 00f0 0120     		movs	r0, #1
 5935 00f2 B7E7     		b	.L447
 5936              	.L462:
 5937              		.align	2
 5938              	.L461:
 5939 00f4 00000000 		.word	uxSchedulerSuspended
 5940 00f8 00000000 		.word	uxTopReadyPriority
 5941 00fc 00000000 		.word	pxReadyTasksLists
 5942 0100 00000000 		.word	pxCurrentTCB
 5943 0104 00000000 		.word	xPendingReadyList
 5944 0108 00000000 		.word	xYieldPending
 5945              		.cfi_endproc
 5946              	.LFE51:
 5948              		.section	.text.vTaskNotifyGiveFromISR,"ax",%progbits
 5949              		.align	1
 5950              		.global	vTaskNotifyGiveFromISR
 5951              		.syntax unified
 5952              		.thumb
 5953              		.thumb_func
 5955              	vTaskNotifyGiveFromISR:
 5956              	.LVL381:
 5957              	.LFB52:
4788:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t * pxTCB;
ARM GAS  /tmp/ccRhC8mT.s 			page 223


 5958              		.loc 1 4788 2 is_stmt 1 view -0
 5959              		.cfi_startproc
 5960              		@ args = 0, pretend = 0, frame = 0
 5961              		@ frame_needed = 0, uses_anonymous_args = 0
4788:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t * pxTCB;
 5962              		.loc 1 4788 2 is_stmt 0 view .LVU1624
 5963 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 5964              	.LCFI55:
 5965              		.cfi_def_cfa_offset 24
 5966              		.cfi_offset 3, -24
 5967              		.cfi_offset 4, -20
 5968              		.cfi_offset 5, -16
 5969              		.cfi_offset 6, -12
 5970              		.cfi_offset 7, -8
 5971              		.cfi_offset 14, -4
4789:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	uint8_t ucOriginalNotifyState;
 5972              		.loc 1 4789 2 is_stmt 1 view .LVU1625
4790:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	UBaseType_t uxSavedInterruptStatus;
 5973              		.loc 1 4790 2 view .LVU1626
4791:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5974              		.loc 1 4791 2 view .LVU1627
4793:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5975              		.loc 1 4793 3 view .LVU1628
 5976 0002 E0B1     		cbz	r0, .L473
 5977 0004 0D46     		mov	r5, r1
 5978 0006 0446     		mov	r4, r0
4793:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5979              		.loc 1 4793 32 discriminator 2 view .LVU1629
4811:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5980              		.loc 1 4811 3 view .LVU1630
 5981 0008 FFF7FEFF 		bl	vPortValidateInterruptPriority
 5982              	.LVL382:
4813:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5983              		.loc 1 4813 3 view .LVU1631
4815:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 5984              		.loc 1 4815 3 view .LVU1632
 5985              	.LBB206:
 5986              	.LBI206:
 207:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** {
 5987              		.loc 2 207 34 view .LVU1633
 5988              	.LBB207:
 209:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
 5989              		.loc 2 209 1 view .LVU1634
 211:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	(
 5990              		.loc 2 211 2 view .LVU1635
 5991              		.syntax unified
 5992              	@ 211 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h" 1
 5993 000c EFF31183 			mrs r3, basepri											
 5994 0010 4FF05002 		mov r2, #80												
 5995 0014 82F31188 		msr basepri, r2											
 5996 0018 BFF36F8F 		isb														
 5997 001c BFF34F8F 		dsb														
 5998              	
 5999              	@ 0 "" 2
 6000              		.thumb
 6001              		.syntax unified
 6002 0020 1E46     		mov	r6, r3
ARM GAS  /tmp/ccRhC8mT.s 			page 224


 6003              	.LVL383:
 223:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** }
 6004              		.loc 2 223 2 view .LVU1636
 223:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** }
 6005              		.loc 2 223 2 is_stmt 0 view .LVU1637
 6006              	.LBE207:
 6007              	.LBE206:
4817:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxTCB->ucNotifyState = taskNOTIFICATION_RECEIVED;
 6008              		.loc 1 4817 4 is_stmt 1 view .LVU1638
4817:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxTCB->ucNotifyState = taskNOTIFICATION_RECEIVED;
 6009              		.loc 1 4817 26 is_stmt 0 view .LVU1639
 6010 0022 94F85030 		ldrb	r3, [r4, #80]	@ zero_extendqisi2
 6011              	.LVL384:
4817:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxTCB->ucNotifyState = taskNOTIFICATION_RECEIVED;
 6012              		.loc 1 4817 26 view .LVU1640
 6013 0026 DBB2     		uxtb	r3, r3
 6014              	.LVL385:
4818:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 6015              		.loc 1 4818 4 is_stmt 1 view .LVU1641
4818:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 6016              		.loc 1 4818 25 is_stmt 0 view .LVU1642
 6017 0028 0222     		movs	r2, #2
 6018 002a 84F85020 		strb	r2, [r4, #80]
4822:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 6019              		.loc 1 4822 4 is_stmt 1 view .LVU1643
4822:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 6020              		.loc 1 4822 11 is_stmt 0 view .LVU1644
 6021 002e E26C     		ldr	r2, [r4, #76]
4822:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 6022              		.loc 1 4822 30 view .LVU1645
 6023 0030 0132     		adds	r2, r2, #1
 6024 0032 E264     		str	r2, [r4, #76]
4824:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 6025              		.loc 1 4824 36 is_stmt 1 view .LVU1646
4828:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 6026              		.loc 1 4828 4 view .LVU1647
4828:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 6027              		.loc 1 4828 6 is_stmt 0 view .LVU1648
 6028 0034 012B     		cmp	r3, #1
 6029 0036 0BD0     		beq	.L474
 6030              	.LVL386:
 6031              	.L466:
4863:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 6032              		.loc 1 4863 30 is_stmt 1 view .LVU1649
4867:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 6033              		.loc 1 4867 3 view .LVU1650
 6034              	.LBB208:
 6035              	.LBI208:
 227:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** {
 6036              		.loc 2 227 30 view .LVU1651
 6037              	.LBB209:
 6038              		.loc 2 229 2 view .LVU1652
 6039              		.syntax unified
 6040              	@ 229 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h" 1
 6041 0038 86F31188 			msr basepri, r6	
 6042              	@ 0 "" 2
 6043              		.thumb
ARM GAS  /tmp/ccRhC8mT.s 			page 225


 6044              		.syntax unified
 6045              	.LBE209:
 6046              	.LBE208:
4868:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 6047              		.loc 1 4868 2 is_stmt 0 view .LVU1653
 6048 003c F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 6049              	.LVL387:
 6050              	.L473:
4793:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 6051              		.loc 1 4793 3 is_stmt 1 discriminator 1 view .LVU1654
 6052              	.LBB210:
 6053              	.LBI210:
 191:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** {
 6054              		.loc 2 191 30 view .LVU1655
 6055              	.LBB211:
 193:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
 6056              		.loc 2 193 1 view .LVU1656
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	(
 6057              		.loc 2 195 2 view .LVU1657
 6058              		.syntax unified
 6059              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h" 1
 6060 003e 4FF05003 			mov r3, #80												
 6061 0042 83F31188 		msr basepri, r3											
 6062 0046 BFF36F8F 		isb														
 6063 004a BFF34F8F 		dsb														
 6064              	
 6065              	@ 0 "" 2
 6066              		.thumb
 6067              		.syntax unified
 6068              	.L465:
 6069              	.LBE211:
 6070              	.LBE210:
4793:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 6071              		.loc 1 4793 3 discriminator 3 view .LVU1658
4793:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 6072              		.loc 1 4793 3 discriminator 3 view .LVU1659
 6073 004e FEE7     		b	.L465
 6074              	.LVL388:
 6075              	.L474:
4831:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 6076              		.loc 1 4831 5 view .LVU1660
 6077 0050 A36A     		ldr	r3, [r4, #40]
 6078              	.LVL389:
4831:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 6079              		.loc 1 4831 5 is_stmt 0 view .LVU1661
 6080 0052 43B1     		cbz	r3, .L467
4831:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 6081              		.loc 1 4831 5 is_stmt 1 discriminator 1 view .LVU1662
 6082              	.LBB212:
 6083              	.LBI212:
 191:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** {
 6084              		.loc 2 191 30 view .LVU1663
 6085              	.LBB213:
 193:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
 6086              		.loc 2 193 1 view .LVU1664
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	(
 6087              		.loc 2 195 2 view .LVU1665
ARM GAS  /tmp/ccRhC8mT.s 			page 226


 6088              		.syntax unified
 6089              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h" 1
 6090 0054 4FF05003 			mov r3, #80												
 6091 0058 83F31188 		msr basepri, r3											
 6092 005c BFF36F8F 		isb														
 6093 0060 BFF34F8F 		dsb														
 6094              	
 6095              	@ 0 "" 2
 6096              		.thumb
 6097              		.syntax unified
 6098              	.L468:
 6099              	.LBE213:
 6100              	.LBE212:
4831:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 6101              		.loc 1 4831 5 discriminator 3 view .LVU1666
4831:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 6102              		.loc 1 4831 5 discriminator 3 view .LVU1667
 6103 0064 FEE7     		b	.L468
 6104              	.L467:
4831:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 6105              		.loc 1 4831 82 discriminator 2 view .LVU1668
4833:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 6106              		.loc 1 4833 5 view .LVU1669
4833:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 6107              		.loc 1 4833 30 is_stmt 0 view .LVU1670
 6108 0066 154B     		ldr	r3, .L475
 6109 0068 1B68     		ldr	r3, [r3]
4833:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 6110              		.loc 1 4833 7 view .LVU1671
 6111 006a E3B9     		cbnz	r3, .L469
4835:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					prvAddTaskToReadyList( pxTCB );
 6112              		.loc 1 4835 6 is_stmt 1 view .LVU1672
4835:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					prvAddTaskToReadyList( pxTCB );
 6113              		.loc 1 4835 15 is_stmt 0 view .LVU1673
 6114 006c 271D     		adds	r7, r4, #4
 6115 006e 3846     		mov	r0, r7
 6116 0070 FFF7FEFF 		bl	uxListRemove
 6117              	.LVL390:
4836:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 6118              		.loc 1 4836 6 is_stmt 1 view .LVU1674
4836:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 6119              		.loc 1 4836 6 view .LVU1675
 6120 0074 E06A     		ldr	r0, [r4, #44]
 6121 0076 0123     		movs	r3, #1
 6122 0078 8340     		lsls	r3, r3, r0
 6123 007a 114A     		ldr	r2, .L475+4
 6124 007c 1168     		ldr	r1, [r2]
 6125 007e 0B43     		orrs	r3, r3, r1
 6126 0080 1360     		str	r3, [r2]
4836:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 6127              		.loc 1 4836 6 view .LVU1676
 6128 0082 00EB8000 		add	r0, r0, r0, lsl #2
 6129 0086 3946     		mov	r1, r7
 6130 0088 0E4B     		ldr	r3, .L475+8
 6131 008a 03EB8000 		add	r0, r3, r0, lsl #2
 6132 008e FFF7FEFF 		bl	vListInsertEnd
 6133              	.LVL391:
ARM GAS  /tmp/ccRhC8mT.s 			page 227


4836:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 6134              		.loc 1 4836 36 discriminator 1 view .LVU1677
 6135              	.L470:
4845:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 6136              		.loc 1 4845 5 view .LVU1678
4845:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 6137              		.loc 1 4845 14 is_stmt 0 view .LVU1679
 6138 0092 E26A     		ldr	r2, [r4, #44]
4845:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 6139              		.loc 1 4845 41 view .LVU1680
 6140 0094 0C4B     		ldr	r3, .L475+12
 6141 0096 1B68     		ldr	r3, [r3]
 6142 0098 DB6A     		ldr	r3, [r3, #44]
4845:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 6143              		.loc 1 4845 7 view .LVU1681
 6144 009a 9A42     		cmp	r2, r3
 6145 009c CCD9     		bls	.L466
4849:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 6146              		.loc 1 4849 6 is_stmt 1 view .LVU1682
4849:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 6147              		.loc 1 4849 8 is_stmt 0 view .LVU1683
 6148 009e 45B1     		cbz	r5, .L471
4851:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 6149              		.loc 1 4851 7 is_stmt 1 view .LVU1684
4851:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 6150              		.loc 1 4851 34 is_stmt 0 view .LVU1685
 6151 00a0 0123     		movs	r3, #1
 6152 00a2 2B60     		str	r3, [r5]
 6153 00a4 C8E7     		b	.L466
 6154              	.L469:
4842:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 6155              		.loc 1 4842 6 is_stmt 1 view .LVU1686
 6156 00a6 04F11801 		add	r1, r4, #24
 6157 00aa 0848     		ldr	r0, .L475+16
 6158 00ac FFF7FEFF 		bl	vListInsertEnd
 6159              	.LVL392:
 6160 00b0 EFE7     		b	.L470
 6161              	.L471:
4858:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 6162              		.loc 1 4858 7 view .LVU1687
4858:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 6163              		.loc 1 4858 21 is_stmt 0 view .LVU1688
 6164 00b2 074B     		ldr	r3, .L475+20
 6165 00b4 0122     		movs	r2, #1
 6166 00b6 1A60     		str	r2, [r3]
 6167 00b8 BEE7     		b	.L466
 6168              	.L476:
 6169 00ba 00BF     		.align	2
 6170              	.L475:
 6171 00bc 00000000 		.word	uxSchedulerSuspended
 6172 00c0 00000000 		.word	uxTopReadyPriority
 6173 00c4 00000000 		.word	pxReadyTasksLists
 6174 00c8 00000000 		.word	pxCurrentTCB
 6175 00cc 00000000 		.word	xPendingReadyList
 6176 00d0 00000000 		.word	xYieldPending
 6177              		.cfi_endproc
 6178              	.LFE52:
ARM GAS  /tmp/ccRhC8mT.s 			page 228


 6180              		.section	.text.xTaskNotifyStateClear,"ax",%progbits
 6181              		.align	1
 6182              		.global	xTaskNotifyStateClear
 6183              		.syntax unified
 6184              		.thumb
 6185              		.thumb_func
 6187              	xTaskNotifyStateClear:
 6188              	.LVL393:
 6189              	.LFB53:
4877:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t *pxTCB;
 6190              		.loc 1 4877 2 is_stmt 1 view -0
 6191              		.cfi_startproc
 6192              		@ args = 0, pretend = 0, frame = 0
 6193              		@ frame_needed = 0, uses_anonymous_args = 0
4877:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t *pxTCB;
 6194              		.loc 1 4877 2 is_stmt 0 view .LVU1690
 6195 0000 10B5     		push	{r4, lr}
 6196              	.LCFI56:
 6197              		.cfi_def_cfa_offset 8
 6198              		.cfi_offset 4, -8
 6199              		.cfi_offset 14, -4
4878:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xReturn;
 6200              		.loc 1 4878 2 is_stmt 1 view .LVU1691
4879:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 6201              		.loc 1 4879 2 view .LVU1692
4883:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 6202              		.loc 1 4883 3 view .LVU1693
4883:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 6203              		.loc 1 4883 11 is_stmt 0 view .LVU1694
 6204 0002 0446     		mov	r4, r0
 6205 0004 58B1     		cbz	r0, .L482
 6206              	.LVL394:
 6207              	.L478:
4885:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 6208              		.loc 1 4885 3 is_stmt 1 view .LVU1695
 6209 0006 FFF7FEFF 		bl	vPortEnterCritical
 6210              	.LVL395:
4887:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 6211              		.loc 1 4887 4 view .LVU1696
4887:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 6212              		.loc 1 4887 13 is_stmt 0 view .LVU1697
 6213 000a 94F85030 		ldrb	r3, [r4, #80]	@ zero_extendqisi2
 6214 000e DBB2     		uxtb	r3, r3
4887:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 6215              		.loc 1 4887 6 view .LVU1698
 6216 0010 022B     		cmp	r3, #2
 6217 0012 07D0     		beq	.L483
4894:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 6218              		.loc 1 4894 13 view .LVU1699
 6219 0014 0024     		movs	r4, #0
 6220              	.LVL396:
 6221              	.L479:
4897:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 6222              		.loc 1 4897 3 is_stmt 1 view .LVU1700
 6223 0016 FFF7FEFF 		bl	vPortExitCritical
 6224              	.LVL397:
4899:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
ARM GAS  /tmp/ccRhC8mT.s 			page 229


 6225              		.loc 1 4899 3 view .LVU1701
4900:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 6226              		.loc 1 4900 2 is_stmt 0 view .LVU1702
 6227 001a 2046     		mov	r0, r4
 6228 001c 10BD     		pop	{r4, pc}
 6229              	.LVL398:
 6230              	.L482:
4883:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 6231              		.loc 1 4883 11 discriminator 1 view .LVU1703
 6232 001e 044B     		ldr	r3, .L484
 6233 0020 1C68     		ldr	r4, [r3]
 6234              	.LVL399:
4883:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 6235              		.loc 1 4883 11 discriminator 1 view .LVU1704
 6236 0022 F0E7     		b	.L478
 6237              	.LVL400:
 6238              	.L483:
4889:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				xReturn = pdPASS;
 6239              		.loc 1 4889 5 is_stmt 1 view .LVU1705
4889:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				xReturn = pdPASS;
 6240              		.loc 1 4889 26 is_stmt 0 view .LVU1706
 6241 0024 0023     		movs	r3, #0
 6242 0026 84F85030 		strb	r3, [r4, #80]
4890:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 6243              		.loc 1 4890 5 is_stmt 1 view .LVU1707
 6244              	.LVL401:
4890:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 6245              		.loc 1 4890 13 is_stmt 0 view .LVU1708
 6246 002a 0124     		movs	r4, #1
 6247              	.LVL402:
4890:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 6248              		.loc 1 4890 13 view .LVU1709
 6249 002c F3E7     		b	.L479
 6250              	.L485:
 6251 002e 00BF     		.align	2
 6252              	.L484:
 6253 0030 00000000 		.word	pxCurrentTCB
 6254              		.cfi_endproc
 6255              	.LFE53:
 6257              		.section	.bss.uxSchedulerSuspended,"aw",%nobits
 6258              		.align	2
 6261              	uxSchedulerSuspended:
 6262 0000 00000000 		.space	4
 6263              		.section	.bss.xIdleTaskHandle,"aw",%nobits
 6264              		.align	2
 6267              	xIdleTaskHandle:
 6268 0000 00000000 		.space	4
 6269              		.section	.bss.xNextTaskUnblockTime,"aw",%nobits
 6270              		.align	2
 6273              	xNextTaskUnblockTime:
 6274 0000 00000000 		.space	4
 6275              		.section	.bss.uxTaskNumber,"aw",%nobits
 6276              		.align	2
 6279              	uxTaskNumber:
 6280 0000 00000000 		.space	4
 6281              		.section	.bss.xNumOfOverflows,"aw",%nobits
 6282              		.align	2
ARM GAS  /tmp/ccRhC8mT.s 			page 230


 6285              	xNumOfOverflows:
 6286 0000 00000000 		.space	4
 6287              		.section	.bss.xYieldPending,"aw",%nobits
 6288              		.align	2
 6291              	xYieldPending:
 6292 0000 00000000 		.space	4
 6293              		.section	.bss.uxPendedTicks,"aw",%nobits
 6294              		.align	2
 6297              	uxPendedTicks:
 6298 0000 00000000 		.space	4
 6299              		.section	.bss.xSchedulerRunning,"aw",%nobits
 6300              		.align	2
 6303              	xSchedulerRunning:
 6304 0000 00000000 		.space	4
 6305              		.section	.bss.uxTopReadyPriority,"aw",%nobits
 6306              		.align	2
 6309              	uxTopReadyPriority:
 6310 0000 00000000 		.space	4
 6311              		.section	.bss.xTickCount,"aw",%nobits
 6312              		.align	2
 6315              	xTickCount:
 6316 0000 00000000 		.space	4
 6317              		.section	.bss.uxCurrentNumberOfTasks,"aw",%nobits
 6318              		.align	2
 6321              	uxCurrentNumberOfTasks:
 6322 0000 00000000 		.space	4
 6323              		.section	.bss.xSuspendedTaskList,"aw",%nobits
 6324              		.align	2
 6327              	xSuspendedTaskList:
 6328 0000 00000000 		.space	20
 6328      00000000 
 6328      00000000 
 6328      00000000 
 6328      00000000 
 6329              		.section	.bss.uxDeletedTasksWaitingCleanUp,"aw",%nobits
 6330              		.align	2
 6333              	uxDeletedTasksWaitingCleanUp:
 6334 0000 00000000 		.space	4
 6335              		.section	.bss.xTasksWaitingTermination,"aw",%nobits
 6336              		.align	2
 6339              	xTasksWaitingTermination:
 6340 0000 00000000 		.space	20
 6340      00000000 
 6340      00000000 
 6340      00000000 
 6340      00000000 
 6341              		.section	.bss.xPendingReadyList,"aw",%nobits
 6342              		.align	2
 6345              	xPendingReadyList:
 6346 0000 00000000 		.space	20
 6346      00000000 
 6346      00000000 
 6346      00000000 
 6346      00000000 
 6347              		.section	.bss.pxOverflowDelayedTaskList,"aw",%nobits
 6348              		.align	2
 6351              	pxOverflowDelayedTaskList:
ARM GAS  /tmp/ccRhC8mT.s 			page 231


 6352 0000 00000000 		.space	4
 6353              		.section	.bss.pxDelayedTaskList,"aw",%nobits
 6354              		.align	2
 6357              	pxDelayedTaskList:
 6358 0000 00000000 		.space	4
 6359              		.section	.bss.xDelayedTaskList2,"aw",%nobits
 6360              		.align	2
 6363              	xDelayedTaskList2:
 6364 0000 00000000 		.space	20
 6364      00000000 
 6364      00000000 
 6364      00000000 
 6364      00000000 
 6365              		.section	.bss.xDelayedTaskList1,"aw",%nobits
 6366              		.align	2
 6369              	xDelayedTaskList1:
 6370 0000 00000000 		.space	20
 6370      00000000 
 6370      00000000 
 6370      00000000 
 6370      00000000 
 6371              		.section	.bss.pxReadyTasksLists,"aw",%nobits
 6372              		.align	2
 6375              	pxReadyTasksLists:
 6376 0000 00000000 		.space	140
 6376      00000000 
 6376      00000000 
 6376      00000000 
 6376      00000000 
 6377              		.global	pxCurrentTCB
 6378              		.section	.bss.pxCurrentTCB,"aw",%nobits
 6379              		.align	2
 6382              	pxCurrentTCB:
 6383 0000 00000000 		.space	4
 6384              		.text
 6385              	.Letext0:
 6386              		.file 3 "/usr/lib/gcc/arm-none-eabi/13.2.0/include/stddef.h"
 6387              		.file 4 "/usr/arm-none-eabi/include/machine/_default_types.h"
 6388              		.file 5 "/usr/arm-none-eabi/include/sys/_stdint.h"
 6389              		.file 6 "Middlewares/Third_Party/FreeRTOS/Source/include/projdefs.h"
 6390              		.file 7 "Middlewares/Third_Party/FreeRTOS/Source/include/FreeRTOS.h"
 6391              		.file 8 "Middlewares/Third_Party/FreeRTOS/Source/include/list.h"
 6392              		.file 9 "Middlewares/Third_Party/FreeRTOS/Source/include/task.h"
 6393              		.file 10 "Middlewares/Third_Party/FreeRTOS/Source/include/portable.h"
ARM GAS  /tmp/ccRhC8mT.s 			page 232


DEFINED SYMBOLS
                            *ABS*:00000000 tasks.c
     /tmp/ccRhC8mT.s:19     .text.prvTaskIsTaskSuspended:00000000 $t
     /tmp/ccRhC8mT.s:24     .text.prvTaskIsTaskSuspended:00000000 prvTaskIsTaskSuspended
     /tmp/ccRhC8mT.s:110    .text.prvTaskIsTaskSuspended:00000038 $d
     /tmp/ccRhC8mT.s:6327   .bss.xSuspendedTaskList:00000000 xSuspendedTaskList
     /tmp/ccRhC8mT.s:6345   .bss.xPendingReadyList:00000000 xPendingReadyList
     /tmp/ccRhC8mT.s:116    .text.prvResetNextTaskUnblockTime:00000000 $t
     /tmp/ccRhC8mT.s:121    .text.prvResetNextTaskUnblockTime:00000000 prvResetNextTaskUnblockTime
     /tmp/ccRhC8mT.s:164    .text.prvResetNextTaskUnblockTime:00000024 $d
     /tmp/ccRhC8mT.s:6357   .bss.pxDelayedTaskList:00000000 pxDelayedTaskList
     /tmp/ccRhC8mT.s:6273   .bss.xNextTaskUnblockTime:00000000 xNextTaskUnblockTime
     /tmp/ccRhC8mT.s:170    .text.prvInitialiseNewTask:00000000 $t
     /tmp/ccRhC8mT.s:175    .text.prvInitialiseNewTask:00000000 prvInitialiseNewTask
     /tmp/ccRhC8mT.s:317    .text.prvInitialiseTaskLists:00000000 $t
     /tmp/ccRhC8mT.s:322    .text.prvInitialiseTaskLists:00000000 prvInitialiseTaskLists
     /tmp/ccRhC8mT.s:395    .text.prvInitialiseTaskLists:00000048 $d
     /tmp/ccRhC8mT.s:6375   .bss.pxReadyTasksLists:00000000 pxReadyTasksLists
     /tmp/ccRhC8mT.s:6369   .bss.xDelayedTaskList1:00000000 xDelayedTaskList1
     /tmp/ccRhC8mT.s:6363   .bss.xDelayedTaskList2:00000000 xDelayedTaskList2
     /tmp/ccRhC8mT.s:6339   .bss.xTasksWaitingTermination:00000000 xTasksWaitingTermination
     /tmp/ccRhC8mT.s:6351   .bss.pxOverflowDelayedTaskList:00000000 pxOverflowDelayedTaskList
     /tmp/ccRhC8mT.s:407    .text.prvAddNewTaskToReadyList:00000000 $t
     /tmp/ccRhC8mT.s:412    .text.prvAddNewTaskToReadyList:00000000 prvAddNewTaskToReadyList
     /tmp/ccRhC8mT.s:548    .text.prvAddNewTaskToReadyList:00000090 $d
     /tmp/ccRhC8mT.s:6321   .bss.uxCurrentNumberOfTasks:00000000 uxCurrentNumberOfTasks
     /tmp/ccRhC8mT.s:6382   .bss.pxCurrentTCB:00000000 pxCurrentTCB
     /tmp/ccRhC8mT.s:6303   .bss.xSchedulerRunning:00000000 xSchedulerRunning
     /tmp/ccRhC8mT.s:6279   .bss.uxTaskNumber:00000000 uxTaskNumber
     /tmp/ccRhC8mT.s:6309   .bss.uxTopReadyPriority:00000000 uxTopReadyPriority
     /tmp/ccRhC8mT.s:558    .text.prvDeleteTCB:00000000 $t
     /tmp/ccRhC8mT.s:563    .text.prvDeleteTCB:00000000 prvDeleteTCB
     /tmp/ccRhC8mT.s:638    .text.prvCheckTasksWaitingTermination:00000000 $t
     /tmp/ccRhC8mT.s:643    .text.prvCheckTasksWaitingTermination:00000000 prvCheckTasksWaitingTermination
     /tmp/ccRhC8mT.s:716    .text.prvCheckTasksWaitingTermination:00000040 $d
     /tmp/ccRhC8mT.s:6333   .bss.uxDeletedTasksWaitingCleanUp:00000000 uxDeletedTasksWaitingCleanUp
     /tmp/ccRhC8mT.s:723    .text.prvIdleTask:00000000 $t
     /tmp/ccRhC8mT.s:728    .text.prvIdleTask:00000000 prvIdleTask
     /tmp/ccRhC8mT.s:777    .text.prvIdleTask:00000024 $d
     /tmp/ccRhC8mT.s:782    .text.prvAddCurrentTaskToDelayedList:00000000 $t
     /tmp/ccRhC8mT.s:787    .text.prvAddCurrentTaskToDelayedList:00000000 prvAddCurrentTaskToDelayedList
     /tmp/ccRhC8mT.s:907    .text.prvAddCurrentTaskToDelayedList:0000007c $d
     /tmp/ccRhC8mT.s:6315   .bss.xTickCount:00000000 xTickCount
     /tmp/ccRhC8mT.s:918    .text.xTaskCreateStatic:00000000 $t
     /tmp/ccRhC8mT.s:924    .text.xTaskCreateStatic:00000000 xTaskCreateStatic
     /tmp/ccRhC8mT.s:1083   .text.xTaskCreate:00000000 $t
     /tmp/ccRhC8mT.s:1089   .text.xTaskCreate:00000000 xTaskCreate
     /tmp/ccRhC8mT.s:1206   .text.vTaskDelete:00000000 $t
     /tmp/ccRhC8mT.s:1212   .text.vTaskDelete:00000000 vTaskDelete
     /tmp/ccRhC8mT.s:1394   .text.vTaskDelete:000000bc $d
     /tmp/ccRhC8mT.s:6261   .bss.uxSchedulerSuspended:00000000 uxSchedulerSuspended
     /tmp/ccRhC8mT.s:1407   .text.uxTaskPriorityGet:00000000 $t
     /tmp/ccRhC8mT.s:1413   .text.uxTaskPriorityGet:00000000 uxTaskPriorityGet
     /tmp/ccRhC8mT.s:1459   .text.uxTaskPriorityGet:0000001c $d
     /tmp/ccRhC8mT.s:1464   .text.uxTaskPriorityGetFromISR:00000000 $t
     /tmp/ccRhC8mT.s:1470   .text.uxTaskPriorityGetFromISR:00000000 uxTaskPriorityGetFromISR
     /tmp/ccRhC8mT.s:1549   .text.uxTaskPriorityGetFromISR:0000002c $d
ARM GAS  /tmp/ccRhC8mT.s 			page 233


     /tmp/ccRhC8mT.s:1554   .text.vTaskPrioritySet:00000000 $t
     /tmp/ccRhC8mT.s:1560   .text.vTaskPrioritySet:00000000 vTaskPrioritySet
     /tmp/ccRhC8mT.s:1800   .text.vTaskPrioritySet:000000d8 $d
     /tmp/ccRhC8mT.s:1807   .text.vTaskResume:00000000 $t
     /tmp/ccRhC8mT.s:1813   .text.vTaskResume:00000000 vTaskResume
     /tmp/ccRhC8mT.s:1941   .text.vTaskResume:0000007c $d
     /tmp/ccRhC8mT.s:1948   .text.xTaskResumeFromISR:00000000 $t
     /tmp/ccRhC8mT.s:1954   .text.xTaskResumeFromISR:00000000 xTaskResumeFromISR
     /tmp/ccRhC8mT.s:2120   .text.xTaskResumeFromISR:00000090 $d
     /tmp/ccRhC8mT.s:2129   .rodata.vTaskStartScheduler.str1.4:00000000 $d
     /tmp/ccRhC8mT.s:2133   .text.vTaskStartScheduler:00000000 $t
     /tmp/ccRhC8mT.s:2139   .text.vTaskStartScheduler:00000000 vTaskStartScheduler
     /tmp/ccRhC8mT.s:2242   .text.vTaskStartScheduler:0000005c $d
     /tmp/ccRhC8mT.s:6267   .bss.xIdleTaskHandle:00000000 xIdleTaskHandle
     /tmp/ccRhC8mT.s:2252   .text.vTaskEndScheduler:00000000 $t
     /tmp/ccRhC8mT.s:2258   .text.vTaskEndScheduler:00000000 vTaskEndScheduler
     /tmp/ccRhC8mT.s:2301   .text.vTaskEndScheduler:00000020 $d
     /tmp/ccRhC8mT.s:2306   .text.vTaskSuspendAll:00000000 $t
     /tmp/ccRhC8mT.s:2312   .text.vTaskSuspendAll:00000000 vTaskSuspendAll
     /tmp/ccRhC8mT.s:2329   .text.vTaskSuspendAll:0000000c $d
     /tmp/ccRhC8mT.s:2334   .text.xTaskGetTickCount:00000000 $t
     /tmp/ccRhC8mT.s:2340   .text.xTaskGetTickCount:00000000 xTaskGetTickCount
     /tmp/ccRhC8mT.s:2361   .text.xTaskGetTickCount:00000008 $d
     /tmp/ccRhC8mT.s:2366   .text.xTaskGetTickCountFromISR:00000000 $t
     /tmp/ccRhC8mT.s:2372   .text.xTaskGetTickCountFromISR:00000000 xTaskGetTickCountFromISR
     /tmp/ccRhC8mT.s:2401   .text.xTaskGetTickCountFromISR:0000000c $d
     /tmp/ccRhC8mT.s:2406   .text.uxTaskGetNumberOfTasks:00000000 $t
     /tmp/ccRhC8mT.s:2412   .text.uxTaskGetNumberOfTasks:00000000 uxTaskGetNumberOfTasks
     /tmp/ccRhC8mT.s:2428   .text.uxTaskGetNumberOfTasks:00000008 $d
     /tmp/ccRhC8mT.s:2433   .text.pcTaskGetName:00000000 $t
     /tmp/ccRhC8mT.s:2439   .text.pcTaskGetName:00000000 pcTaskGetName
     /tmp/ccRhC8mT.s:2496   .text.pcTaskGetName:00000024 $d
     /tmp/ccRhC8mT.s:2501   .text.xTaskIncrementTick:00000000 $t
     /tmp/ccRhC8mT.s:2507   .text.xTaskIncrementTick:00000000 xTaskIncrementTick
     /tmp/ccRhC8mT.s:2767   .text.xTaskIncrementTick:000000ec $d
     /tmp/ccRhC8mT.s:6285   .bss.xNumOfOverflows:00000000 xNumOfOverflows
     /tmp/ccRhC8mT.s:6297   .bss.uxPendedTicks:00000000 uxPendedTicks
     /tmp/ccRhC8mT.s:6291   .bss.xYieldPending:00000000 xYieldPending
     /tmp/ccRhC8mT.s:2782   .text.xTaskResumeAll:00000000 $t
     /tmp/ccRhC8mT.s:2788   .text.xTaskResumeAll:00000000 xTaskResumeAll
     /tmp/ccRhC8mT.s:3020   .text.xTaskResumeAll:000000d8 $d
     /tmp/ccRhC8mT.s:3032   .text.vTaskDelay:00000000 $t
     /tmp/ccRhC8mT.s:3038   .text.vTaskDelay:00000000 vTaskDelay
     /tmp/ccRhC8mT.s:3128   .text.vTaskDelay:00000048 $d
     /tmp/ccRhC8mT.s:3133   .text.vTaskSwitchContext:00000000 $t
     /tmp/ccRhC8mT.s:3139   .text.vTaskSwitchContext:00000000 vTaskSwitchContext
     /tmp/ccRhC8mT.s:3280   .text.vTaskSwitchContext:00000084 $d
     /tmp/ccRhC8mT.s:3291   .text.vTaskSuspend:00000000 $t
     /tmp/ccRhC8mT.s:3297   .text.vTaskSuspend:00000000 vTaskSuspend
     /tmp/ccRhC8mT.s:3499   .text.vTaskSuspend:000000d0 $d
     /tmp/ccRhC8mT.s:3510   .text.vTaskPlaceOnEventList:00000000 $t
     /tmp/ccRhC8mT.s:3516   .text.vTaskPlaceOnEventList:00000000 vTaskPlaceOnEventList
     /tmp/ccRhC8mT.s:3581   .text.vTaskPlaceOnEventList:0000002c $d
     /tmp/ccRhC8mT.s:3586   .text.vTaskPlaceOnUnorderedEventList:00000000 $t
     /tmp/ccRhC8mT.s:3592   .text.vTaskPlaceOnUnorderedEventList:00000000 vTaskPlaceOnUnorderedEventList
     /tmp/ccRhC8mT.s:3703   .text.vTaskPlaceOnUnorderedEventList:00000050 $d
     /tmp/ccRhC8mT.s:3709   .text.xTaskRemoveFromEventList:00000000 $t
ARM GAS  /tmp/ccRhC8mT.s 			page 234


     /tmp/ccRhC8mT.s:3715   .text.xTaskRemoveFromEventList:00000000 xTaskRemoveFromEventList
     /tmp/ccRhC8mT.s:3843   .text.xTaskRemoveFromEventList:00000074 $d
     /tmp/ccRhC8mT.s:3853   .text.vTaskRemoveFromUnorderedEventList:00000000 $t
     /tmp/ccRhC8mT.s:3859   .text.vTaskRemoveFromUnorderedEventList:00000000 vTaskRemoveFromUnorderedEventList
     /tmp/ccRhC8mT.s:3989   .text.vTaskRemoveFromUnorderedEventList:00000074 $d
     /tmp/ccRhC8mT.s:3998   .text.vTaskSetTimeOutState:00000000 $t
     /tmp/ccRhC8mT.s:4004   .text.vTaskSetTimeOutState:00000000 vTaskSetTimeOutState
     /tmp/ccRhC8mT.s:4071   .text.vTaskSetTimeOutState:00000030 $d
     /tmp/ccRhC8mT.s:4077   .text.vTaskInternalSetTimeOutState:00000000 $t
     /tmp/ccRhC8mT.s:4083   .text.vTaskInternalSetTimeOutState:00000000 vTaskInternalSetTimeOutState
     /tmp/ccRhC8mT.s:4106   .text.vTaskInternalSetTimeOutState:00000010 $d
     /tmp/ccRhC8mT.s:4112   .text.xTaskCheckForTimeOut:00000000 $t
     /tmp/ccRhC8mT.s:4118   .text.xTaskCheckForTimeOut:00000000 xTaskCheckForTimeOut
     /tmp/ccRhC8mT.s:4299   .text.xTaskCheckForTimeOut:0000007c $d
     /tmp/ccRhC8mT.s:4306   .text.vTaskMissedYield:00000000 $t
     /tmp/ccRhC8mT.s:4312   .text.vTaskMissedYield:00000000 vTaskMissedYield
     /tmp/ccRhC8mT.s:4329   .text.vTaskMissedYield:00000008 $d
     /tmp/ccRhC8mT.s:4334   .text.xTaskGetCurrentTaskHandle:00000000 $t
     /tmp/ccRhC8mT.s:4340   .text.xTaskGetCurrentTaskHandle:00000000 xTaskGetCurrentTaskHandle
     /tmp/ccRhC8mT.s:4359   .text.xTaskGetCurrentTaskHandle:00000008 $d
     /tmp/ccRhC8mT.s:4364   .text.xTaskGetSchedulerState:00000000 $t
     /tmp/ccRhC8mT.s:4370   .text.xTaskGetSchedulerState:00000000 xTaskGetSchedulerState
     /tmp/ccRhC8mT.s:4408   .text.xTaskGetSchedulerState:00000018 $d
     /tmp/ccRhC8mT.s:4414   .text.xTaskPriorityInherit:00000000 $t
     /tmp/ccRhC8mT.s:4420   .text.xTaskPriorityInherit:00000000 xTaskPriorityInherit
     /tmp/ccRhC8mT.s:4596   .text.xTaskPriorityInherit:000000b0 $d
     /tmp/ccRhC8mT.s:4603   .text.xTaskPriorityDisinherit:00000000 $t
     /tmp/ccRhC8mT.s:4609   .text.xTaskPriorityDisinherit:00000000 xTaskPriorityDisinherit
     /tmp/ccRhC8mT.s:4800   .text.xTaskPriorityDisinherit:000000a4 $d
     /tmp/ccRhC8mT.s:4807   .text.vTaskPriorityDisinheritAfterTimeout:00000000 $t
     /tmp/ccRhC8mT.s:4813   .text.vTaskPriorityDisinheritAfterTimeout:00000000 vTaskPriorityDisinheritAfterTimeout
     /tmp/ccRhC8mT.s:5011   .text.vTaskPriorityDisinheritAfterTimeout:000000b4 $d
     /tmp/ccRhC8mT.s:5018   .text.uxTaskResetEventItemValue:00000000 $t
     /tmp/ccRhC8mT.s:5024   .text.uxTaskResetEventItemValue:00000000 uxTaskResetEventItemValue
     /tmp/ccRhC8mT.s:5051   .text.uxTaskResetEventItemValue:00000014 $d
     /tmp/ccRhC8mT.s:5056   .text.pvTaskIncrementMutexHeldCount:00000000 $t
     /tmp/ccRhC8mT.s:5062   .text.pvTaskIncrementMutexHeldCount:00000000 pvTaskIncrementMutexHeldCount
     /tmp/ccRhC8mT.s:5093   .text.pvTaskIncrementMutexHeldCount:00000018 $d
     /tmp/ccRhC8mT.s:5098   .text.ulTaskNotifyTake:00000000 $t
     /tmp/ccRhC8mT.s:5104   .text.ulTaskNotifyTake:00000000 ulTaskNotifyTake
     /tmp/ccRhC8mT.s:5226   .text.ulTaskNotifyTake:00000074 $d
     /tmp/ccRhC8mT.s:5231   .text.xTaskNotifyWait:00000000 $t
     /tmp/ccRhC8mT.s:5237   .text.xTaskNotifyWait:00000000 xTaskNotifyWait
     /tmp/ccRhC8mT.s:5379   .text.xTaskNotifyWait:00000094 $d
     /tmp/ccRhC8mT.s:5384   .text.xTaskGenericNotify:00000000 $t
     /tmp/ccRhC8mT.s:5390   .text.xTaskGenericNotify:00000000 xTaskGenericNotify
     /tmp/ccRhC8mT.s:5447   .text.xTaskGenericNotify:0000002c $d
     /tmp/ccRhC8mT.s:5452   .text.xTaskGenericNotify:00000030 $t
     /tmp/ccRhC8mT.s:5627   .text.xTaskGenericNotify:000000d4 $d
     /tmp/ccRhC8mT.s:5634   .text.xTaskGenericNotifyFromISR:00000000 $t
     /tmp/ccRhC8mT.s:5640   .text.xTaskGenericNotifyFromISR:00000000 xTaskGenericNotifyFromISR
     /tmp/ccRhC8mT.s:5719   .text.xTaskGenericNotifyFromISR:00000042 $d
     /tmp/ccRhC8mT.s:5724   .text.xTaskGenericNotifyFromISR:00000046 $t
     /tmp/ccRhC8mT.s:5939   .text.xTaskGenericNotifyFromISR:000000f4 $d
     /tmp/ccRhC8mT.s:5949   .text.vTaskNotifyGiveFromISR:00000000 $t
     /tmp/ccRhC8mT.s:5955   .text.vTaskNotifyGiveFromISR:00000000 vTaskNotifyGiveFromISR
     /tmp/ccRhC8mT.s:6171   .text.vTaskNotifyGiveFromISR:000000bc $d
ARM GAS  /tmp/ccRhC8mT.s 			page 235


     /tmp/ccRhC8mT.s:6181   .text.xTaskNotifyStateClear:00000000 $t
     /tmp/ccRhC8mT.s:6187   .text.xTaskNotifyStateClear:00000000 xTaskNotifyStateClear
     /tmp/ccRhC8mT.s:6253   .text.xTaskNotifyStateClear:00000030 $d
     /tmp/ccRhC8mT.s:6258   .bss.uxSchedulerSuspended:00000000 $d
     /tmp/ccRhC8mT.s:6264   .bss.xIdleTaskHandle:00000000 $d
     /tmp/ccRhC8mT.s:6270   .bss.xNextTaskUnblockTime:00000000 $d
     /tmp/ccRhC8mT.s:6276   .bss.uxTaskNumber:00000000 $d
     /tmp/ccRhC8mT.s:6282   .bss.xNumOfOverflows:00000000 $d
     /tmp/ccRhC8mT.s:6288   .bss.xYieldPending:00000000 $d
     /tmp/ccRhC8mT.s:6294   .bss.uxPendedTicks:00000000 $d
     /tmp/ccRhC8mT.s:6300   .bss.xSchedulerRunning:00000000 $d
     /tmp/ccRhC8mT.s:6306   .bss.uxTopReadyPriority:00000000 $d
     /tmp/ccRhC8mT.s:6312   .bss.xTickCount:00000000 $d
     /tmp/ccRhC8mT.s:6318   .bss.uxCurrentNumberOfTasks:00000000 $d
     /tmp/ccRhC8mT.s:6324   .bss.xSuspendedTaskList:00000000 $d
     /tmp/ccRhC8mT.s:6330   .bss.uxDeletedTasksWaitingCleanUp:00000000 $d
     /tmp/ccRhC8mT.s:6336   .bss.xTasksWaitingTermination:00000000 $d
     /tmp/ccRhC8mT.s:6342   .bss.xPendingReadyList:00000000 $d
     /tmp/ccRhC8mT.s:6348   .bss.pxOverflowDelayedTaskList:00000000 $d
     /tmp/ccRhC8mT.s:6354   .bss.pxDelayedTaskList:00000000 $d
     /tmp/ccRhC8mT.s:6360   .bss.xDelayedTaskList2:00000000 $d
     /tmp/ccRhC8mT.s:6366   .bss.xDelayedTaskList1:00000000 $d
     /tmp/ccRhC8mT.s:6372   .bss.pxReadyTasksLists:00000000 $d
     /tmp/ccRhC8mT.s:6379   .bss.pxCurrentTCB:00000000 $d

UNDEFINED SYMBOLS
vListInitialiseItem
pxPortInitialiseStack
vListInitialise
vPortEnterCritical
vListInsertEnd
vPortExitCritical
vPortFree
uxListRemove
vListInsert
pvPortMalloc
vPortValidateInterruptPriority
vApplicationGetIdleTaskMemory
xPortStartScheduler
vPortEndScheduler
