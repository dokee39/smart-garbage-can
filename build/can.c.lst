ARM GAS  /tmp/ccNwzy5Q.s 			page 1


   1              		.cpu cortex-m3
   2              		.arch armv7-m
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"can.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.file 1 "Core/Src/can.c"
  18              		.section	.text.MX_CAN_Init,"ax",%progbits
  19              		.align	1
  20              		.global	MX_CAN_Init
  21              		.syntax unified
  22              		.thumb
  23              		.thumb_func
  25              	MX_CAN_Init:
  26              	.LFB65:
   1:Core/Src/can.c **** /* USER CODE BEGIN Header */
   2:Core/Src/can.c **** /**
   3:Core/Src/can.c ****   ******************************************************************************
   4:Core/Src/can.c ****   * @file    can.c
   5:Core/Src/can.c ****   * @brief   This file provides code for the configuration
   6:Core/Src/can.c ****   *          of the CAN instances.
   7:Core/Src/can.c ****   ******************************************************************************
   8:Core/Src/can.c ****   * @attention
   9:Core/Src/can.c ****   *
  10:Core/Src/can.c ****   * Copyright (c) 2024 STMicroelectronics.
  11:Core/Src/can.c ****   * All rights reserved.
  12:Core/Src/can.c ****   *
  13:Core/Src/can.c ****   * This software is licensed under terms that can be found in the LICENSE file
  14:Core/Src/can.c ****   * in the root directory of this software component.
  15:Core/Src/can.c ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  16:Core/Src/can.c ****   *
  17:Core/Src/can.c ****   ******************************************************************************
  18:Core/Src/can.c ****   */
  19:Core/Src/can.c **** /* USER CODE END Header */
  20:Core/Src/can.c **** /* Includes ------------------------------------------------------------------*/
  21:Core/Src/can.c **** #include "can.h"
  22:Core/Src/can.c **** 
  23:Core/Src/can.c **** /* USER CODE BEGIN 0 */
  24:Core/Src/can.c **** 
  25:Core/Src/can.c **** /* USER CODE END 0 */
  26:Core/Src/can.c **** 
  27:Core/Src/can.c **** CAN_HandleTypeDef hcan;
  28:Core/Src/can.c **** 
  29:Core/Src/can.c **** /* CAN init function */
  30:Core/Src/can.c **** void MX_CAN_Init(void)
  31:Core/Src/can.c **** {
  27              		.loc 1 31 1 view -0
ARM GAS  /tmp/ccNwzy5Q.s 			page 2


  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 0
  30              		@ frame_needed = 0, uses_anonymous_args = 0
  31 0000 08B5     		push	{r3, lr}
  32              	.LCFI0:
  33              		.cfi_def_cfa_offset 8
  34              		.cfi_offset 3, -8
  35              		.cfi_offset 14, -4
  32:Core/Src/can.c **** 
  33:Core/Src/can.c ****   /* USER CODE BEGIN CAN_Init 0 */
  34:Core/Src/can.c **** 
  35:Core/Src/can.c ****   /* USER CODE END CAN_Init 0 */
  36:Core/Src/can.c **** 
  37:Core/Src/can.c ****   /* USER CODE BEGIN CAN_Init 1 */
  38:Core/Src/can.c **** 
  39:Core/Src/can.c ****   /* USER CODE END CAN_Init 1 */
  40:Core/Src/can.c ****   hcan.Instance = CAN1;
  36              		.loc 1 40 3 view .LVU1
  37              		.loc 1 40 17 is_stmt 0 view .LVU2
  38 0002 0D48     		ldr	r0, .L5
  39 0004 0D4B     		ldr	r3, .L5+4
  40 0006 0360     		str	r3, [r0]
  41:Core/Src/can.c ****   hcan.Init.Prescaler = 4;
  41              		.loc 1 41 3 is_stmt 1 view .LVU3
  42              		.loc 1 41 23 is_stmt 0 view .LVU4
  43 0008 0423     		movs	r3, #4
  44 000a 4360     		str	r3, [r0, #4]
  42:Core/Src/can.c ****   hcan.Init.Mode = CAN_MODE_NORMAL;
  45              		.loc 1 42 3 is_stmt 1 view .LVU5
  46              		.loc 1 42 18 is_stmt 0 view .LVU6
  47 000c 0023     		movs	r3, #0
  48 000e 8360     		str	r3, [r0, #8]
  43:Core/Src/can.c ****   hcan.Init.SyncJumpWidth = CAN_SJW_1TQ;
  49              		.loc 1 43 3 is_stmt 1 view .LVU7
  50              		.loc 1 43 27 is_stmt 0 view .LVU8
  51 0010 C360     		str	r3, [r0, #12]
  44:Core/Src/can.c ****   hcan.Init.TimeSeg1 = CAN_BS1_6TQ;
  52              		.loc 1 44 3 is_stmt 1 view .LVU9
  53              		.loc 1 44 22 is_stmt 0 view .LVU10
  54 0012 4FF4A022 		mov	r2, #327680
  55 0016 0261     		str	r2, [r0, #16]
  45:Core/Src/can.c ****   hcan.Init.TimeSeg2 = CAN_BS2_2TQ;
  56              		.loc 1 45 3 is_stmt 1 view .LVU11
  57              		.loc 1 45 22 is_stmt 0 view .LVU12
  58 0018 4FF48012 		mov	r2, #1048576
  59 001c 4261     		str	r2, [r0, #20]
  46:Core/Src/can.c ****   hcan.Init.TimeTriggeredMode = DISABLE;
  60              		.loc 1 46 3 is_stmt 1 view .LVU13
  61              		.loc 1 46 31 is_stmt 0 view .LVU14
  62 001e 0376     		strb	r3, [r0, #24]
  47:Core/Src/can.c ****   hcan.Init.AutoBusOff = DISABLE;
  63              		.loc 1 47 3 is_stmt 1 view .LVU15
  64              		.loc 1 47 24 is_stmt 0 view .LVU16
  65 0020 4376     		strb	r3, [r0, #25]
  48:Core/Src/can.c ****   hcan.Init.AutoWakeUp = DISABLE;
  66              		.loc 1 48 3 is_stmt 1 view .LVU17
  67              		.loc 1 48 24 is_stmt 0 view .LVU18
ARM GAS  /tmp/ccNwzy5Q.s 			page 3


  68 0022 8376     		strb	r3, [r0, #26]
  49:Core/Src/can.c ****   hcan.Init.AutoRetransmission = DISABLE;
  69              		.loc 1 49 3 is_stmt 1 view .LVU19
  70              		.loc 1 49 32 is_stmt 0 view .LVU20
  71 0024 C376     		strb	r3, [r0, #27]
  50:Core/Src/can.c ****   hcan.Init.ReceiveFifoLocked = DISABLE;
  72              		.loc 1 50 3 is_stmt 1 view .LVU21
  73              		.loc 1 50 31 is_stmt 0 view .LVU22
  74 0026 0377     		strb	r3, [r0, #28]
  51:Core/Src/can.c ****   hcan.Init.TransmitFifoPriority = DISABLE;
  75              		.loc 1 51 3 is_stmt 1 view .LVU23
  76              		.loc 1 51 34 is_stmt 0 view .LVU24
  77 0028 4377     		strb	r3, [r0, #29]
  52:Core/Src/can.c ****   if (HAL_CAN_Init(&hcan) != HAL_OK)
  78              		.loc 1 52 3 is_stmt 1 view .LVU25
  79              		.loc 1 52 7 is_stmt 0 view .LVU26
  80 002a FFF7FEFF 		bl	HAL_CAN_Init
  81              	.LVL0:
  82              		.loc 1 52 6 discriminator 1 view .LVU27
  83 002e 00B9     		cbnz	r0, .L4
  84              	.L1:
  53:Core/Src/can.c ****   {
  54:Core/Src/can.c ****     Error_Handler();
  55:Core/Src/can.c ****   }
  56:Core/Src/can.c ****   /* USER CODE BEGIN CAN_Init 2 */
  57:Core/Src/can.c **** 
  58:Core/Src/can.c ****   /* USER CODE END CAN_Init 2 */
  59:Core/Src/can.c **** 
  60:Core/Src/can.c **** }
  85              		.loc 1 60 1 view .LVU28
  86 0030 08BD     		pop	{r3, pc}
  87              	.L4:
  54:Core/Src/can.c ****   }
  88              		.loc 1 54 5 is_stmt 1 view .LVU29
  89 0032 FFF7FEFF 		bl	Error_Handler
  90              	.LVL1:
  91              		.loc 1 60 1 is_stmt 0 view .LVU30
  92 0036 FBE7     		b	.L1
  93              	.L6:
  94              		.align	2
  95              	.L5:
  96 0038 00000000 		.word	hcan
  97 003c 00640040 		.word	1073767424
  98              		.cfi_endproc
  99              	.LFE65:
 101              		.section	.text.HAL_CAN_MspInit,"ax",%progbits
 102              		.align	1
 103              		.global	HAL_CAN_MspInit
 104              		.syntax unified
 105              		.thumb
 106              		.thumb_func
 108              	HAL_CAN_MspInit:
 109              	.LVL2:
 110              	.LFB66:
  61:Core/Src/can.c **** 
  62:Core/Src/can.c **** void HAL_CAN_MspInit(CAN_HandleTypeDef* canHandle)
  63:Core/Src/can.c **** {
ARM GAS  /tmp/ccNwzy5Q.s 			page 4


 111              		.loc 1 63 1 is_stmt 1 view -0
 112              		.cfi_startproc
 113              		@ args = 0, pretend = 0, frame = 24
 114              		@ frame_needed = 0, uses_anonymous_args = 0
 115              		.loc 1 63 1 is_stmt 0 view .LVU32
 116 0000 10B5     		push	{r4, lr}
 117              	.LCFI1:
 118              		.cfi_def_cfa_offset 8
 119              		.cfi_offset 4, -8
 120              		.cfi_offset 14, -4
 121 0002 86B0     		sub	sp, sp, #24
 122              	.LCFI2:
 123              		.cfi_def_cfa_offset 32
  64:Core/Src/can.c **** 
  65:Core/Src/can.c ****   GPIO_InitTypeDef GPIO_InitStruct = {0};
 124              		.loc 1 65 3 is_stmt 1 view .LVU33
 125              		.loc 1 65 20 is_stmt 0 view .LVU34
 126 0004 0023     		movs	r3, #0
 127 0006 0293     		str	r3, [sp, #8]
 128 0008 0393     		str	r3, [sp, #12]
 129 000a 0493     		str	r3, [sp, #16]
 130 000c 0593     		str	r3, [sp, #20]
  66:Core/Src/can.c ****   if(canHandle->Instance==CAN1)
 131              		.loc 1 66 3 is_stmt 1 view .LVU35
 132              		.loc 1 66 15 is_stmt 0 view .LVU36
 133 000e 0268     		ldr	r2, [r0]
 134              		.loc 1 66 5 view .LVU37
 135 0010 224B     		ldr	r3, .L11
 136 0012 9A42     		cmp	r2, r3
 137 0014 01D0     		beq	.L10
 138              	.LVL3:
 139              	.L7:
  67:Core/Src/can.c ****   {
  68:Core/Src/can.c ****   /* USER CODE BEGIN CAN1_MspInit 0 */
  69:Core/Src/can.c **** 
  70:Core/Src/can.c ****   /* USER CODE END CAN1_MspInit 0 */
  71:Core/Src/can.c ****     /* CAN1 clock enable */
  72:Core/Src/can.c ****     __HAL_RCC_CAN1_CLK_ENABLE();
  73:Core/Src/can.c **** 
  74:Core/Src/can.c ****     __HAL_RCC_GPIOB_CLK_ENABLE();
  75:Core/Src/can.c ****     /**CAN GPIO Configuration
  76:Core/Src/can.c ****     PB8     ------> CAN_RX
  77:Core/Src/can.c ****     PB9     ------> CAN_TX
  78:Core/Src/can.c ****     */
  79:Core/Src/can.c ****     GPIO_InitStruct.Pin = GPIO_PIN_8;
  80:Core/Src/can.c ****     GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
  81:Core/Src/can.c ****     GPIO_InitStruct.Pull = GPIO_NOPULL;
  82:Core/Src/can.c ****     HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
  83:Core/Src/can.c **** 
  84:Core/Src/can.c ****     GPIO_InitStruct.Pin = GPIO_PIN_9;
  85:Core/Src/can.c ****     GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
  86:Core/Src/can.c ****     GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
  87:Core/Src/can.c ****     HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
  88:Core/Src/can.c **** 
  89:Core/Src/can.c ****     __HAL_AFIO_REMAP_CAN1_2();
  90:Core/Src/can.c **** 
  91:Core/Src/can.c ****     /* CAN1 interrupt Init */
ARM GAS  /tmp/ccNwzy5Q.s 			page 5


  92:Core/Src/can.c ****     HAL_NVIC_SetPriority(USB_LP_CAN1_RX0_IRQn, 5, 0);
  93:Core/Src/can.c ****     HAL_NVIC_EnableIRQ(USB_LP_CAN1_RX0_IRQn);
  94:Core/Src/can.c ****     HAL_NVIC_SetPriority(CAN1_RX1_IRQn, 5, 0);
  95:Core/Src/can.c ****     HAL_NVIC_EnableIRQ(CAN1_RX1_IRQn);
  96:Core/Src/can.c ****   /* USER CODE BEGIN CAN1_MspInit 1 */
  97:Core/Src/can.c **** 
  98:Core/Src/can.c ****   /* USER CODE END CAN1_MspInit 1 */
  99:Core/Src/can.c ****   }
 100:Core/Src/can.c **** }
 140              		.loc 1 100 1 view .LVU38
 141 0016 06B0     		add	sp, sp, #24
 142              	.LCFI3:
 143              		.cfi_remember_state
 144              		.cfi_def_cfa_offset 8
 145              		@ sp needed
 146 0018 10BD     		pop	{r4, pc}
 147              	.LVL4:
 148              	.L10:
 149              	.LCFI4:
 150              		.cfi_restore_state
  72:Core/Src/can.c **** 
 151              		.loc 1 72 5 is_stmt 1 view .LVU39
 152              	.LBB2:
  72:Core/Src/can.c **** 
 153              		.loc 1 72 5 view .LVU40
  72:Core/Src/can.c **** 
 154              		.loc 1 72 5 view .LVU41
 155 001a 03F5D633 		add	r3, r3, #109568
 156 001e DA69     		ldr	r2, [r3, #28]
 157 0020 42F00072 		orr	r2, r2, #33554432
 158 0024 DA61     		str	r2, [r3, #28]
  72:Core/Src/can.c **** 
 159              		.loc 1 72 5 view .LVU42
 160 0026 DA69     		ldr	r2, [r3, #28]
 161 0028 02F00072 		and	r2, r2, #33554432
 162 002c 0092     		str	r2, [sp]
  72:Core/Src/can.c **** 
 163              		.loc 1 72 5 view .LVU43
 164 002e 009A     		ldr	r2, [sp]
 165              	.LBE2:
  72:Core/Src/can.c **** 
 166              		.loc 1 72 5 view .LVU44
  74:Core/Src/can.c ****     /**CAN GPIO Configuration
 167              		.loc 1 74 5 view .LVU45
 168              	.LBB3:
  74:Core/Src/can.c ****     /**CAN GPIO Configuration
 169              		.loc 1 74 5 view .LVU46
  74:Core/Src/can.c ****     /**CAN GPIO Configuration
 170              		.loc 1 74 5 view .LVU47
 171 0030 9A69     		ldr	r2, [r3, #24]
 172 0032 42F00802 		orr	r2, r2, #8
 173 0036 9A61     		str	r2, [r3, #24]
  74:Core/Src/can.c ****     /**CAN GPIO Configuration
 174              		.loc 1 74 5 view .LVU48
 175 0038 9B69     		ldr	r3, [r3, #24]
 176 003a 03F00803 		and	r3, r3, #8
 177 003e 0193     		str	r3, [sp, #4]
ARM GAS  /tmp/ccNwzy5Q.s 			page 6


  74:Core/Src/can.c ****     /**CAN GPIO Configuration
 178              		.loc 1 74 5 view .LVU49
 179 0040 019B     		ldr	r3, [sp, #4]
 180              	.LBE3:
  74:Core/Src/can.c ****     /**CAN GPIO Configuration
 181              		.loc 1 74 5 view .LVU50
  79:Core/Src/can.c ****     GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 182              		.loc 1 79 5 view .LVU51
  79:Core/Src/can.c ****     GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 183              		.loc 1 79 25 is_stmt 0 view .LVU52
 184 0042 4FF48073 		mov	r3, #256
 185 0046 0293     		str	r3, [sp, #8]
  80:Core/Src/can.c ****     GPIO_InitStruct.Pull = GPIO_NOPULL;
 186              		.loc 1 80 5 is_stmt 1 view .LVU53
  81:Core/Src/can.c ****     HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 187              		.loc 1 81 5 view .LVU54
  82:Core/Src/can.c **** 
 188              		.loc 1 82 5 view .LVU55
 189 0048 154C     		ldr	r4, .L11+4
 190 004a 02A9     		add	r1, sp, #8
 191 004c 2046     		mov	r0, r4
 192              	.LVL5:
  82:Core/Src/can.c **** 
 193              		.loc 1 82 5 is_stmt 0 view .LVU56
 194 004e FFF7FEFF 		bl	HAL_GPIO_Init
 195              	.LVL6:
  84:Core/Src/can.c ****     GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 196              		.loc 1 84 5 is_stmt 1 view .LVU57
  84:Core/Src/can.c ****     GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 197              		.loc 1 84 25 is_stmt 0 view .LVU58
 198 0052 4FF40073 		mov	r3, #512
 199 0056 0293     		str	r3, [sp, #8]
  85:Core/Src/can.c ****     GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 200              		.loc 1 85 5 is_stmt 1 view .LVU59
  85:Core/Src/can.c ****     GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 201              		.loc 1 85 26 is_stmt 0 view .LVU60
 202 0058 0223     		movs	r3, #2
 203 005a 0393     		str	r3, [sp, #12]
  86:Core/Src/can.c ****     HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 204              		.loc 1 86 5 is_stmt 1 view .LVU61
  86:Core/Src/can.c ****     HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 205              		.loc 1 86 27 is_stmt 0 view .LVU62
 206 005c 0323     		movs	r3, #3
 207 005e 0593     		str	r3, [sp, #20]
  87:Core/Src/can.c **** 
 208              		.loc 1 87 5 is_stmt 1 view .LVU63
 209 0060 02A9     		add	r1, sp, #8
 210 0062 2046     		mov	r0, r4
 211 0064 FFF7FEFF 		bl	HAL_GPIO_Init
 212              	.LVL7:
  89:Core/Src/can.c **** 
 213              		.loc 1 89 5 view .LVU64
 214              	.LBB4:
  89:Core/Src/can.c **** 
 215              		.loc 1 89 5 view .LVU65
 216 0068 0E4A     		ldr	r2, .L11+8
 217 006a 5368     		ldr	r3, [r2, #4]
ARM GAS  /tmp/ccNwzy5Q.s 			page 7


 218              	.LVL8:
  89:Core/Src/can.c **** 
 219              		.loc 1 89 5 view .LVU66
 220 006c 23F4C043 		bic	r3, r3, #24576
 221              	.LVL9:
  89:Core/Src/can.c **** 
 222              		.loc 1 89 5 view .LVU67
  89:Core/Src/can.c **** 
 223              		.loc 1 89 5 view .LVU68
 224 0070 43F0E063 		orr	r3, r3, #117440512
 225              	.LVL10:
  89:Core/Src/can.c **** 
 226              		.loc 1 89 5 is_stmt 0 view .LVU69
 227 0074 43F48043 		orr	r3, r3, #16384
 228              	.LVL11:
  89:Core/Src/can.c **** 
 229              		.loc 1 89 5 is_stmt 1 view .LVU70
 230 0078 5360     		str	r3, [r2, #4]
 231              	.LBE4:
  89:Core/Src/can.c **** 
 232              		.loc 1 89 5 view .LVU71
  92:Core/Src/can.c ****     HAL_NVIC_EnableIRQ(USB_LP_CAN1_RX0_IRQn);
 233              		.loc 1 92 5 view .LVU72
 234 007a 0022     		movs	r2, #0
 235 007c 0521     		movs	r1, #5
 236 007e 1420     		movs	r0, #20
 237 0080 FFF7FEFF 		bl	HAL_NVIC_SetPriority
 238              	.LVL12:
  93:Core/Src/can.c ****     HAL_NVIC_SetPriority(CAN1_RX1_IRQn, 5, 0);
 239              		.loc 1 93 5 view .LVU73
 240 0084 1420     		movs	r0, #20
 241 0086 FFF7FEFF 		bl	HAL_NVIC_EnableIRQ
 242              	.LVL13:
  94:Core/Src/can.c ****     HAL_NVIC_EnableIRQ(CAN1_RX1_IRQn);
 243              		.loc 1 94 5 view .LVU74
 244 008a 0022     		movs	r2, #0
 245 008c 0521     		movs	r1, #5
 246 008e 1520     		movs	r0, #21
 247 0090 FFF7FEFF 		bl	HAL_NVIC_SetPriority
 248              	.LVL14:
  95:Core/Src/can.c ****   /* USER CODE BEGIN CAN1_MspInit 1 */
 249              		.loc 1 95 5 view .LVU75
 250 0094 1520     		movs	r0, #21
 251 0096 FFF7FEFF 		bl	HAL_NVIC_EnableIRQ
 252              	.LVL15:
 253              		.loc 1 100 1 is_stmt 0 view .LVU76
 254 009a BCE7     		b	.L7
 255              	.L12:
 256              		.align	2
 257              	.L11:
 258 009c 00640040 		.word	1073767424
 259 00a0 000C0140 		.word	1073810432
 260 00a4 00000140 		.word	1073807360
 261              		.cfi_endproc
 262              	.LFE66:
 264              		.section	.text.HAL_CAN_MspDeInit,"ax",%progbits
 265              		.align	1
ARM GAS  /tmp/ccNwzy5Q.s 			page 8


 266              		.global	HAL_CAN_MspDeInit
 267              		.syntax unified
 268              		.thumb
 269              		.thumb_func
 271              	HAL_CAN_MspDeInit:
 272              	.LVL16:
 273              	.LFB67:
 101:Core/Src/can.c **** 
 102:Core/Src/can.c **** void HAL_CAN_MspDeInit(CAN_HandleTypeDef* canHandle)
 103:Core/Src/can.c **** {
 274              		.loc 1 103 1 is_stmt 1 view -0
 275              		.cfi_startproc
 276              		@ args = 0, pretend = 0, frame = 0
 277              		@ frame_needed = 0, uses_anonymous_args = 0
 278              		.loc 1 103 1 is_stmt 0 view .LVU78
 279 0000 08B5     		push	{r3, lr}
 280              	.LCFI5:
 281              		.cfi_def_cfa_offset 8
 282              		.cfi_offset 3, -8
 283              		.cfi_offset 14, -4
 104:Core/Src/can.c **** 
 105:Core/Src/can.c ****   if(canHandle->Instance==CAN1)
 284              		.loc 1 105 3 is_stmt 1 view .LVU79
 285              		.loc 1 105 15 is_stmt 0 view .LVU80
 286 0002 0268     		ldr	r2, [r0]
 287              		.loc 1 105 5 view .LVU81
 288 0004 0A4B     		ldr	r3, .L17
 289 0006 9A42     		cmp	r2, r3
 290 0008 00D0     		beq	.L16
 291              	.LVL17:
 292              	.L13:
 106:Core/Src/can.c ****   {
 107:Core/Src/can.c ****   /* USER CODE BEGIN CAN1_MspDeInit 0 */
 108:Core/Src/can.c **** 
 109:Core/Src/can.c ****   /* USER CODE END CAN1_MspDeInit 0 */
 110:Core/Src/can.c ****     /* Peripheral clock disable */
 111:Core/Src/can.c ****     __HAL_RCC_CAN1_CLK_DISABLE();
 112:Core/Src/can.c **** 
 113:Core/Src/can.c ****     /**CAN GPIO Configuration
 114:Core/Src/can.c ****     PB8     ------> CAN_RX
 115:Core/Src/can.c ****     PB9     ------> CAN_TX
 116:Core/Src/can.c ****     */
 117:Core/Src/can.c ****     HAL_GPIO_DeInit(GPIOB, GPIO_PIN_8|GPIO_PIN_9);
 118:Core/Src/can.c **** 
 119:Core/Src/can.c ****     /* CAN1 interrupt Deinit */
 120:Core/Src/can.c ****     HAL_NVIC_DisableIRQ(USB_LP_CAN1_RX0_IRQn);
 121:Core/Src/can.c ****     HAL_NVIC_DisableIRQ(CAN1_RX1_IRQn);
 122:Core/Src/can.c ****   /* USER CODE BEGIN CAN1_MspDeInit 1 */
 123:Core/Src/can.c **** 
 124:Core/Src/can.c ****   /* USER CODE END CAN1_MspDeInit 1 */
 125:Core/Src/can.c ****   }
 126:Core/Src/can.c **** }
 293              		.loc 1 126 1 view .LVU82
 294 000a 08BD     		pop	{r3, pc}
 295              	.LVL18:
 296              	.L16:
 111:Core/Src/can.c **** 
ARM GAS  /tmp/ccNwzy5Q.s 			page 9


 297              		.loc 1 111 5 is_stmt 1 view .LVU83
 298 000c 094A     		ldr	r2, .L17+4
 299 000e D369     		ldr	r3, [r2, #28]
 300 0010 23F00073 		bic	r3, r3, #33554432
 301 0014 D361     		str	r3, [r2, #28]
 117:Core/Src/can.c **** 
 302              		.loc 1 117 5 view .LVU84
 303 0016 4FF44071 		mov	r1, #768
 304 001a 0748     		ldr	r0, .L17+8
 305              	.LVL19:
 117:Core/Src/can.c **** 
 306              		.loc 1 117 5 is_stmt 0 view .LVU85
 307 001c FFF7FEFF 		bl	HAL_GPIO_DeInit
 308              	.LVL20:
 120:Core/Src/can.c ****     HAL_NVIC_DisableIRQ(CAN1_RX1_IRQn);
 309              		.loc 1 120 5 is_stmt 1 view .LVU86
 310 0020 1420     		movs	r0, #20
 311 0022 FFF7FEFF 		bl	HAL_NVIC_DisableIRQ
 312              	.LVL21:
 121:Core/Src/can.c ****   /* USER CODE BEGIN CAN1_MspDeInit 1 */
 313              		.loc 1 121 5 view .LVU87
 314 0026 1520     		movs	r0, #21
 315 0028 FFF7FEFF 		bl	HAL_NVIC_DisableIRQ
 316              	.LVL22:
 317              		.loc 1 126 1 is_stmt 0 view .LVU88
 318 002c EDE7     		b	.L13
 319              	.L18:
 320 002e 00BF     		.align	2
 321              	.L17:
 322 0030 00640040 		.word	1073767424
 323 0034 00100240 		.word	1073876992
 324 0038 000C0140 		.word	1073810432
 325              		.cfi_endproc
 326              	.LFE67:
 328              		.global	hcan
 329              		.section	.bss.hcan,"aw",%nobits
 330              		.align	2
 333              	hcan:
 334 0000 00000000 		.space	40
 334      00000000 
 334      00000000 
 334      00000000 
 334      00000000 
 335              		.text
 336              	.Letext0:
 337              		.file 2 "Drivers/CMSIS/Device/ST/STM32F1xx/Include/stm32f103xe.h"
 338              		.file 3 "/usr/arm-none-eabi/include/machine/_default_types.h"
 339              		.file 4 "/usr/arm-none-eabi/include/sys/_stdint.h"
 340              		.file 5 "Drivers/CMSIS/Device/ST/STM32F1xx/Include/stm32f1xx.h"
 341              		.file 6 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_def.h"
 342              		.file 7 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_gpio.h"
 343              		.file 8 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_can.h"
 344              		.file 9 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_cortex.h"
 345              		.file 10 "Core/Inc/can.h"
 346              		.file 11 "Core/Inc/main.h"
ARM GAS  /tmp/ccNwzy5Q.s 			page 10


DEFINED SYMBOLS
                            *ABS*:00000000 can.c
     /tmp/ccNwzy5Q.s:19     .text.MX_CAN_Init:00000000 $t
     /tmp/ccNwzy5Q.s:25     .text.MX_CAN_Init:00000000 MX_CAN_Init
     /tmp/ccNwzy5Q.s:96     .text.MX_CAN_Init:00000038 $d
     /tmp/ccNwzy5Q.s:333    .bss.hcan:00000000 hcan
     /tmp/ccNwzy5Q.s:102    .text.HAL_CAN_MspInit:00000000 $t
     /tmp/ccNwzy5Q.s:108    .text.HAL_CAN_MspInit:00000000 HAL_CAN_MspInit
     /tmp/ccNwzy5Q.s:258    .text.HAL_CAN_MspInit:0000009c $d
     /tmp/ccNwzy5Q.s:265    .text.HAL_CAN_MspDeInit:00000000 $t
     /tmp/ccNwzy5Q.s:271    .text.HAL_CAN_MspDeInit:00000000 HAL_CAN_MspDeInit
     /tmp/ccNwzy5Q.s:322    .text.HAL_CAN_MspDeInit:00000030 $d
     /tmp/ccNwzy5Q.s:330    .bss.hcan:00000000 $d

UNDEFINED SYMBOLS
HAL_CAN_Init
Error_Handler
HAL_GPIO_Init
HAL_NVIC_SetPriority
HAL_NVIC_EnableIRQ
HAL_GPIO_DeInit
HAL_NVIC_DisableIRQ
